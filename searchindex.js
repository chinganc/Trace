Search.setIndex({"alltitles": {"A Reinforcement Learning Agent": [[432, "a-reinforcement-learning-agent"]], "Adding constraints": [[438, "adding-constraints"]], "Agent Architecture": [[433, "agent-architecture"]], "Backpropagation": [[438, "backpropagation"]], "Basic back-propagation and gradient descent with PyTorch": [[435, "basic-back-propagation-and-gradient-descent-with-pytorch"]], "Basics": [[434, "basics"]], "Batch Optimization": [[437, "batch-optimization"]], "Batching Non-Commutative Feedbacks": [[437, "batching-non-commutative-feedbacks"]], "BigBench-Hard": [[426, "bigbench-hard"]], "Broadcasting": [[434, "broadcasting"]], "Building Custom Optimizer": [[435, "building-custom-optimizer"]], "Coder-Verifier Framework using Trace": [[431, "coder-verifier-framework-using-trace"]], "Creating the initial policy": [[424, "creating-the-initial-policy"]], "Define An Agent Using Trace": [[432, "define-an-agent-using-trace"]], "Define Chat Function": [[425, "define-chat-function"]], "Define Game Components": [[425, "define-game-components"]], "Define a Policy class with multiple trainable functions": [[424, "define-a-policy-class-with-multiple-trainable-functions"]], "Define a Traced Class": [[426, "define-a-traced-class"]], "Define the Evaluation Function": [[426, "define-the-evaluation-function"]], "Define the Optimization Process": [[432, "define-the-optimization-process"]], "Define the end_game function": [[425, "define-the-end-game-function"]], "Define the optimizer": [[426, "define-the-optimizer"]], "Developer Installation": [[430, "developer-installation"]], "Difference to Libraries like AutoGen, AG2, OpenAI Swarm, Llama Stack": [[428, "difference-to-libraries-like-autogen-ag2-openai-swarm-llama-stack"]], "Difference to Libraries like TextGrad": [[428, "difference-to-libraries-like-textgrad"]], "Emergent Pro-Social Behaviors": [[433, "emergent-pro-social-behaviors"]], "Environment Setup": [[424, "environment-setup"], [427, "environment-setup"]], "Error Handling": [[436, "error-handling"]], "Example of Full Optimization Loop": [[438, "example-of-full-optimization-loop"]], "Example of hyper-parameter optimization for ML models": [[438, "example-of-hyper-parameter-optimization-for-ml-models"]], "Example of optimizing functions": [[438, "example-of-optimizing-functions"]], "Example of optimizing strings": [[438, "example-of-optimizing-strings"]], "Execute the Optimization Process": [[427, "execute-the-optimization-process"]], "FAQ": [[428, "faq"]], "Helper Function": [[426, "helper-function"]], "Helper Functions to rollout and evaluate the policy": [[424, "helper-functions-to-rollout-and-evaluate-the-policy"]], "Installation Command": [[430, null]], "Introduction": [[424, "introduction"], [425, "introduction"], [426, "introduction"], [427, "introduction"]], "Meta-World": [[427, "meta-world"]], "Multi-Agent Synchronous Optimization": [[433, "multi-agent-synchronous-optimization"]], "Multi-Agent: Negotiation Arena": [[425, "multi-agent-negotiation-arena"]], "Node and MessageNode": [[434, "node-and-messagenode"]], "Nodes and Python Data Structure": [[434, "nodes-and-python-data-structure"]], "Operations on Nodes": [[434, "operations-on-nodes"]], "Optimization": [[438, "optimization"]], "Optimize Prompts": [[425, "optimize-prompts"]], "Optimize using Trace": [[427, "optimize-using-trace"]], "Optimize with Feedback": [[431, "optimize-with-feedback"]], "Putting it all together": [[424, "putting-it-all-together"], [426, "putting-it-all-together"]], "Recording of Agent Behavior": [[433, "recording-of-agent-behavior"]], "Results": [[433, "results"]], "Rollout Function": [[427, "rollout-function"]], "Save and Load the Optimized Function": [[431, "save-and-load-the-optimized-function"]], "Set up the objective in Trace": [[435, "set-up-the-objective-in-trace"]], "Setup": [[425, "setup"], [426, "setup"]], "Setup and Installation": [[424, "setup-and-installation"], [427, "setup-and-installation"]], "Single Agent: Battleship": [[424, "single-agent-battleship"]], "Start with a Normal Python Program": [[431, "start-with-a-normal-python-program"]], "The Game of BattleShip": [[432, "the-game-of-battleship"]], "The Optimized Function is Runnable": [[431, "the-optimized-function-is-runnable"]], "Trace this Program": [[431, "trace-this-program"]], "Use Bundle to Writing Custom Node Operators": [[434, "use-bundle-to-writing-custom-node-operators"]], "Using bundle to wrap helper functions": [[425, "using-bundle-to-wrap-helper-functions"]], "Version 1 Trace Implementation based on Optimizer": [[435, "version-1-trace-implementation-based-on-optimizer"]], "Version 2 Trace Implementation based on Propagator + Optimizer": [[435, "version-2-trace-implementation-based-on-propagator-optimizer"]], "Visualize Graph": [[434, "visualize-graph"]], "Visualize Trace Graph of an Action": [[432, "visualize-trace-graph-of-an-action"]], "What Did the Agent Learn?": [[432, "what-did-the-agent-learn"]], "What\u2019s Next?": [[431, "what-s-next"], [433, "what-s-next"]], "Wrap the environment into a BattleshipBoard class": [[424, "wrap-the-environment-into-a-battleshipboard-class"]], "opto": [[1, "module-opto"]], "opto.optimizers": [[2, "module-opto.optimizers"]], "opto.optimizers.buffers": [[3, "module-opto.optimizers.buffers"]], "opto.optimizers.buffers.FIFOBuffer": [[4, "opto-optimizers-buffers-fifobuffer"]], "opto.optimizers.buffers.FIFOBuffer.add": [[5, "opto-optimizers-buffers-fifobuffer-add"]], "opto.optimizers.opro": [[6, "module-opto.optimizers.opro"]], "opto.optimizers.opro.OPRO": [[7, "opto-optimizers-opro-opro"]], "opto.optimizers.opro.OPRO.backward": [[8, "opto-optimizers-opro-opro-backward"]], "opto.optimizers.opro.OPRO.call_llm": [[9, "opto-optimizers-opro-opro-call-llm"]], "opto.optimizers.opro.OPRO.construct_prompt": [[10, "opto-optimizers-opro-opro-construct-prompt"]], "opto.optimizers.opro.OPRO.construct_update_dict": [[11, "opto-optimizers-opro-opro-construct-update-dict"]], "opto.optimizers.opro.OPRO.default_objective": [[12, "opto-optimizers-opro-opro-default-objective"]], "opto.optimizers.opro.OPRO.default_prompt_symbols": [[13, "opto-optimizers-opro-opro-default-prompt-symbols"]], "opto.optimizers.opro.OPRO.default_propagator": [[14, "opto-optimizers-opro-opro-default-propagator"]], "opto.optimizers.opro.OPRO.example_problem_template": [[15, "opto-optimizers-opro-opro-example-problem-template"]], "opto.optimizers.opro.OPRO.example_prompt": [[16, "opto-optimizers-opro-opro-example-prompt"]], "opto.optimizers.opro.OPRO.extract_llm_suggestion": [[17, "opto-optimizers-opro-opro-extract-llm-suggestion"]], "opto.optimizers.opro.OPRO.final_prompt": [[18, "opto-optimizers-opro-opro-final-prompt"]], "opto.optimizers.opro.OPRO.output_format_prompt": [[19, "opto-optimizers-opro-opro-output-format-prompt"]], "opto.optimizers.opro.OPRO.problem_instance": [[20, "opto-optimizers-opro-opro-problem-instance"]], "opto.optimizers.opro.OPRO.propagator": [[21, "opto-optimizers-opro-opro-propagator"]], "opto.optimizers.opro.OPRO.propose": [[22, "opto-optimizers-opro-opro-propose"]], "opto.optimizers.opro.OPRO.replace_symbols": [[23, "opto-optimizers-opro-opro-replace-symbols"]], "opto.optimizers.opro.OPRO.repr_node_constraint": [[24, "opto-optimizers-opro-opro-repr-node-constraint"]], "opto.optimizers.opro.OPRO.repr_node_value": [[25, "opto-optimizers-opro-opro-repr-node-value"]], "opto.optimizers.opro.OPRO.representation_prompt": [[26, "opto-optimizers-opro-opro-representation-prompt"]], "opto.optimizers.opro.OPRO.step": [[27, "opto-optimizers-opro-opro-step"]], "opto.optimizers.opro.OPRO.summarize": [[28, "opto-optimizers-opro-opro-summarize"]], "opto.optimizers.opro.OPRO.trace_graph": [[29, "opto-optimizers-opro-opro-trace-graph"]], "opto.optimizers.opro.OPRO.update": [[30, "opto-optimizers-opro-opro-update"]], "opto.optimizers.opro.OPRO.user_prompt_template": [[31, "opto-optimizers-opro-opro-user-prompt-template"]], "opto.optimizers.opro.OPRO.zero_feedback": [[32, "opto-optimizers-opro-opro-zero-feedback"]], "opto.optimizers.optimizer": [[33, "module-opto.optimizers.optimizer"]], "opto.optimizers.optimizer.AbstractOptimizer": [[34, "opto-optimizers-optimizer-abstractoptimizer"]], "opto.optimizers.optimizer.AbstractOptimizer.propagator": [[35, "opto-optimizers-optimizer-abstractoptimizer-propagator"]], "opto.optimizers.optimizer.AbstractOptimizer.step": [[36, "opto-optimizers-optimizer-abstractoptimizer-step"]], "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback": [[37, "opto-optimizers-optimizer-abstractoptimizer-zero-feedback"]], "opto.optimizers.optimizer.Optimizer": [[38, "opto-optimizers-optimizer-optimizer"]], "opto.optimizers.optimizer.Optimizer.backward": [[39, "opto-optimizers-optimizer-optimizer-backward"]], "opto.optimizers.optimizer.Optimizer.default_propagator": [[40, "opto-optimizers-optimizer-optimizer-default-propagator"]], "opto.optimizers.optimizer.Optimizer.propagator": [[41, "opto-optimizers-optimizer-optimizer-propagator"]], "opto.optimizers.optimizer.Optimizer.propose": [[42, "opto-optimizers-optimizer-optimizer-propose"]], "opto.optimizers.optimizer.Optimizer.step": [[43, "opto-optimizers-optimizer-optimizer-step"]], "opto.optimizers.optimizer.Optimizer.trace_graph": [[44, "opto-optimizers-optimizer-optimizer-trace-graph"]], "opto.optimizers.optimizer.Optimizer.update": [[45, "opto-optimizers-optimizer-optimizer-update"]], "opto.optimizers.optimizer.Optimizer.zero_feedback": [[46, "opto-optimizers-optimizer-optimizer-zero-feedback"]], "opto.optimizers.optoprime": [[47, "module-opto.optimizers.optoprime"]], "opto.optimizers.optoprime.FunctionFeedback": [[48, "opto-optimizers-optoprime-functionfeedback"]], "opto.optimizers.optoprime.FunctionFeedback.documentation": [[49, "opto-optimizers-optoprime-functionfeedback-documentation"]], "opto.optimizers.optoprime.FunctionFeedback.graph": [[50, "opto-optimizers-optoprime-functionfeedback-graph"]], "opto.optimizers.optoprime.FunctionFeedback.others": [[51, "opto-optimizers-optoprime-functionfeedback-others"]], "opto.optimizers.optoprime.FunctionFeedback.output": [[52, "opto-optimizers-optoprime-functionfeedback-output"]], "opto.optimizers.optoprime.FunctionFeedback.roots": [[53, "opto-optimizers-optoprime-functionfeedback-roots"]], "opto.optimizers.optoprime.FunctionFeedback.user_feedback": [[54, "opto-optimizers-optoprime-functionfeedback-user-feedback"]], "opto.optimizers.optoprime.OptoPrime": [[55, "opto-optimizers-optoprime-optoprime"]], "opto.optimizers.optoprime.OptoPrime.backward": [[56, "opto-optimizers-optoprime-optoprime-backward"]], "opto.optimizers.optoprime.OptoPrime.call_llm": [[57, "opto-optimizers-optoprime-optoprime-call-llm"]], "opto.optimizers.optoprime.OptoPrime.construct_prompt": [[58, "opto-optimizers-optoprime-optoprime-construct-prompt"]], "opto.optimizers.optoprime.OptoPrime.construct_update_dict": [[59, "opto-optimizers-optoprime-optoprime-construct-update-dict"]], "opto.optimizers.optoprime.OptoPrime.default_objective": [[60, "opto-optimizers-optoprime-optoprime-default-objective"]], "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols": [[61, "opto-optimizers-optoprime-optoprime-default-prompt-symbols"]], "opto.optimizers.optoprime.OptoPrime.default_propagator": [[62, "opto-optimizers-optoprime-optoprime-default-propagator"]], "opto.optimizers.optoprime.OptoPrime.example_problem_template": [[63, "opto-optimizers-optoprime-optoprime-example-problem-template"]], "opto.optimizers.optoprime.OptoPrime.example_prompt": [[64, "opto-optimizers-optoprime-optoprime-example-prompt"]], "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion": [[65, "opto-optimizers-optoprime-optoprime-extract-llm-suggestion"]], "opto.optimizers.optoprime.OptoPrime.final_prompt": [[66, "opto-optimizers-optoprime-optoprime-final-prompt"]], "opto.optimizers.optoprime.OptoPrime.output_format_prompt": [[67, "opto-optimizers-optoprime-optoprime-output-format-prompt"]], "opto.optimizers.optoprime.OptoPrime.problem_instance": [[68, "opto-optimizers-optoprime-optoprime-problem-instance"]], "opto.optimizers.optoprime.OptoPrime.propagator": [[69, "opto-optimizers-optoprime-optoprime-propagator"]], "opto.optimizers.optoprime.OptoPrime.propose": [[70, "opto-optimizers-optoprime-optoprime-propose"]], "opto.optimizers.optoprime.OptoPrime.replace_symbols": [[71, "opto-optimizers-optoprime-optoprime-replace-symbols"]], "opto.optimizers.optoprime.OptoPrime.repr_node_constraint": [[72, "opto-optimizers-optoprime-optoprime-repr-node-constraint"]], "opto.optimizers.optoprime.OptoPrime.repr_node_value": [[73, "opto-optimizers-optoprime-optoprime-repr-node-value"]], "opto.optimizers.optoprime.OptoPrime.representation_prompt": [[74, "opto-optimizers-optoprime-optoprime-representation-prompt"]], "opto.optimizers.optoprime.OptoPrime.step": [[75, "opto-optimizers-optoprime-optoprime-step"]], "opto.optimizers.optoprime.OptoPrime.summarize": [[76, "opto-optimizers-optoprime-optoprime-summarize"]], "opto.optimizers.optoprime.OptoPrime.trace_graph": [[77, "opto-optimizers-optoprime-optoprime-trace-graph"]], "opto.optimizers.optoprime.OptoPrime.update": [[78, "opto-optimizers-optoprime-optoprime-update"]], "opto.optimizers.optoprime.OptoPrime.user_prompt_template": [[79, "opto-optimizers-optoprime-optoprime-user-prompt-template"]], "opto.optimizers.optoprime.OptoPrime.zero_feedback": [[80, "opto-optimizers-optoprime-optoprime-zero-feedback"]], "opto.optimizers.optoprime.ProblemInstance": [[81, "opto-optimizers-optoprime-probleminstance"]], "opto.optimizers.optoprime.ProblemInstance.code": [[82, "opto-optimizers-optoprime-probleminstance-code"]], "opto.optimizers.optoprime.ProblemInstance.constraints": [[83, "opto-optimizers-optoprime-probleminstance-constraints"]], "opto.optimizers.optoprime.ProblemInstance.documentation": [[84, "opto-optimizers-optoprime-probleminstance-documentation"]], "opto.optimizers.optoprime.ProblemInstance.feedback": [[85, "opto-optimizers-optoprime-probleminstance-feedback"]], "opto.optimizers.optoprime.ProblemInstance.inputs": [[86, "opto-optimizers-optoprime-probleminstance-inputs"]], "opto.optimizers.optoprime.ProblemInstance.instruction": [[87, "opto-optimizers-optoprime-probleminstance-instruction"]], "opto.optimizers.optoprime.ProblemInstance.others": [[88, "opto-optimizers-optoprime-probleminstance-others"]], "opto.optimizers.optoprime.ProblemInstance.outputs": [[89, "opto-optimizers-optoprime-probleminstance-outputs"]], "opto.optimizers.optoprime.ProblemInstance.problem_template": [[90, "opto-optimizers-optoprime-probleminstance-problem-template"]], "opto.optimizers.optoprime.ProblemInstance.variables": [[91, "opto-optimizers-optoprime-probleminstance-variables"]], "opto.optimizers.optoprime.get_fun_name": [[92, "opto-optimizers-optoprime-get-fun-name"]], "opto.optimizers.optoprime.node_to_function_feedback": [[93, "opto-optimizers-optoprime-node-to-function-feedback"]], "opto.optimizers.optoprime.repr_function_call": [[94, "opto-optimizers-optoprime-repr-function-call"]], "opto.optimizers.textgrad": [[95, "module-opto.optimizers.textgrad"]], "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE": [[96, "opto-optimizers-textgrad-gradient-multipart-template"]], "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION": [[97, "opto-optimizers-textgrad-gradient-of-results-instruction"]], "opto.optimizers.textgrad.GradientInfo": [[98, "opto-optimizers-textgrad-gradientinfo"]], "opto.optimizers.textgrad.GradientInfo.gradient": [[99, "opto-optimizers-textgrad-gradientinfo-gradient"]], "opto.optimizers.textgrad.GradientInfo.gradient_context": [[100, "opto-optimizers-textgrad-gradientinfo-gradient-context"]], "opto.optimizers.textgrad.TextGrad": [[101, "opto-optimizers-textgrad-textgrad"]], "opto.optimizers.textgrad.TextGrad.backward": [[102, "opto-optimizers-textgrad-textgrad-backward"]], "opto.optimizers.textgrad.TextGrad.call_llm": [[103, "opto-optimizers-textgrad-textgrad-call-llm"]], "opto.optimizers.textgrad.TextGrad.default_propagator": [[104, "opto-optimizers-textgrad-textgrad-default-propagator"]], "opto.optimizers.textgrad.TextGrad.propagator": [[105, "opto-optimizers-textgrad-textgrad-propagator"]], "opto.optimizers.textgrad.TextGrad.propose": [[106, "opto-optimizers-textgrad-textgrad-propose"]], "opto.optimizers.textgrad.TextGrad.step": [[107, "opto-optimizers-textgrad-textgrad-step"]], "opto.optimizers.textgrad.TextGrad.trace_graph": [[108, "opto-optimizers-textgrad-textgrad-trace-graph"]], "opto.optimizers.textgrad.TextGrad.update": [[109, "opto-optimizers-textgrad-textgrad-update"]], "opto.optimizers.textgrad.TextGrad.zero_feedback": [[110, "opto-optimizers-textgrad-textgrad-zero-feedback"]], "opto.optimizers.textgrad.construct_reduce_prompt": [[111, "opto-optimizers-textgrad-construct-reduce-prompt"]], "opto.optimizers.textgrad.construct_tgd_prompt": [[112, "opto-optimizers-textgrad-construct-tgd-prompt"]], "opto.optimizers.textgrad.get_short_value": [[113, "opto-optimizers-textgrad-get-short-value"]], "opto.optimizers.textgrad.rm_node_attrs": [[114, "opto-optimizers-textgrad-rm-node-attrs"]], "opto.optimizers.utils": [[115, "module-opto.optimizers.utils"]], "opto.optimizers.utils.print_color": [[116, "opto-optimizers-utils-print-color"]], "opto.trace": [[117, "module-opto.trace"]], "opto.trace.broadcast": [[118, "module-opto.trace.broadcast"]], "opto.trace.broadcast.apply_op": [[119, "opto-trace-broadcast-apply-op"]], "opto.trace.broadcast.recursive_conversion": [[120, "opto-trace-broadcast-recursive-conversion"]], "opto.trace.bundle": [[121, "module-opto.trace.bundle"]], "opto.trace.containers": [[122, "module-opto.trace.containers"]], "opto.trace.containers.Map": [[123, "opto-trace-containers-map"]], "opto.trace.containers.Map.clear": [[124, "opto-trace-containers-map-clear"]], "opto.trace.containers.Map.copy": [[125, "opto-trace-containers-map-copy"]], "opto.trace.containers.Map.fromkeys": [[126, "opto-trace-containers-map-fromkeys"]], "opto.trace.containers.Map.get": [[127, "opto-trace-containers-map-get"]], "opto.trace.containers.Map.items": [[128, "opto-trace-containers-map-items"]], "opto.trace.containers.Map.keys": [[129, "opto-trace-containers-map-keys"]], "opto.trace.containers.Map.parameters": [[130, "opto-trace-containers-map-parameters"]], "opto.trace.containers.Map.parameters_dict": [[131, "opto-trace-containers-map-parameters-dict"]], "opto.trace.containers.Map.pop": [[132, "opto-trace-containers-map-pop"]], "opto.trace.containers.Map.popitem": [[133, "opto-trace-containers-map-popitem"]], "opto.trace.containers.Map.setdefault": [[134, "opto-trace-containers-map-setdefault"]], "opto.trace.containers.Map.update": [[135, "opto-trace-containers-map-update"]], "opto.trace.containers.Map.values": [[136, "opto-trace-containers-map-values"]], "opto.trace.containers.NodeContainer": [[137, "opto-trace-containers-nodecontainer"]], "opto.trace.containers.ParameterContainer": [[138, "opto-trace-containers-parametercontainer"]], "opto.trace.containers.ParameterContainer.parameters": [[139, "opto-trace-containers-parametercontainer-parameters"]], "opto.trace.containers.ParameterContainer.parameters_dict": [[140, "opto-trace-containers-parametercontainer-parameters-dict"]], "opto.trace.containers.Seq": [[141, "opto-trace-containers-seq"]], "opto.trace.containers.Seq.append": [[142, "opto-trace-containers-seq-append"]], "opto.trace.containers.Seq.clear": [[143, "opto-trace-containers-seq-clear"]], "opto.trace.containers.Seq.copy": [[144, "opto-trace-containers-seq-copy"]], "opto.trace.containers.Seq.count": [[145, "opto-trace-containers-seq-count"]], "opto.trace.containers.Seq.extend": [[146, "opto-trace-containers-seq-extend"]], "opto.trace.containers.Seq.index": [[147, "opto-trace-containers-seq-index"]], "opto.trace.containers.Seq.insert": [[148, "opto-trace-containers-seq-insert"]], "opto.trace.containers.Seq.parameters": [[149, "opto-trace-containers-seq-parameters"]], "opto.trace.containers.Seq.parameters_dict": [[150, "opto-trace-containers-seq-parameters-dict"]], "opto.trace.containers.Seq.pop": [[151, "opto-trace-containers-seq-pop"]], "opto.trace.containers.Seq.remove": [[152, "opto-trace-containers-seq-remove"]], "opto.trace.containers.Seq.reverse": [[153, "opto-trace-containers-seq-reverse"]], "opto.trace.containers.Seq.sort": [[154, "opto-trace-containers-seq-sort"]], "opto.trace.containers.trainable_method": [[155, "opto-trace-containers-trainable-method"]], "opto.trace.errors": [[156, "module-opto.trace.errors"]], "opto.trace.errors.ExecutionError": [[157, "opto-trace-errors-executionerror"]], "opto.trace.errors.TraceMissingInputsError": [[158, "opto-trace-errors-tracemissinginputserror"]], "opto.trace.iterators": [[159, "module-opto.trace.iterators"]], "opto.trace.iterators.DictIterable": [[160, "opto-trace-iterators-dictiterable"]], "opto.trace.iterators.SeqIterable": [[161, "opto-trace-iterators-seqiterable"]], "opto.trace.iterators.iterate": [[162, "opto-trace-iterators-iterate"]], "opto.trace.modules": [[163, "module-opto.trace.modules"]], "opto.trace.modules.Module": [[164, "opto-trace-modules-module"]], "opto.trace.modules.Module.forward": [[165, "opto-trace-modules-module-forward"]], "opto.trace.modules.Module.load": [[166, "opto-trace-modules-module-load"]], "opto.trace.modules.Module.parameters": [[167, "opto-trace-modules-module-parameters"]], "opto.trace.modules.Module.parameters_dict": [[168, "opto-trace-modules-module-parameters-dict"]], "opto.trace.modules.Module.save": [[169, "opto-trace-modules-module-save"]], "opto.trace.modules.model": [[170, "opto-trace-modules-model"]], "opto.trace.nodes": [[171, "module-opto.trace.nodes"]], "opto.trace.nodes.AbstractNode": [[172, "opto-trace-nodes-abstractnode"]], "opto.trace.nodes.AbstractNode.children": [[173, "opto-trace-nodes-abstractnode-children"]], "opto.trace.nodes.AbstractNode.data": [[174, "opto-trace-nodes-abstractnode-data"]], "opto.trace.nodes.AbstractNode.gt": [[175, "opto-trace-nodes-abstractnode-gt"]], "opto.trace.nodes.AbstractNode.id": [[176, "opto-trace-nodes-abstractnode-id"]], "opto.trace.nodes.AbstractNode.is_leaf": [[177, "opto-trace-nodes-abstractnode-is-leaf"]], "opto.trace.nodes.AbstractNode.is_root": [[178, "opto-trace-nodes-abstractnode-is-root"]], "opto.trace.nodes.AbstractNode.level": [[179, "opto-trace-nodes-abstractnode-level"]], "opto.trace.nodes.AbstractNode.lt": [[180, "opto-trace-nodes-abstractnode-lt"]], "opto.trace.nodes.AbstractNode.name": [[181, "opto-trace-nodes-abstractnode-name"]], "opto.trace.nodes.AbstractNode.parents": [[182, "opto-trace-nodes-abstractnode-parents"]], "opto.trace.nodes.AbstractNode.py_name": [[183, "opto-trace-nodes-abstractnode-py-name"]], "opto.trace.nodes.ExceptionNode": [[184, "opto-trace-nodes-exceptionnode"]], "opto.trace.nodes.ExceptionNode.append": [[185, "opto-trace-nodes-exceptionnode-append"]], "opto.trace.nodes.ExceptionNode.backward": [[186, "opto-trace-nodes-exceptionnode-backward"]], "opto.trace.nodes.ExceptionNode.call": [[187, "opto-trace-nodes-exceptionnode-call"]], "opto.trace.nodes.ExceptionNode.capitalize": [[188, "opto-trace-nodes-exceptionnode-capitalize"]], "opto.trace.nodes.ExceptionNode.children": [[189, "opto-trace-nodes-exceptionnode-children"]], "opto.trace.nodes.ExceptionNode.clone": [[190, "opto-trace-nodes-exceptionnode-clone"]], "opto.trace.nodes.ExceptionNode.create_feedback": [[191, "opto-trace-nodes-exceptionnode-create-feedback"]], "opto.trace.nodes.ExceptionNode.data": [[192, "opto-trace-nodes-exceptionnode-data"]], "opto.trace.nodes.ExceptionNode.description": [[193, "opto-trace-nodes-exceptionnode-description"]], "opto.trace.nodes.ExceptionNode.detach": [[194, "opto-trace-nodes-exceptionnode-detach"]], "opto.trace.nodes.ExceptionNode.eq": [[195, "opto-trace-nodes-exceptionnode-eq"]], "opto.trace.nodes.ExceptionNode.expandable_dependencies": [[196, "opto-trace-nodes-exceptionnode-expandable-dependencies"]], "opto.trace.nodes.ExceptionNode.feedback": [[197, "opto-trace-nodes-exceptionnode-feedback"]], "opto.trace.nodes.ExceptionNode.format": [[198, "opto-trace-nodes-exceptionnode-format"]], "opto.trace.nodes.ExceptionNode.getattr": [[199, "opto-trace-nodes-exceptionnode-getattr"]], "opto.trace.nodes.ExceptionNode.gt": [[200, "opto-trace-nodes-exceptionnode-gt"]], "opto.trace.nodes.ExceptionNode.hidden_dependencies": [[201, "opto-trace-nodes-exceptionnode-hidden-dependencies"]], "opto.trace.nodes.ExceptionNode.id": [[202, "opto-trace-nodes-exceptionnode-id"]], "opto.trace.nodes.ExceptionNode.info": [[203, "opto-trace-nodes-exceptionnode-info"]], "opto.trace.nodes.ExceptionNode.inputs": [[204, "opto-trace-nodes-exceptionnode-inputs"]], "opto.trace.nodes.ExceptionNode.is_leaf": [[205, "opto-trace-nodes-exceptionnode-is-leaf"]], "opto.trace.nodes.ExceptionNode.is_root": [[206, "opto-trace-nodes-exceptionnode-is-root"]], "opto.trace.nodes.ExceptionNode.items": [[207, "opto-trace-nodes-exceptionnode-items"]], "opto.trace.nodes.ExceptionNode.join": [[208, "opto-trace-nodes-exceptionnode-join"]], "opto.trace.nodes.ExceptionNode.keys": [[209, "opto-trace-nodes-exceptionnode-keys"]], "opto.trace.nodes.ExceptionNode.len": [[210, "opto-trace-nodes-exceptionnode-len"]], "opto.trace.nodes.ExceptionNode.level": [[211, "opto-trace-nodes-exceptionnode-level"]], "opto.trace.nodes.ExceptionNode.lower": [[212, "opto-trace-nodes-exceptionnode-lower"]], "opto.trace.nodes.ExceptionNode.lt": [[213, "opto-trace-nodes-exceptionnode-lt"]], "opto.trace.nodes.ExceptionNode.name": [[214, "opto-trace-nodes-exceptionnode-name"]], "opto.trace.nodes.ExceptionNode.neq": [[215, "opto-trace-nodes-exceptionnode-neq"]], "opto.trace.nodes.ExceptionNode.parameter_dependencies": [[216, "opto-trace-nodes-exceptionnode-parameter-dependencies"]], "opto.trace.nodes.ExceptionNode.parents": [[217, "opto-trace-nodes-exceptionnode-parents"]], "opto.trace.nodes.ExceptionNode.pop": [[218, "opto-trace-nodes-exceptionnode-pop"]], "opto.trace.nodes.ExceptionNode.py_name": [[219, "opto-trace-nodes-exceptionnode-py-name"]], "opto.trace.nodes.ExceptionNode.replace": [[220, "opto-trace-nodes-exceptionnode-replace"]], "opto.trace.nodes.ExceptionNode.split": [[221, "opto-trace-nodes-exceptionnode-split"]], "opto.trace.nodes.ExceptionNode.strip": [[222, "opto-trace-nodes-exceptionnode-strip"]], "opto.trace.nodes.ExceptionNode.swapcase": [[223, "opto-trace-nodes-exceptionnode-swapcase"]], "opto.trace.nodes.ExceptionNode.title": [[224, "opto-trace-nodes-exceptionnode-title"]], "opto.trace.nodes.ExceptionNode.type": [[225, "opto-trace-nodes-exceptionnode-type"]], "opto.trace.nodes.ExceptionNode.upper": [[226, "opto-trace-nodes-exceptionnode-upper"]], "opto.trace.nodes.ExceptionNode.values": [[227, "opto-trace-nodes-exceptionnode-values"]], "opto.trace.nodes.ExceptionNode.zero_feedback": [[228, "opto-trace-nodes-exceptionnode-zero-feedback"]], "opto.trace.nodes.Graph": [[229, "opto-trace-nodes-graph"]], "opto.trace.nodes.Graph.TRACE": [[230, "opto-trace-nodes-graph-trace"]], "opto.trace.nodes.Graph.clear": [[231, "opto-trace-nodes-graph-clear"]], "opto.trace.nodes.Graph.get": [[232, "opto-trace-nodes-graph-get"]], "opto.trace.nodes.Graph.register": [[233, "opto-trace-nodes-graph-register"]], "opto.trace.nodes.Graph.roots": [[234, "opto-trace-nodes-graph-roots"]], "opto.trace.nodes.MessageNode": [[235, "opto-trace-nodes-messagenode"]], "opto.trace.nodes.MessageNode.append": [[236, "opto-trace-nodes-messagenode-append"]], "opto.trace.nodes.MessageNode.backward": [[237, "opto-trace-nodes-messagenode-backward"]], "opto.trace.nodes.MessageNode.call": [[238, "opto-trace-nodes-messagenode-call"]], "opto.trace.nodes.MessageNode.capitalize": [[239, "opto-trace-nodes-messagenode-capitalize"]], "opto.trace.nodes.MessageNode.children": [[240, "opto-trace-nodes-messagenode-children"]], "opto.trace.nodes.MessageNode.clone": [[241, "opto-trace-nodes-messagenode-clone"]], "opto.trace.nodes.MessageNode.data": [[242, "opto-trace-nodes-messagenode-data"]], "opto.trace.nodes.MessageNode.description": [[243, "opto-trace-nodes-messagenode-description"]], "opto.trace.nodes.MessageNode.detach": [[244, "opto-trace-nodes-messagenode-detach"]], "opto.trace.nodes.MessageNode.eq": [[245, "opto-trace-nodes-messagenode-eq"]], "opto.trace.nodes.MessageNode.expandable_dependencies": [[246, "opto-trace-nodes-messagenode-expandable-dependencies"]], "opto.trace.nodes.MessageNode.feedback": [[247, "opto-trace-nodes-messagenode-feedback"]], "opto.trace.nodes.MessageNode.format": [[248, "opto-trace-nodes-messagenode-format"]], "opto.trace.nodes.MessageNode.getattr": [[249, "opto-trace-nodes-messagenode-getattr"]], "opto.trace.nodes.MessageNode.gt": [[250, "opto-trace-nodes-messagenode-gt"]], "opto.trace.nodes.MessageNode.hidden_dependencies": [[251, "opto-trace-nodes-messagenode-hidden-dependencies"]], "opto.trace.nodes.MessageNode.id": [[252, "opto-trace-nodes-messagenode-id"]], "opto.trace.nodes.MessageNode.info": [[253, "opto-trace-nodes-messagenode-info"]], "opto.trace.nodes.MessageNode.inputs": [[254, "opto-trace-nodes-messagenode-inputs"]], "opto.trace.nodes.MessageNode.is_leaf": [[255, "opto-trace-nodes-messagenode-is-leaf"]], "opto.trace.nodes.MessageNode.is_root": [[256, "opto-trace-nodes-messagenode-is-root"]], "opto.trace.nodes.MessageNode.items": [[257, "opto-trace-nodes-messagenode-items"]], "opto.trace.nodes.MessageNode.join": [[258, "opto-trace-nodes-messagenode-join"]], "opto.trace.nodes.MessageNode.keys": [[259, "opto-trace-nodes-messagenode-keys"]], "opto.trace.nodes.MessageNode.len": [[260, "opto-trace-nodes-messagenode-len"]], "opto.trace.nodes.MessageNode.level": [[261, "opto-trace-nodes-messagenode-level"]], "opto.trace.nodes.MessageNode.lower": [[262, "opto-trace-nodes-messagenode-lower"]], "opto.trace.nodes.MessageNode.lt": [[263, "opto-trace-nodes-messagenode-lt"]], "opto.trace.nodes.MessageNode.name": [[264, "opto-trace-nodes-messagenode-name"]], "opto.trace.nodes.MessageNode.neq": [[265, "opto-trace-nodes-messagenode-neq"]], "opto.trace.nodes.MessageNode.parameter_dependencies": [[266, "opto-trace-nodes-messagenode-parameter-dependencies"]], "opto.trace.nodes.MessageNode.parents": [[267, "opto-trace-nodes-messagenode-parents"]], "opto.trace.nodes.MessageNode.pop": [[268, "opto-trace-nodes-messagenode-pop"]], "opto.trace.nodes.MessageNode.py_name": [[269, "opto-trace-nodes-messagenode-py-name"]], "opto.trace.nodes.MessageNode.replace": [[270, "opto-trace-nodes-messagenode-replace"]], "opto.trace.nodes.MessageNode.split": [[271, "opto-trace-nodes-messagenode-split"]], "opto.trace.nodes.MessageNode.strip": [[272, "opto-trace-nodes-messagenode-strip"]], "opto.trace.nodes.MessageNode.swapcase": [[273, "opto-trace-nodes-messagenode-swapcase"]], "opto.trace.nodes.MessageNode.title": [[274, "opto-trace-nodes-messagenode-title"]], "opto.trace.nodes.MessageNode.type": [[275, "opto-trace-nodes-messagenode-type"]], "opto.trace.nodes.MessageNode.upper": [[276, "opto-trace-nodes-messagenode-upper"]], "opto.trace.nodes.MessageNode.values": [[277, "opto-trace-nodes-messagenode-values"]], "opto.trace.nodes.MessageNode.zero_feedback": [[278, "opto-trace-nodes-messagenode-zero-feedback"]], "opto.trace.nodes.Node": [[279, "opto-trace-nodes-node"]], "opto.trace.nodes.Node.append": [[280, "opto-trace-nodes-node-append"]], "opto.trace.nodes.Node.backward": [[281, "opto-trace-nodes-node-backward"]], "opto.trace.nodes.Node.call": [[282, "opto-trace-nodes-node-call"]], "opto.trace.nodes.Node.capitalize": [[283, "opto-trace-nodes-node-capitalize"]], "opto.trace.nodes.Node.children": [[284, "opto-trace-nodes-node-children"]], "opto.trace.nodes.Node.clone": [[285, "opto-trace-nodes-node-clone"]], "opto.trace.nodes.Node.data": [[286, "opto-trace-nodes-node-data"]], "opto.trace.nodes.Node.description": [[287, "opto-trace-nodes-node-description"]], "opto.trace.nodes.Node.detach": [[288, "opto-trace-nodes-node-detach"]], "opto.trace.nodes.Node.eq": [[289, "opto-trace-nodes-node-eq"]], "opto.trace.nodes.Node.expandable_dependencies": [[290, "opto-trace-nodes-node-expandable-dependencies"]], "opto.trace.nodes.Node.feedback": [[291, "opto-trace-nodes-node-feedback"]], "opto.trace.nodes.Node.format": [[292, "opto-trace-nodes-node-format"]], "opto.trace.nodes.Node.getattr": [[293, "opto-trace-nodes-node-getattr"]], "opto.trace.nodes.Node.gt": [[294, "opto-trace-nodes-node-gt"]], "opto.trace.nodes.Node.id": [[295, "opto-trace-nodes-node-id"]], "opto.trace.nodes.Node.info": [[296, "opto-trace-nodes-node-info"]], "opto.trace.nodes.Node.is_leaf": [[297, "opto-trace-nodes-node-is-leaf"]], "opto.trace.nodes.Node.is_root": [[298, "opto-trace-nodes-node-is-root"]], "opto.trace.nodes.Node.items": [[299, "opto-trace-nodes-node-items"]], "opto.trace.nodes.Node.join": [[300, "opto-trace-nodes-node-join"]], "opto.trace.nodes.Node.keys": [[301, "opto-trace-nodes-node-keys"]], "opto.trace.nodes.Node.len": [[302, "opto-trace-nodes-node-len"]], "opto.trace.nodes.Node.level": [[303, "opto-trace-nodes-node-level"]], "opto.trace.nodes.Node.lower": [[304, "opto-trace-nodes-node-lower"]], "opto.trace.nodes.Node.lt": [[305, "opto-trace-nodes-node-lt"]], "opto.trace.nodes.Node.name": [[306, "opto-trace-nodes-node-name"]], "opto.trace.nodes.Node.neq": [[307, "opto-trace-nodes-node-neq"]], "opto.trace.nodes.Node.parameter_dependencies": [[308, "opto-trace-nodes-node-parameter-dependencies"]], "opto.trace.nodes.Node.parents": [[309, "opto-trace-nodes-node-parents"]], "opto.trace.nodes.Node.pop": [[310, "opto-trace-nodes-node-pop"]], "opto.trace.nodes.Node.py_name": [[311, "opto-trace-nodes-node-py-name"]], "opto.trace.nodes.Node.replace": [[312, "opto-trace-nodes-node-replace"]], "opto.trace.nodes.Node.split": [[313, "opto-trace-nodes-node-split"]], "opto.trace.nodes.Node.strip": [[314, "opto-trace-nodes-node-strip"]], "opto.trace.nodes.Node.swapcase": [[315, "opto-trace-nodes-node-swapcase"]], "opto.trace.nodes.Node.title": [[316, "opto-trace-nodes-node-title"]], "opto.trace.nodes.Node.type": [[317, "opto-trace-nodes-node-type"]], "opto.trace.nodes.Node.upper": [[318, "opto-trace-nodes-node-upper"]], "opto.trace.nodes.Node.values": [[319, "opto-trace-nodes-node-values"]], "opto.trace.nodes.Node.zero_feedback": [[320, "opto-trace-nodes-node-zero-feedback"]], "opto.trace.nodes.NodeVizStyleGuide": [[321, "opto-trace-nodes-nodevizstyleguide"]], "opto.trace.nodes.NodeVizStyleGuide.get_attrs": [[322, "opto-trace-nodes-nodevizstyleguide-get-attrs"]], "opto.trace.nodes.NodeVizStyleGuide.get_color": [[323, "opto-trace-nodes-nodevizstyleguide-get-color"]], "opto.trace.nodes.NodeVizStyleGuide.get_label": [[324, "opto-trace-nodes-nodevizstyleguide-get-label"]], "opto.trace.nodes.NodeVizStyleGuide.get_node_shape": [[325, "opto-trace-nodes-nodevizstyleguide-get-node-shape"]], "opto.trace.nodes.NodeVizStyleGuide.get_style": [[326, "opto-trace-nodes-nodevizstyleguide-get-style"]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[327, "opto-trace-nodes-nodevizstyleguidecolorful"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs": [[328, "opto-trace-nodes-nodevizstyleguidecolorful-get-attrs"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color": [[329, "opto-trace-nodes-nodevizstyleguidecolorful-get-border-color"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_color": [[330, "opto-trace-nodes-nodevizstyleguidecolorful-get-color"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_label": [[331, "opto-trace-nodes-nodevizstyleguidecolorful-get-label"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape": [[332, "opto-trace-nodes-nodevizstyleguidecolorful-get-node-shape"]], "opto.trace.nodes.NodeVizStyleGuideColorful.get_style": [[333, "opto-trace-nodes-nodevizstyleguidecolorful-get-style"]], "opto.trace.nodes.ParameterNode": [[334, "opto-trace-nodes-parameternode"]], "opto.trace.nodes.ParameterNode.append": [[335, "opto-trace-nodes-parameternode-append"]], "opto.trace.nodes.ParameterNode.backward": [[336, "opto-trace-nodes-parameternode-backward"]], "opto.trace.nodes.ParameterNode.call": [[337, "opto-trace-nodes-parameternode-call"]], "opto.trace.nodes.ParameterNode.capitalize": [[338, "opto-trace-nodes-parameternode-capitalize"]], "opto.trace.nodes.ParameterNode.children": [[339, "opto-trace-nodes-parameternode-children"]], "opto.trace.nodes.ParameterNode.clone": [[340, "opto-trace-nodes-parameternode-clone"]], "opto.trace.nodes.ParameterNode.data": [[341, "opto-trace-nodes-parameternode-data"]], "opto.trace.nodes.ParameterNode.description": [[342, "opto-trace-nodes-parameternode-description"]], "opto.trace.nodes.ParameterNode.detach": [[343, "opto-trace-nodes-parameternode-detach"]], "opto.trace.nodes.ParameterNode.eq": [[344, "opto-trace-nodes-parameternode-eq"]], "opto.trace.nodes.ParameterNode.expandable_dependencies": [[345, "opto-trace-nodes-parameternode-expandable-dependencies"]], "opto.trace.nodes.ParameterNode.feedback": [[346, "opto-trace-nodes-parameternode-feedback"]], "opto.trace.nodes.ParameterNode.format": [[347, "opto-trace-nodes-parameternode-format"]], "opto.trace.nodes.ParameterNode.getattr": [[348, "opto-trace-nodes-parameternode-getattr"]], "opto.trace.nodes.ParameterNode.gt": [[349, "opto-trace-nodes-parameternode-gt"]], "opto.trace.nodes.ParameterNode.id": [[350, "opto-trace-nodes-parameternode-id"]], "opto.trace.nodes.ParameterNode.info": [[351, "opto-trace-nodes-parameternode-info"]], "opto.trace.nodes.ParameterNode.is_leaf": [[352, "opto-trace-nodes-parameternode-is-leaf"]], "opto.trace.nodes.ParameterNode.is_root": [[353, "opto-trace-nodes-parameternode-is-root"]], "opto.trace.nodes.ParameterNode.items": [[354, "opto-trace-nodes-parameternode-items"]], "opto.trace.nodes.ParameterNode.join": [[355, "opto-trace-nodes-parameternode-join"]], "opto.trace.nodes.ParameterNode.keys": [[356, "opto-trace-nodes-parameternode-keys"]], "opto.trace.nodes.ParameterNode.len": [[357, "opto-trace-nodes-parameternode-len"]], "opto.trace.nodes.ParameterNode.level": [[358, "opto-trace-nodes-parameternode-level"]], "opto.trace.nodes.ParameterNode.lower": [[359, "opto-trace-nodes-parameternode-lower"]], "opto.trace.nodes.ParameterNode.lt": [[360, "opto-trace-nodes-parameternode-lt"]], "opto.trace.nodes.ParameterNode.name": [[361, "opto-trace-nodes-parameternode-name"]], "opto.trace.nodes.ParameterNode.neq": [[362, "opto-trace-nodes-parameternode-neq"]], "opto.trace.nodes.ParameterNode.parameter_dependencies": [[363, "opto-trace-nodes-parameternode-parameter-dependencies"]], "opto.trace.nodes.ParameterNode.parents": [[364, "opto-trace-nodes-parameternode-parents"]], "opto.trace.nodes.ParameterNode.pop": [[365, "opto-trace-nodes-parameternode-pop"]], "opto.trace.nodes.ParameterNode.py_name": [[366, "opto-trace-nodes-parameternode-py-name"]], "opto.trace.nodes.ParameterNode.replace": [[367, "opto-trace-nodes-parameternode-replace"]], "opto.trace.nodes.ParameterNode.split": [[368, "opto-trace-nodes-parameternode-split"]], "opto.trace.nodes.ParameterNode.strip": [[369, "opto-trace-nodes-parameternode-strip"]], "opto.trace.nodes.ParameterNode.swapcase": [[370, "opto-trace-nodes-parameternode-swapcase"]], "opto.trace.nodes.ParameterNode.title": [[371, "opto-trace-nodes-parameternode-title"]], "opto.trace.nodes.ParameterNode.type": [[372, "opto-trace-nodes-parameternode-type"]], "opto.trace.nodes.ParameterNode.upper": [[373, "opto-trace-nodes-parameternode-upper"]], "opto.trace.nodes.ParameterNode.values": [[374, "opto-trace-nodes-parameternode-values"]], "opto.trace.nodes.ParameterNode.zero_feedback": [[375, "opto-trace-nodes-parameternode-zero-feedback"]], "opto.trace.nodes.get_op_name": [[376, "opto-trace-nodes-get-op-name"]], "opto.trace.nodes.node": [[377, "opto-trace-nodes-node"]], "opto.trace.operators": [[378, "module-opto.trace.operators"]], "opto.trace.operators.identity": [[379, "opto-trace-operators-identity"]], "opto.trace.propagators": [[380, "module-opto.trace.propagators"]], "opto.trace.propagators.graph_propagator": [[381, "module-opto.trace.propagators.graph_propagator"]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[382, "opto-trace-propagators-graph-propagator-graphpropagator"]], "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate": [[383, "opto-trace-propagators-graph-propagator-graphpropagator-aggregate"]], "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback": [[384, "opto-trace-propagators-graph-propagator-graphpropagator-init-feedback"]], "opto.trace.propagators.graph_propagator.GraphPropagator.propagate": [[385, "opto-trace-propagators-graph-propagator-graphpropagator-propagate"]], "opto.trace.propagators.graph_propagator.GraphPropagator.register": [[386, "opto-trace-propagators-graph-propagator-graphpropagator-register"]], "opto.trace.propagators.graph_propagator.TraceGraph": [[387, "opto-trace-propagators-graph-propagator-tracegraph"]], "opto.trace.propagators.graph_propagator.TraceGraph.empty": [[388, "opto-trace-propagators-graph-propagator-tracegraph-empty"]], "opto.trace.propagators.graph_propagator.TraceGraph.expand": [[389, "opto-trace-propagators-graph-propagator-tracegraph-expand"]], "opto.trace.propagators.graph_propagator.TraceGraph.graph": [[390, "opto-trace-propagators-graph-propagator-tracegraph-graph"]], "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback": [[391, "opto-trace-propagators-graph-propagator-tracegraph-user-feedback"]], "opto.trace.propagators.graph_propagator.TraceGraph.visualize": [[392, "opto-trace-propagators-graph-propagator-tracegraph-visualize"]], "opto.trace.propagators.propagators": [[393, "module-opto.trace.propagators.propagators"]], "opto.trace.propagators.propagators.AbstractFeedback": [[394, "opto-trace-propagators-propagators-abstractfeedback"]], "opto.trace.propagators.propagators.AbstractPropagator": [[395, "opto-trace-propagators-propagators-abstractpropagator"]], "opto.trace.propagators.propagators.AbstractPropagator.propagate": [[396, "opto-trace-propagators-propagators-abstractpropagator-propagate"]], "opto.trace.propagators.propagators.Propagator": [[397, "opto-trace-propagators-propagators-propagator"]], "opto.trace.propagators.propagators.Propagator.init_feedback": [[398, "opto-trace-propagators-propagators-propagator-init-feedback"]], "opto.trace.propagators.propagators.Propagator.propagate": [[399, "opto-trace-propagators-propagators-propagator-propagate"]], "opto.trace.propagators.propagators.Propagator.register": [[400, "opto-trace-propagators-propagators-propagator-register"]], "opto.trace.propagators.propagators.SumPropagator": [[401, "opto-trace-propagators-propagators-sumpropagator"]], "opto.trace.propagators.propagators.SumPropagator.init_feedback": [[402, "opto-trace-propagators-propagators-sumpropagator-init-feedback"]], "opto.trace.propagators.propagators.SumPropagator.propagate": [[403, "opto-trace-propagators-propagators-sumpropagator-propagate"]], "opto.trace.propagators.propagators.SumPropagator.register": [[404, "opto-trace-propagators-propagators-sumpropagator-register"]], "opto.trace.stop_tracing": [[405, "opto-trace-stop-tracing"]], "opto.trace.utils": [[406, "module-opto.trace.utils"]], "opto.trace.utils.contain": [[407, "opto-trace-utils-contain"]], "opto.trace.utils.escape_json_nested_quotes": [[408, "opto-trace-utils-escape-json-nested-quotes"]], "opto.trace.utils.for_all_methods": [[409, "opto-trace-utils-for-all-methods"]], "opto.trace.utils.parse_eqs_to_dict": [[410, "opto-trace-utils-parse-eqs-to-dict"]], "opto.trace.utils.remove_non_ascii": [[411, "opto-trace-utils-remove-non-ascii"]], "opto.trace.utils.render_opt_step": [[412, "opto-trace-utils-render-opt-step"]], "opto.trace.utils.sum_feedback": [[413, "opto-trace-utils-sum-feedback"]], "opto.trace.utils.test_json_quote_escaper": [[414, "opto-trace-utils-test-json-quote-escaper"]], "opto.utils": [[415, "module-opto.utils"]], "opto.utils.llm": [[416, "module-opto.utils.llm"]], "opto.utils.llm.AbstractModel": [[417, "opto-utils-llm-abstractmodel"]], "opto.utils.llm.AbstractModel.model": [[418, "opto-utils-llm-abstractmodel-model"]], "opto.utils.llm.AutoGenLLM": [[419, "opto-utils-llm-autogenllm"]], "opto.utils.llm.AutoGenLLM.create": [[420, "opto-utils-llm-autogenllm-create"]], "opto.utils.llm.AutoGenLLM.model": [[421, "opto-utils-llm-autogenllm-model"]], "opto.utils.llm.auto_construct_oai_config_list_from_env": [[422, "opto-utils-llm-auto-construct-oai-config-list-from-env"]], "opto.version": [[423, "module-opto.version"]], "\u26a1\ufe0f First: 5-Minute Basics": [[431, "first-5-minute-basics"]], "\ud83c\udf10  Installation": [[430, "installation"]], "\ud83c\udfaf Trace": [[429, "trace"]], "\ud83c\udfe0 VirtualHome": [[433, "virtualhome"]], "\ud83d\ude80 Next: Adaptive Agent": [[432, "next-adaptive-agent"]], "\ud83e\udd2f Finally: Emergent Behaviors": [[433, "finally-emergent-behaviors"]]}, "docnames": ["api", "api/opto", "api/opto.optimizers", "api/opto.optimizers.buffers", "api/opto.optimizers.buffers.FIFOBuffer", "api/opto.optimizers.buffers.FIFOBuffer.add", "api/opto.optimizers.opro", "api/opto.optimizers.opro.OPRO", "api/opto.optimizers.opro.OPRO.backward", "api/opto.optimizers.opro.OPRO.call_llm", "api/opto.optimizers.opro.OPRO.construct_prompt", "api/opto.optimizers.opro.OPRO.construct_update_dict", "api/opto.optimizers.opro.OPRO.default_objective", "api/opto.optimizers.opro.OPRO.default_prompt_symbols", "api/opto.optimizers.opro.OPRO.default_propagator", "api/opto.optimizers.opro.OPRO.example_problem_template", "api/opto.optimizers.opro.OPRO.example_prompt", "api/opto.optimizers.opro.OPRO.extract_llm_suggestion", "api/opto.optimizers.opro.OPRO.final_prompt", "api/opto.optimizers.opro.OPRO.output_format_prompt", "api/opto.optimizers.opro.OPRO.problem_instance", "api/opto.optimizers.opro.OPRO.propagator", "api/opto.optimizers.opro.OPRO.propose", "api/opto.optimizers.opro.OPRO.replace_symbols", "api/opto.optimizers.opro.OPRO.repr_node_constraint", "api/opto.optimizers.opro.OPRO.repr_node_value", "api/opto.optimizers.opro.OPRO.representation_prompt", "api/opto.optimizers.opro.OPRO.step", "api/opto.optimizers.opro.OPRO.summarize", "api/opto.optimizers.opro.OPRO.trace_graph", "api/opto.optimizers.opro.OPRO.update", "api/opto.optimizers.opro.OPRO.user_prompt_template", "api/opto.optimizers.opro.OPRO.zero_feedback", "api/opto.optimizers.optimizer", "api/opto.optimizers.optimizer.AbstractOptimizer", "api/opto.optimizers.optimizer.AbstractOptimizer.propagator", "api/opto.optimizers.optimizer.AbstractOptimizer.step", "api/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "api/opto.optimizers.optimizer.Optimizer", "api/opto.optimizers.optimizer.Optimizer.backward", "api/opto.optimizers.optimizer.Optimizer.default_propagator", "api/opto.optimizers.optimizer.Optimizer.propagator", "api/opto.optimizers.optimizer.Optimizer.propose", "api/opto.optimizers.optimizer.Optimizer.step", "api/opto.optimizers.optimizer.Optimizer.trace_graph", "api/opto.optimizers.optimizer.Optimizer.update", "api/opto.optimizers.optimizer.Optimizer.zero_feedback", "api/opto.optimizers.optoprime", "api/opto.optimizers.optoprime.FunctionFeedback", "api/opto.optimizers.optoprime.FunctionFeedback.documentation", "api/opto.optimizers.optoprime.FunctionFeedback.graph", "api/opto.optimizers.optoprime.FunctionFeedback.others", "api/opto.optimizers.optoprime.FunctionFeedback.output", "api/opto.optimizers.optoprime.FunctionFeedback.roots", "api/opto.optimizers.optoprime.FunctionFeedback.user_feedback", "api/opto.optimizers.optoprime.OptoPrime", "api/opto.optimizers.optoprime.OptoPrime.backward", "api/opto.optimizers.optoprime.OptoPrime.call_llm", "api/opto.optimizers.optoprime.OptoPrime.construct_prompt", "api/opto.optimizers.optoprime.OptoPrime.construct_update_dict", "api/opto.optimizers.optoprime.OptoPrime.default_objective", "api/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "api/opto.optimizers.optoprime.OptoPrime.default_propagator", "api/opto.optimizers.optoprime.OptoPrime.example_problem_template", "api/opto.optimizers.optoprime.OptoPrime.example_prompt", "api/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "api/opto.optimizers.optoprime.OptoPrime.final_prompt", "api/opto.optimizers.optoprime.OptoPrime.output_format_prompt", "api/opto.optimizers.optoprime.OptoPrime.problem_instance", "api/opto.optimizers.optoprime.OptoPrime.propagator", "api/opto.optimizers.optoprime.OptoPrime.propose", "api/opto.optimizers.optoprime.OptoPrime.replace_symbols", "api/opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "api/opto.optimizers.optoprime.OptoPrime.repr_node_value", "api/opto.optimizers.optoprime.OptoPrime.representation_prompt", "api/opto.optimizers.optoprime.OptoPrime.step", "api/opto.optimizers.optoprime.OptoPrime.summarize", "api/opto.optimizers.optoprime.OptoPrime.trace_graph", "api/opto.optimizers.optoprime.OptoPrime.update", "api/opto.optimizers.optoprime.OptoPrime.user_prompt_template", "api/opto.optimizers.optoprime.OptoPrime.zero_feedback", "api/opto.optimizers.optoprime.ProblemInstance", "api/opto.optimizers.optoprime.ProblemInstance.code", "api/opto.optimizers.optoprime.ProblemInstance.constraints", "api/opto.optimizers.optoprime.ProblemInstance.documentation", "api/opto.optimizers.optoprime.ProblemInstance.feedback", "api/opto.optimizers.optoprime.ProblemInstance.inputs", "api/opto.optimizers.optoprime.ProblemInstance.instruction", "api/opto.optimizers.optoprime.ProblemInstance.others", "api/opto.optimizers.optoprime.ProblemInstance.outputs", "api/opto.optimizers.optoprime.ProblemInstance.problem_template", "api/opto.optimizers.optoprime.ProblemInstance.variables", "api/opto.optimizers.optoprime.get_fun_name", "api/opto.optimizers.optoprime.node_to_function_feedback", "api/opto.optimizers.optoprime.repr_function_call", "api/opto.optimizers.textgrad", "api/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "api/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "api/opto.optimizers.textgrad.GradientInfo", "api/opto.optimizers.textgrad.GradientInfo.gradient", "api/opto.optimizers.textgrad.GradientInfo.gradient_context", "api/opto.optimizers.textgrad.TextGrad", "api/opto.optimizers.textgrad.TextGrad.backward", "api/opto.optimizers.textgrad.TextGrad.call_llm", "api/opto.optimizers.textgrad.TextGrad.default_propagator", "api/opto.optimizers.textgrad.TextGrad.propagator", "api/opto.optimizers.textgrad.TextGrad.propose", "api/opto.optimizers.textgrad.TextGrad.step", "api/opto.optimizers.textgrad.TextGrad.trace_graph", "api/opto.optimizers.textgrad.TextGrad.update", "api/opto.optimizers.textgrad.TextGrad.zero_feedback", "api/opto.optimizers.textgrad.construct_reduce_prompt", "api/opto.optimizers.textgrad.construct_tgd_prompt", "api/opto.optimizers.textgrad.get_short_value", "api/opto.optimizers.textgrad.rm_node_attrs", "api/opto.optimizers.utils", "api/opto.optimizers.utils.print_color", "api/opto.trace", "api/opto.trace.broadcast", "api/opto.trace.broadcast.apply_op", "api/opto.trace.broadcast.recursive_conversion", "api/opto.trace.bundle", "api/opto.trace.containers", "api/opto.trace.containers.Map", "api/opto.trace.containers.Map.clear", "api/opto.trace.containers.Map.copy", "api/opto.trace.containers.Map.fromkeys", "api/opto.trace.containers.Map.get", "api/opto.trace.containers.Map.items", "api/opto.trace.containers.Map.keys", "api/opto.trace.containers.Map.parameters", "api/opto.trace.containers.Map.parameters_dict", "api/opto.trace.containers.Map.pop", "api/opto.trace.containers.Map.popitem", "api/opto.trace.containers.Map.setdefault", "api/opto.trace.containers.Map.update", "api/opto.trace.containers.Map.values", "api/opto.trace.containers.NodeContainer", "api/opto.trace.containers.ParameterContainer", "api/opto.trace.containers.ParameterContainer.parameters", "api/opto.trace.containers.ParameterContainer.parameters_dict", "api/opto.trace.containers.Seq", "api/opto.trace.containers.Seq.append", "api/opto.trace.containers.Seq.clear", "api/opto.trace.containers.Seq.copy", "api/opto.trace.containers.Seq.count", "api/opto.trace.containers.Seq.extend", "api/opto.trace.containers.Seq.index", "api/opto.trace.containers.Seq.insert", "api/opto.trace.containers.Seq.parameters", "api/opto.trace.containers.Seq.parameters_dict", "api/opto.trace.containers.Seq.pop", "api/opto.trace.containers.Seq.remove", "api/opto.trace.containers.Seq.reverse", "api/opto.trace.containers.Seq.sort", "api/opto.trace.containers.trainable_method", "api/opto.trace.errors", "api/opto.trace.errors.ExecutionError", "api/opto.trace.errors.TraceMissingInputsError", "api/opto.trace.iterators", "api/opto.trace.iterators.DictIterable", "api/opto.trace.iterators.SeqIterable", "api/opto.trace.iterators.iterate", "api/opto.trace.modules", "api/opto.trace.modules.Module", "api/opto.trace.modules.Module.forward", "api/opto.trace.modules.Module.load", "api/opto.trace.modules.Module.parameters", "api/opto.trace.modules.Module.parameters_dict", "api/opto.trace.modules.Module.save", "api/opto.trace.modules.model", "api/opto.trace.nodes", "api/opto.trace.nodes.AbstractNode", "api/opto.trace.nodes.AbstractNode.children", "api/opto.trace.nodes.AbstractNode.data", "api/opto.trace.nodes.AbstractNode.gt", "api/opto.trace.nodes.AbstractNode.id", "api/opto.trace.nodes.AbstractNode.is_leaf", "api/opto.trace.nodes.AbstractNode.is_root", "api/opto.trace.nodes.AbstractNode.level", "api/opto.trace.nodes.AbstractNode.lt", "api/opto.trace.nodes.AbstractNode.name", "api/opto.trace.nodes.AbstractNode.parents", "api/opto.trace.nodes.AbstractNode.py_name", "api/opto.trace.nodes.ExceptionNode", "api/opto.trace.nodes.ExceptionNode.append", "api/opto.trace.nodes.ExceptionNode.backward", "api/opto.trace.nodes.ExceptionNode.call", "api/opto.trace.nodes.ExceptionNode.capitalize", "api/opto.trace.nodes.ExceptionNode.children", "api/opto.trace.nodes.ExceptionNode.clone", "api/opto.trace.nodes.ExceptionNode.create_feedback", "api/opto.trace.nodes.ExceptionNode.data", "api/opto.trace.nodes.ExceptionNode.description", "api/opto.trace.nodes.ExceptionNode.detach", "api/opto.trace.nodes.ExceptionNode.eq", "api/opto.trace.nodes.ExceptionNode.expandable_dependencies", "api/opto.trace.nodes.ExceptionNode.feedback", "api/opto.trace.nodes.ExceptionNode.format", "api/opto.trace.nodes.ExceptionNode.getattr", "api/opto.trace.nodes.ExceptionNode.gt", "api/opto.trace.nodes.ExceptionNode.hidden_dependencies", "api/opto.trace.nodes.ExceptionNode.id", "api/opto.trace.nodes.ExceptionNode.info", "api/opto.trace.nodes.ExceptionNode.inputs", "api/opto.trace.nodes.ExceptionNode.is_leaf", "api/opto.trace.nodes.ExceptionNode.is_root", "api/opto.trace.nodes.ExceptionNode.items", "api/opto.trace.nodes.ExceptionNode.join", "api/opto.trace.nodes.ExceptionNode.keys", "api/opto.trace.nodes.ExceptionNode.len", "api/opto.trace.nodes.ExceptionNode.level", "api/opto.trace.nodes.ExceptionNode.lower", "api/opto.trace.nodes.ExceptionNode.lt", "api/opto.trace.nodes.ExceptionNode.name", "api/opto.trace.nodes.ExceptionNode.neq", "api/opto.trace.nodes.ExceptionNode.parameter_dependencies", "api/opto.trace.nodes.ExceptionNode.parents", "api/opto.trace.nodes.ExceptionNode.pop", "api/opto.trace.nodes.ExceptionNode.py_name", "api/opto.trace.nodes.ExceptionNode.replace", "api/opto.trace.nodes.ExceptionNode.split", "api/opto.trace.nodes.ExceptionNode.strip", "api/opto.trace.nodes.ExceptionNode.swapcase", "api/opto.trace.nodes.ExceptionNode.title", "api/opto.trace.nodes.ExceptionNode.type", "api/opto.trace.nodes.ExceptionNode.upper", "api/opto.trace.nodes.ExceptionNode.values", "api/opto.trace.nodes.ExceptionNode.zero_feedback", "api/opto.trace.nodes.Graph", "api/opto.trace.nodes.Graph.TRACE", "api/opto.trace.nodes.Graph.clear", "api/opto.trace.nodes.Graph.get", "api/opto.trace.nodes.Graph.register", "api/opto.trace.nodes.Graph.roots", "api/opto.trace.nodes.MessageNode", "api/opto.trace.nodes.MessageNode.append", "api/opto.trace.nodes.MessageNode.backward", "api/opto.trace.nodes.MessageNode.call", "api/opto.trace.nodes.MessageNode.capitalize", "api/opto.trace.nodes.MessageNode.children", "api/opto.trace.nodes.MessageNode.clone", "api/opto.trace.nodes.MessageNode.data", "api/opto.trace.nodes.MessageNode.description", "api/opto.trace.nodes.MessageNode.detach", "api/opto.trace.nodes.MessageNode.eq", "api/opto.trace.nodes.MessageNode.expandable_dependencies", "api/opto.trace.nodes.MessageNode.feedback", "api/opto.trace.nodes.MessageNode.format", "api/opto.trace.nodes.MessageNode.getattr", "api/opto.trace.nodes.MessageNode.gt", "api/opto.trace.nodes.MessageNode.hidden_dependencies", "api/opto.trace.nodes.MessageNode.id", "api/opto.trace.nodes.MessageNode.info", "api/opto.trace.nodes.MessageNode.inputs", "api/opto.trace.nodes.MessageNode.is_leaf", "api/opto.trace.nodes.MessageNode.is_root", "api/opto.trace.nodes.MessageNode.items", "api/opto.trace.nodes.MessageNode.join", "api/opto.trace.nodes.MessageNode.keys", "api/opto.trace.nodes.MessageNode.len", "api/opto.trace.nodes.MessageNode.level", "api/opto.trace.nodes.MessageNode.lower", "api/opto.trace.nodes.MessageNode.lt", "api/opto.trace.nodes.MessageNode.name", "api/opto.trace.nodes.MessageNode.neq", "api/opto.trace.nodes.MessageNode.parameter_dependencies", "api/opto.trace.nodes.MessageNode.parents", "api/opto.trace.nodes.MessageNode.pop", "api/opto.trace.nodes.MessageNode.py_name", "api/opto.trace.nodes.MessageNode.replace", "api/opto.trace.nodes.MessageNode.split", "api/opto.trace.nodes.MessageNode.strip", "api/opto.trace.nodes.MessageNode.swapcase", "api/opto.trace.nodes.MessageNode.title", "api/opto.trace.nodes.MessageNode.type", "api/opto.trace.nodes.MessageNode.upper", "api/opto.trace.nodes.MessageNode.values", "api/opto.trace.nodes.MessageNode.zero_feedback", "api/opto.trace.nodes.Node", "api/opto.trace.nodes.Node.append", "api/opto.trace.nodes.Node.backward", "api/opto.trace.nodes.Node.call", "api/opto.trace.nodes.Node.capitalize", "api/opto.trace.nodes.Node.children", "api/opto.trace.nodes.Node.clone", "api/opto.trace.nodes.Node.data", "api/opto.trace.nodes.Node.description", "api/opto.trace.nodes.Node.detach", "api/opto.trace.nodes.Node.eq", "api/opto.trace.nodes.Node.expandable_dependencies", "api/opto.trace.nodes.Node.feedback", "api/opto.trace.nodes.Node.format", "api/opto.trace.nodes.Node.getattr", "api/opto.trace.nodes.Node.gt", "api/opto.trace.nodes.Node.id", "api/opto.trace.nodes.Node.info", "api/opto.trace.nodes.Node.is_leaf", "api/opto.trace.nodes.Node.is_root", "api/opto.trace.nodes.Node.items", "api/opto.trace.nodes.Node.join", "api/opto.trace.nodes.Node.keys", "api/opto.trace.nodes.Node.len", "api/opto.trace.nodes.Node.level", "api/opto.trace.nodes.Node.lower", "api/opto.trace.nodes.Node.lt", "api/opto.trace.nodes.Node.name", "api/opto.trace.nodes.Node.neq", "api/opto.trace.nodes.Node.parameter_dependencies", "api/opto.trace.nodes.Node.parents", "api/opto.trace.nodes.Node.pop", "api/opto.trace.nodes.Node.py_name", "api/opto.trace.nodes.Node.replace", "api/opto.trace.nodes.Node.split", "api/opto.trace.nodes.Node.strip", "api/opto.trace.nodes.Node.swapcase", "api/opto.trace.nodes.Node.title", "api/opto.trace.nodes.Node.type", "api/opto.trace.nodes.Node.upper", "api/opto.trace.nodes.Node.values", "api/opto.trace.nodes.Node.zero_feedback", "api/opto.trace.nodes.NodeVizStyleGuide", "api/opto.trace.nodes.NodeVizStyleGuide.get_attrs", "api/opto.trace.nodes.NodeVizStyleGuide.get_color", "api/opto.trace.nodes.NodeVizStyleGuide.get_label", "api/opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "api/opto.trace.nodes.NodeVizStyleGuide.get_style", "api/opto.trace.nodes.NodeVizStyleGuideColorful", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "api/opto.trace.nodes.ParameterNode", "api/opto.trace.nodes.ParameterNode.append", "api/opto.trace.nodes.ParameterNode.backward", "api/opto.trace.nodes.ParameterNode.call", "api/opto.trace.nodes.ParameterNode.capitalize", "api/opto.trace.nodes.ParameterNode.children", "api/opto.trace.nodes.ParameterNode.clone", "api/opto.trace.nodes.ParameterNode.data", "api/opto.trace.nodes.ParameterNode.description", "api/opto.trace.nodes.ParameterNode.detach", "api/opto.trace.nodes.ParameterNode.eq", "api/opto.trace.nodes.ParameterNode.expandable_dependencies", "api/opto.trace.nodes.ParameterNode.feedback", "api/opto.trace.nodes.ParameterNode.format", "api/opto.trace.nodes.ParameterNode.getattr", "api/opto.trace.nodes.ParameterNode.gt", "api/opto.trace.nodes.ParameterNode.id", "api/opto.trace.nodes.ParameterNode.info", "api/opto.trace.nodes.ParameterNode.is_leaf", "api/opto.trace.nodes.ParameterNode.is_root", "api/opto.trace.nodes.ParameterNode.items", "api/opto.trace.nodes.ParameterNode.join", "api/opto.trace.nodes.ParameterNode.keys", "api/opto.trace.nodes.ParameterNode.len", "api/opto.trace.nodes.ParameterNode.level", "api/opto.trace.nodes.ParameterNode.lower", "api/opto.trace.nodes.ParameterNode.lt", "api/opto.trace.nodes.ParameterNode.name", "api/opto.trace.nodes.ParameterNode.neq", "api/opto.trace.nodes.ParameterNode.parameter_dependencies", "api/opto.trace.nodes.ParameterNode.parents", "api/opto.trace.nodes.ParameterNode.pop", "api/opto.trace.nodes.ParameterNode.py_name", "api/opto.trace.nodes.ParameterNode.replace", "api/opto.trace.nodes.ParameterNode.split", "api/opto.trace.nodes.ParameterNode.strip", "api/opto.trace.nodes.ParameterNode.swapcase", "api/opto.trace.nodes.ParameterNode.title", "api/opto.trace.nodes.ParameterNode.type", "api/opto.trace.nodes.ParameterNode.upper", "api/opto.trace.nodes.ParameterNode.values", "api/opto.trace.nodes.ParameterNode.zero_feedback", "api/opto.trace.nodes.get_op_name", "api/opto.trace.nodes.node-function", "api/opto.trace.operators", "api/opto.trace.operators.identity", "api/opto.trace.propagators", "api/opto.trace.propagators.graph_propagator", "api/opto.trace.propagators.graph_propagator.GraphPropagator", "api/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "api/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "api/opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "api/opto.trace.propagators.graph_propagator.GraphPropagator.register", "api/opto.trace.propagators.graph_propagator.TraceGraph", "api/opto.trace.propagators.graph_propagator.TraceGraph.empty", "api/opto.trace.propagators.graph_propagator.TraceGraph.expand", "api/opto.trace.propagators.graph_propagator.TraceGraph.graph", "api/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "api/opto.trace.propagators.graph_propagator.TraceGraph.visualize", "api/opto.trace.propagators.propagators", "api/opto.trace.propagators.propagators.AbstractFeedback", "api/opto.trace.propagators.propagators.AbstractPropagator", "api/opto.trace.propagators.propagators.AbstractPropagator.propagate", "api/opto.trace.propagators.propagators.Propagator", "api/opto.trace.propagators.propagators.Propagator.init_feedback", "api/opto.trace.propagators.propagators.Propagator.propagate", "api/opto.trace.propagators.propagators.Propagator.register", "api/opto.trace.propagators.propagators.SumPropagator", "api/opto.trace.propagators.propagators.SumPropagator.init_feedback", "api/opto.trace.propagators.propagators.SumPropagator.propagate", "api/opto.trace.propagators.propagators.SumPropagator.register", "api/opto.trace.stop_tracing", "api/opto.trace.utils", "api/opto.trace.utils.contain", "api/opto.trace.utils.escape_json_nested_quotes", "api/opto.trace.utils.for_all_methods", "api/opto.trace.utils.parse_eqs_to_dict", "api/opto.trace.utils.remove_non_ascii", "api/opto.trace.utils.render_opt_step", "api/opto.trace.utils.sum_feedback", "api/opto.trace.utils.test_json_quote_escaper", "api/opto.utils", "api/opto.utils.llm", "api/opto.utils.llm.AbstractModel", "api/opto.utils.llm.AbstractModel.model", "api/opto.utils.llm.AutoGenLLM", "api/opto.utils.llm.AutoGenLLM.create", "api/opto.utils.llm.AutoGenLLM.model", "api/opto.utils.llm.auto_construct_oai_config_list_from_env", "api/opto.version", "examples/game/battleship", "examples/game/negotiation_arena", "examples/nlp/bigbench_hard", "examples/robotics/metaworld", "faq/faq", "intro", "quickstart/installation", "quickstart/quick_start", "quickstart/quick_start_2", "quickstart/virtualhome", "tutorials/basic_tutorial", "tutorials/custom_optimizers", "tutorials/error_handling_tutorial", "tutorials/minibatch", "tutorials/optimization_tutorial"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/opto.rst", "api/opto.optimizers.rst", "api/opto.optimizers.buffers.rst", "api/opto.optimizers.buffers.FIFOBuffer.rst", "api/opto.optimizers.buffers.FIFOBuffer.add.rst", "api/opto.optimizers.opro.rst", "api/opto.optimizers.opro.OPRO.rst", "api/opto.optimizers.opro.OPRO.backward.rst", "api/opto.optimizers.opro.OPRO.call_llm.rst", "api/opto.optimizers.opro.OPRO.construct_prompt.rst", "api/opto.optimizers.opro.OPRO.construct_update_dict.rst", "api/opto.optimizers.opro.OPRO.default_objective.rst", "api/opto.optimizers.opro.OPRO.default_prompt_symbols.rst", "api/opto.optimizers.opro.OPRO.default_propagator.rst", "api/opto.optimizers.opro.OPRO.example_problem_template.rst", "api/opto.optimizers.opro.OPRO.example_prompt.rst", "api/opto.optimizers.opro.OPRO.extract_llm_suggestion.rst", "api/opto.optimizers.opro.OPRO.final_prompt.rst", "api/opto.optimizers.opro.OPRO.output_format_prompt.rst", "api/opto.optimizers.opro.OPRO.problem_instance.rst", "api/opto.optimizers.opro.OPRO.propagator.rst", "api/opto.optimizers.opro.OPRO.propose.rst", "api/opto.optimizers.opro.OPRO.replace_symbols.rst", "api/opto.optimizers.opro.OPRO.repr_node_constraint.rst", "api/opto.optimizers.opro.OPRO.repr_node_value.rst", "api/opto.optimizers.opro.OPRO.representation_prompt.rst", "api/opto.optimizers.opro.OPRO.step.rst", "api/opto.optimizers.opro.OPRO.summarize.rst", "api/opto.optimizers.opro.OPRO.trace_graph.rst", "api/opto.optimizers.opro.OPRO.update.rst", "api/opto.optimizers.opro.OPRO.user_prompt_template.rst", "api/opto.optimizers.opro.OPRO.zero_feedback.rst", "api/opto.optimizers.optimizer.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.propagator.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.step.rst", "api/opto.optimizers.optimizer.AbstractOptimizer.zero_feedback.rst", "api/opto.optimizers.optimizer.Optimizer.rst", "api/opto.optimizers.optimizer.Optimizer.backward.rst", "api/opto.optimizers.optimizer.Optimizer.default_propagator.rst", "api/opto.optimizers.optimizer.Optimizer.propagator.rst", "api/opto.optimizers.optimizer.Optimizer.propose.rst", "api/opto.optimizers.optimizer.Optimizer.step.rst", "api/opto.optimizers.optimizer.Optimizer.trace_graph.rst", "api/opto.optimizers.optimizer.Optimizer.update.rst", "api/opto.optimizers.optimizer.Optimizer.zero_feedback.rst", "api/opto.optimizers.optoprime.rst", "api/opto.optimizers.optoprime.FunctionFeedback.rst", "api/opto.optimizers.optoprime.FunctionFeedback.documentation.rst", "api/opto.optimizers.optoprime.FunctionFeedback.graph.rst", "api/opto.optimizers.optoprime.FunctionFeedback.others.rst", "api/opto.optimizers.optoprime.FunctionFeedback.output.rst", "api/opto.optimizers.optoprime.FunctionFeedback.roots.rst", "api/opto.optimizers.optoprime.FunctionFeedback.user_feedback.rst", "api/opto.optimizers.optoprime.OptoPrime.rst", "api/opto.optimizers.optoprime.OptoPrime.backward.rst", "api/opto.optimizers.optoprime.OptoPrime.call_llm.rst", "api/opto.optimizers.optoprime.OptoPrime.construct_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.construct_update_dict.rst", "api/opto.optimizers.optoprime.OptoPrime.default_objective.rst", "api/opto.optimizers.optoprime.OptoPrime.default_prompt_symbols.rst", "api/opto.optimizers.optoprime.OptoPrime.default_propagator.rst", "api/opto.optimizers.optoprime.OptoPrime.example_problem_template.rst", "api/opto.optimizers.optoprime.OptoPrime.example_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion.rst", "api/opto.optimizers.optoprime.OptoPrime.final_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.output_format_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.problem_instance.rst", "api/opto.optimizers.optoprime.OptoPrime.propagator.rst", "api/opto.optimizers.optoprime.OptoPrime.propose.rst", "api/opto.optimizers.optoprime.OptoPrime.replace_symbols.rst", "api/opto.optimizers.optoprime.OptoPrime.repr_node_constraint.rst", "api/opto.optimizers.optoprime.OptoPrime.repr_node_value.rst", "api/opto.optimizers.optoprime.OptoPrime.representation_prompt.rst", "api/opto.optimizers.optoprime.OptoPrime.step.rst", "api/opto.optimizers.optoprime.OptoPrime.summarize.rst", "api/opto.optimizers.optoprime.OptoPrime.trace_graph.rst", "api/opto.optimizers.optoprime.OptoPrime.update.rst", "api/opto.optimizers.optoprime.OptoPrime.user_prompt_template.rst", "api/opto.optimizers.optoprime.OptoPrime.zero_feedback.rst", "api/opto.optimizers.optoprime.ProblemInstance.rst", "api/opto.optimizers.optoprime.ProblemInstance.code.rst", "api/opto.optimizers.optoprime.ProblemInstance.constraints.rst", "api/opto.optimizers.optoprime.ProblemInstance.documentation.rst", "api/opto.optimizers.optoprime.ProblemInstance.feedback.rst", "api/opto.optimizers.optoprime.ProblemInstance.inputs.rst", "api/opto.optimizers.optoprime.ProblemInstance.instruction.rst", "api/opto.optimizers.optoprime.ProblemInstance.others.rst", "api/opto.optimizers.optoprime.ProblemInstance.outputs.rst", "api/opto.optimizers.optoprime.ProblemInstance.problem_template.rst", "api/opto.optimizers.optoprime.ProblemInstance.variables.rst", "api/opto.optimizers.optoprime.get_fun_name.rst", "api/opto.optimizers.optoprime.node_to_function_feedback.rst", "api/opto.optimizers.optoprime.repr_function_call.rst", "api/opto.optimizers.textgrad.rst", "api/opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE.rst", "api/opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION.rst", "api/opto.optimizers.textgrad.GradientInfo.rst", "api/opto.optimizers.textgrad.GradientInfo.gradient.rst", "api/opto.optimizers.textgrad.GradientInfo.gradient_context.rst", "api/opto.optimizers.textgrad.TextGrad.rst", "api/opto.optimizers.textgrad.TextGrad.backward.rst", "api/opto.optimizers.textgrad.TextGrad.call_llm.rst", "api/opto.optimizers.textgrad.TextGrad.default_propagator.rst", "api/opto.optimizers.textgrad.TextGrad.propagator.rst", "api/opto.optimizers.textgrad.TextGrad.propose.rst", "api/opto.optimizers.textgrad.TextGrad.step.rst", "api/opto.optimizers.textgrad.TextGrad.trace_graph.rst", "api/opto.optimizers.textgrad.TextGrad.update.rst", "api/opto.optimizers.textgrad.TextGrad.zero_feedback.rst", "api/opto.optimizers.textgrad.construct_reduce_prompt.rst", "api/opto.optimizers.textgrad.construct_tgd_prompt.rst", "api/opto.optimizers.textgrad.get_short_value.rst", "api/opto.optimizers.textgrad.rm_node_attrs.rst", "api/opto.optimizers.utils.rst", "api/opto.optimizers.utils.print_color.rst", "api/opto.trace.rst", "api/opto.trace.broadcast.rst", "api/opto.trace.broadcast.apply_op.rst", "api/opto.trace.broadcast.recursive_conversion.rst", "api/opto.trace.bundle.rst", "api/opto.trace.containers.rst", "api/opto.trace.containers.Map.rst", "api/opto.trace.containers.Map.clear.rst", "api/opto.trace.containers.Map.copy.rst", "api/opto.trace.containers.Map.fromkeys.rst", "api/opto.trace.containers.Map.get.rst", "api/opto.trace.containers.Map.items.rst", "api/opto.trace.containers.Map.keys.rst", "api/opto.trace.containers.Map.parameters.rst", "api/opto.trace.containers.Map.parameters_dict.rst", "api/opto.trace.containers.Map.pop.rst", "api/opto.trace.containers.Map.popitem.rst", "api/opto.trace.containers.Map.setdefault.rst", "api/opto.trace.containers.Map.update.rst", "api/opto.trace.containers.Map.values.rst", "api/opto.trace.containers.NodeContainer.rst", "api/opto.trace.containers.ParameterContainer.rst", "api/opto.trace.containers.ParameterContainer.parameters.rst", "api/opto.trace.containers.ParameterContainer.parameters_dict.rst", "api/opto.trace.containers.Seq.rst", "api/opto.trace.containers.Seq.append.rst", "api/opto.trace.containers.Seq.clear.rst", "api/opto.trace.containers.Seq.copy.rst", "api/opto.trace.containers.Seq.count.rst", "api/opto.trace.containers.Seq.extend.rst", "api/opto.trace.containers.Seq.index.rst", "api/opto.trace.containers.Seq.insert.rst", "api/opto.trace.containers.Seq.parameters.rst", "api/opto.trace.containers.Seq.parameters_dict.rst", "api/opto.trace.containers.Seq.pop.rst", "api/opto.trace.containers.Seq.remove.rst", "api/opto.trace.containers.Seq.reverse.rst", "api/opto.trace.containers.Seq.sort.rst", "api/opto.trace.containers.trainable_method.rst", "api/opto.trace.errors.rst", "api/opto.trace.errors.ExecutionError.rst", "api/opto.trace.errors.TraceMissingInputsError.rst", "api/opto.trace.iterators.rst", "api/opto.trace.iterators.DictIterable.rst", "api/opto.trace.iterators.SeqIterable.rst", "api/opto.trace.iterators.iterate.rst", "api/opto.trace.modules.rst", "api/opto.trace.modules.Module.rst", "api/opto.trace.modules.Module.forward.rst", "api/opto.trace.modules.Module.load.rst", "api/opto.trace.modules.Module.parameters.rst", "api/opto.trace.modules.Module.parameters_dict.rst", "api/opto.trace.modules.Module.save.rst", "api/opto.trace.modules.model.rst", "api/opto.trace.nodes.rst", "api/opto.trace.nodes.AbstractNode.rst", "api/opto.trace.nodes.AbstractNode.children.rst", "api/opto.trace.nodes.AbstractNode.data.rst", "api/opto.trace.nodes.AbstractNode.gt.rst", "api/opto.trace.nodes.AbstractNode.id.rst", "api/opto.trace.nodes.AbstractNode.is_leaf.rst", "api/opto.trace.nodes.AbstractNode.is_root.rst", "api/opto.trace.nodes.AbstractNode.level.rst", "api/opto.trace.nodes.AbstractNode.lt.rst", "api/opto.trace.nodes.AbstractNode.name.rst", "api/opto.trace.nodes.AbstractNode.parents.rst", "api/opto.trace.nodes.AbstractNode.py_name.rst", "api/opto.trace.nodes.ExceptionNode.rst", "api/opto.trace.nodes.ExceptionNode.append.rst", "api/opto.trace.nodes.ExceptionNode.backward.rst", "api/opto.trace.nodes.ExceptionNode.call.rst", "api/opto.trace.nodes.ExceptionNode.capitalize.rst", "api/opto.trace.nodes.ExceptionNode.children.rst", "api/opto.trace.nodes.ExceptionNode.clone.rst", "api/opto.trace.nodes.ExceptionNode.create_feedback.rst", "api/opto.trace.nodes.ExceptionNode.data.rst", "api/opto.trace.nodes.ExceptionNode.description.rst", "api/opto.trace.nodes.ExceptionNode.detach.rst", "api/opto.trace.nodes.ExceptionNode.eq.rst", "api/opto.trace.nodes.ExceptionNode.expandable_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.feedback.rst", "api/opto.trace.nodes.ExceptionNode.format.rst", "api/opto.trace.nodes.ExceptionNode.getattr.rst", "api/opto.trace.nodes.ExceptionNode.gt.rst", "api/opto.trace.nodes.ExceptionNode.hidden_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.id.rst", "api/opto.trace.nodes.ExceptionNode.info.rst", "api/opto.trace.nodes.ExceptionNode.inputs.rst", "api/opto.trace.nodes.ExceptionNode.is_leaf.rst", "api/opto.trace.nodes.ExceptionNode.is_root.rst", "api/opto.trace.nodes.ExceptionNode.items.rst", "api/opto.trace.nodes.ExceptionNode.join.rst", "api/opto.trace.nodes.ExceptionNode.keys.rst", "api/opto.trace.nodes.ExceptionNode.len.rst", "api/opto.trace.nodes.ExceptionNode.level.rst", "api/opto.trace.nodes.ExceptionNode.lower.rst", "api/opto.trace.nodes.ExceptionNode.lt.rst", "api/opto.trace.nodes.ExceptionNode.name.rst", "api/opto.trace.nodes.ExceptionNode.neq.rst", "api/opto.trace.nodes.ExceptionNode.parameter_dependencies.rst", "api/opto.trace.nodes.ExceptionNode.parents.rst", "api/opto.trace.nodes.ExceptionNode.pop.rst", "api/opto.trace.nodes.ExceptionNode.py_name.rst", "api/opto.trace.nodes.ExceptionNode.replace.rst", "api/opto.trace.nodes.ExceptionNode.split.rst", "api/opto.trace.nodes.ExceptionNode.strip.rst", "api/opto.trace.nodes.ExceptionNode.swapcase.rst", "api/opto.trace.nodes.ExceptionNode.title.rst", "api/opto.trace.nodes.ExceptionNode.type.rst", "api/opto.trace.nodes.ExceptionNode.upper.rst", "api/opto.trace.nodes.ExceptionNode.values.rst", "api/opto.trace.nodes.ExceptionNode.zero_feedback.rst", "api/opto.trace.nodes.Graph.rst", "api/opto.trace.nodes.Graph.TRACE.rst", "api/opto.trace.nodes.Graph.clear.rst", "api/opto.trace.nodes.Graph.get.rst", "api/opto.trace.nodes.Graph.register.rst", "api/opto.trace.nodes.Graph.roots.rst", "api/opto.trace.nodes.MessageNode.rst", "api/opto.trace.nodes.MessageNode.append.rst", "api/opto.trace.nodes.MessageNode.backward.rst", "api/opto.trace.nodes.MessageNode.call.rst", "api/opto.trace.nodes.MessageNode.capitalize.rst", "api/opto.trace.nodes.MessageNode.children.rst", "api/opto.trace.nodes.MessageNode.clone.rst", "api/opto.trace.nodes.MessageNode.data.rst", "api/opto.trace.nodes.MessageNode.description.rst", "api/opto.trace.nodes.MessageNode.detach.rst", "api/opto.trace.nodes.MessageNode.eq.rst", "api/opto.trace.nodes.MessageNode.expandable_dependencies.rst", "api/opto.trace.nodes.MessageNode.feedback.rst", "api/opto.trace.nodes.MessageNode.format.rst", "api/opto.trace.nodes.MessageNode.getattr.rst", "api/opto.trace.nodes.MessageNode.gt.rst", "api/opto.trace.nodes.MessageNode.hidden_dependencies.rst", "api/opto.trace.nodes.MessageNode.id.rst", "api/opto.trace.nodes.MessageNode.info.rst", "api/opto.trace.nodes.MessageNode.inputs.rst", "api/opto.trace.nodes.MessageNode.is_leaf.rst", "api/opto.trace.nodes.MessageNode.is_root.rst", "api/opto.trace.nodes.MessageNode.items.rst", "api/opto.trace.nodes.MessageNode.join.rst", "api/opto.trace.nodes.MessageNode.keys.rst", "api/opto.trace.nodes.MessageNode.len.rst", "api/opto.trace.nodes.MessageNode.level.rst", "api/opto.trace.nodes.MessageNode.lower.rst", "api/opto.trace.nodes.MessageNode.lt.rst", "api/opto.trace.nodes.MessageNode.name.rst", "api/opto.trace.nodes.MessageNode.neq.rst", "api/opto.trace.nodes.MessageNode.parameter_dependencies.rst", "api/opto.trace.nodes.MessageNode.parents.rst", "api/opto.trace.nodes.MessageNode.pop.rst", "api/opto.trace.nodes.MessageNode.py_name.rst", "api/opto.trace.nodes.MessageNode.replace.rst", "api/opto.trace.nodes.MessageNode.split.rst", "api/opto.trace.nodes.MessageNode.strip.rst", "api/opto.trace.nodes.MessageNode.swapcase.rst", "api/opto.trace.nodes.MessageNode.title.rst", "api/opto.trace.nodes.MessageNode.type.rst", "api/opto.trace.nodes.MessageNode.upper.rst", "api/opto.trace.nodes.MessageNode.values.rst", "api/opto.trace.nodes.MessageNode.zero_feedback.rst", "api/opto.trace.nodes.Node.rst", "api/opto.trace.nodes.Node.append.rst", "api/opto.trace.nodes.Node.backward.rst", "api/opto.trace.nodes.Node.call.rst", "api/opto.trace.nodes.Node.capitalize.rst", "api/opto.trace.nodes.Node.children.rst", "api/opto.trace.nodes.Node.clone.rst", "api/opto.trace.nodes.Node.data.rst", "api/opto.trace.nodes.Node.description.rst", "api/opto.trace.nodes.Node.detach.rst", "api/opto.trace.nodes.Node.eq.rst", "api/opto.trace.nodes.Node.expandable_dependencies.rst", "api/opto.trace.nodes.Node.feedback.rst", "api/opto.trace.nodes.Node.format.rst", "api/opto.trace.nodes.Node.getattr.rst", "api/opto.trace.nodes.Node.gt.rst", "api/opto.trace.nodes.Node.id.rst", "api/opto.trace.nodes.Node.info.rst", "api/opto.trace.nodes.Node.is_leaf.rst", "api/opto.trace.nodes.Node.is_root.rst", "api/opto.trace.nodes.Node.items.rst", "api/opto.trace.nodes.Node.join.rst", "api/opto.trace.nodes.Node.keys.rst", "api/opto.trace.nodes.Node.len.rst", "api/opto.trace.nodes.Node.level.rst", "api/opto.trace.nodes.Node.lower.rst", "api/opto.trace.nodes.Node.lt.rst", "api/opto.trace.nodes.Node.name.rst", "api/opto.trace.nodes.Node.neq.rst", "api/opto.trace.nodes.Node.parameter_dependencies.rst", "api/opto.trace.nodes.Node.parents.rst", "api/opto.trace.nodes.Node.pop.rst", "api/opto.trace.nodes.Node.py_name.rst", "api/opto.trace.nodes.Node.replace.rst", "api/opto.trace.nodes.Node.split.rst", "api/opto.trace.nodes.Node.strip.rst", "api/opto.trace.nodes.Node.swapcase.rst", "api/opto.trace.nodes.Node.title.rst", "api/opto.trace.nodes.Node.type.rst", "api/opto.trace.nodes.Node.upper.rst", "api/opto.trace.nodes.Node.values.rst", "api/opto.trace.nodes.Node.zero_feedback.rst", "api/opto.trace.nodes.NodeVizStyleGuide.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_attrs.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_color.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_label.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_node_shape.rst", "api/opto.trace.nodes.NodeVizStyleGuide.get_style.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_color.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_label.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape.rst", "api/opto.trace.nodes.NodeVizStyleGuideColorful.get_style.rst", "api/opto.trace.nodes.ParameterNode.rst", "api/opto.trace.nodes.ParameterNode.append.rst", "api/opto.trace.nodes.ParameterNode.backward.rst", "api/opto.trace.nodes.ParameterNode.call.rst", "api/opto.trace.nodes.ParameterNode.capitalize.rst", "api/opto.trace.nodes.ParameterNode.children.rst", "api/opto.trace.nodes.ParameterNode.clone.rst", "api/opto.trace.nodes.ParameterNode.data.rst", "api/opto.trace.nodes.ParameterNode.description.rst", "api/opto.trace.nodes.ParameterNode.detach.rst", "api/opto.trace.nodes.ParameterNode.eq.rst", "api/opto.trace.nodes.ParameterNode.expandable_dependencies.rst", "api/opto.trace.nodes.ParameterNode.feedback.rst", "api/opto.trace.nodes.ParameterNode.format.rst", "api/opto.trace.nodes.ParameterNode.getattr.rst", "api/opto.trace.nodes.ParameterNode.gt.rst", "api/opto.trace.nodes.ParameterNode.id.rst", "api/opto.trace.nodes.ParameterNode.info.rst", "api/opto.trace.nodes.ParameterNode.is_leaf.rst", "api/opto.trace.nodes.ParameterNode.is_root.rst", "api/opto.trace.nodes.ParameterNode.items.rst", "api/opto.trace.nodes.ParameterNode.join.rst", "api/opto.trace.nodes.ParameterNode.keys.rst", "api/opto.trace.nodes.ParameterNode.len.rst", "api/opto.trace.nodes.ParameterNode.level.rst", "api/opto.trace.nodes.ParameterNode.lower.rst", "api/opto.trace.nodes.ParameterNode.lt.rst", "api/opto.trace.nodes.ParameterNode.name.rst", "api/opto.trace.nodes.ParameterNode.neq.rst", "api/opto.trace.nodes.ParameterNode.parameter_dependencies.rst", "api/opto.trace.nodes.ParameterNode.parents.rst", "api/opto.trace.nodes.ParameterNode.pop.rst", "api/opto.trace.nodes.ParameterNode.py_name.rst", "api/opto.trace.nodes.ParameterNode.replace.rst", "api/opto.trace.nodes.ParameterNode.split.rst", "api/opto.trace.nodes.ParameterNode.strip.rst", "api/opto.trace.nodes.ParameterNode.swapcase.rst", "api/opto.trace.nodes.ParameterNode.title.rst", "api/opto.trace.nodes.ParameterNode.type.rst", "api/opto.trace.nodes.ParameterNode.upper.rst", "api/opto.trace.nodes.ParameterNode.values.rst", "api/opto.trace.nodes.ParameterNode.zero_feedback.rst", "api/opto.trace.nodes.get_op_name.rst", "api/opto.trace.nodes.node-function.rst", "api/opto.trace.operators.rst", "api/opto.trace.operators.identity.rst", "api/opto.trace.propagators.rst", "api/opto.trace.propagators.graph_propagator.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.aggregate.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.propagate.rst", "api/opto.trace.propagators.graph_propagator.GraphPropagator.register.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.empty.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.expand.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.graph.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.user_feedback.rst", "api/opto.trace.propagators.graph_propagator.TraceGraph.visualize.rst", "api/opto.trace.propagators.propagators.rst", "api/opto.trace.propagators.propagators.AbstractFeedback.rst", "api/opto.trace.propagators.propagators.AbstractPropagator.rst", "api/opto.trace.propagators.propagators.AbstractPropagator.propagate.rst", "api/opto.trace.propagators.propagators.Propagator.rst", "api/opto.trace.propagators.propagators.Propagator.init_feedback.rst", "api/opto.trace.propagators.propagators.Propagator.propagate.rst", "api/opto.trace.propagators.propagators.Propagator.register.rst", "api/opto.trace.propagators.propagators.SumPropagator.rst", "api/opto.trace.propagators.propagators.SumPropagator.init_feedback.rst", "api/opto.trace.propagators.propagators.SumPropagator.propagate.rst", "api/opto.trace.propagators.propagators.SumPropagator.register.rst", "api/opto.trace.stop_tracing.rst", "api/opto.trace.utils.rst", "api/opto.trace.utils.contain.rst", "api/opto.trace.utils.escape_json_nested_quotes.rst", "api/opto.trace.utils.for_all_methods.rst", "api/opto.trace.utils.parse_eqs_to_dict.rst", "api/opto.trace.utils.remove_non_ascii.rst", "api/opto.trace.utils.render_opt_step.rst", "api/opto.trace.utils.sum_feedback.rst", "api/opto.trace.utils.test_json_quote_escaper.rst", "api/opto.utils.rst", "api/opto.utils.llm.rst", "api/opto.utils.llm.AbstractModel.rst", "api/opto.utils.llm.AbstractModel.model.rst", "api/opto.utils.llm.AutoGenLLM.rst", "api/opto.utils.llm.AutoGenLLM.create.rst", "api/opto.utils.llm.AutoGenLLM.model.rst", "api/opto.utils.llm.auto_construct_oai_config_list_from_env.rst", "api/opto.version.rst", "examples/game/battleship.ipynb", "examples/game/negotiation_arena.ipynb", "examples/nlp/bigbench_hard.ipynb", "examples/robotics/metaworld.ipynb", "faq/faq.md", "intro.md", "quickstart/installation.md", "quickstart/quick_start.ipynb", "quickstart/quick_start_2.ipynb", "quickstart/virtualhome.md", "tutorials/basic_tutorial.ipynb", "tutorials/custom_optimizers.ipynb", "tutorials/error_handling_tutorial.ipynb", "tutorials/minibatch.ipynb", "tutorials/optimization_tutorial.ipynb"], "indexentries": {"__init__() (abstractfeedback method)": [[394, "opto.trace.propagators.propagators.AbstractFeedback.__init__", false]], "__init__() (abstractmodel method)": [[417, "opto.utils.llm.AbstractModel.__init__", false]], "__init__() (abstractnode method)": [[172, "opto.trace.nodes.AbstractNode.__init__", false]], "__init__() (abstractoptimizer method)": [[34, "opto.optimizers.optimizer.AbstractOptimizer.__init__", false]], "__init__() (abstractpropagator method)": [[395, "opto.trace.propagators.propagators.AbstractPropagator.__init__", false]], "__init__() (autogenllm method)": [[419, "opto.utils.llm.AutoGenLLM.__init__", false]], "__init__() (dictiterable method)": [[160, "opto.trace.iterators.DictIterable.__init__", false]], "__init__() (exceptionnode method)": [[184, "opto.trace.nodes.ExceptionNode.__init__", false]], "__init__() (executionerror method)": [[157, "opto.trace.errors.ExecutionError.__init__", false]], "__init__() (fifobuffer method)": [[4, "opto.optimizers.buffers.FIFOBuffer.__init__", false]], "__init__() (functionfeedback method)": [[48, "opto.optimizers.optoprime.FunctionFeedback.__init__", false]], "__init__() (gradientinfo method)": [[98, "opto.optimizers.textgrad.GradientInfo.__init__", false]], "__init__() (graph method)": [[229, "opto.trace.nodes.Graph.__init__", false]], "__init__() (graphpropagator method)": [[382, "opto.trace.propagators.graph_propagator.GraphPropagator.__init__", false]], "__init__() (map method)": [[123, "opto.trace.containers.Map.__init__", false]], "__init__() (messagenode method)": [[235, "opto.trace.nodes.MessageNode.__init__", false]], "__init__() (module method)": [[164, "opto.trace.modules.Module.__init__", false]], "__init__() (node method)": [[279, "opto.trace.nodes.Node.__init__", false]], "__init__() (nodecontainer method)": [[137, "opto.trace.containers.NodeContainer.__init__", false]], "__init__() (nodevizstyleguide method)": [[321, "opto.trace.nodes.NodeVizStyleGuide.__init__", false]], "__init__() (nodevizstyleguidecolorful method)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful.__init__", false]], "__init__() (opro method)": [[7, "opto.optimizers.opro.OPRO.__init__", false]], "__init__() (optimizer method)": [[38, "opto.optimizers.optimizer.Optimizer.__init__", false]], "__init__() (optoprime method)": [[55, "opto.optimizers.optoprime.OptoPrime.__init__", false]], "__init__() (parametercontainer method)": [[138, "opto.trace.containers.ParameterContainer.__init__", false]], "__init__() (parameternode method)": [[334, "opto.trace.nodes.ParameterNode.__init__", false]], "__init__() (probleminstance method)": [[81, "opto.optimizers.optoprime.ProblemInstance.__init__", false]], "__init__() (propagator method)": [[397, "opto.trace.propagators.propagators.Propagator.__init__", false]], "__init__() (seq method)": [[141, "opto.trace.containers.Seq.__init__", false]], "__init__() (seqiterable method)": [[161, "opto.trace.iterators.SeqIterable.__init__", false]], "__init__() (stop_tracing method)": [[405, "opto.trace.stop_tracing.__init__", false]], "__init__() (sumpropagator method)": [[401, "opto.trace.propagators.propagators.SumPropagator.__init__", false]], "__init__() (textgrad method)": [[101, "opto.optimizers.textgrad.TextGrad.__init__", false]], "__init__() (tracegraph method)": [[387, "opto.trace.propagators.graph_propagator.TraceGraph.__init__", false]], "__init__() (tracemissinginputserror method)": [[158, "opto.trace.errors.TraceMissingInputsError.__init__", false]], "__new__() (abstractfeedback method)": [[394, "opto.trace.propagators.propagators.AbstractFeedback.__new__", false]], "__new__() (abstractmodel method)": [[417, "opto.utils.llm.AbstractModel.__new__", false]], "__new__() (abstractnode method)": [[172, "opto.trace.nodes.AbstractNode.__new__", false]], "__new__() (abstractoptimizer method)": [[34, "opto.optimizers.optimizer.AbstractOptimizer.__new__", false]], "__new__() (abstractpropagator method)": [[395, "opto.trace.propagators.propagators.AbstractPropagator.__new__", false]], "__new__() (autogenllm method)": [[419, "opto.utils.llm.AutoGenLLM.__new__", false]], "__new__() (dictiterable method)": [[160, "opto.trace.iterators.DictIterable.__new__", false]], "__new__() (exceptionnode method)": [[184, "opto.trace.nodes.ExceptionNode.__new__", false]], "__new__() (executionerror method)": [[157, "opto.trace.errors.ExecutionError.__new__", false]], "__new__() (fifobuffer method)": [[4, "opto.optimizers.buffers.FIFOBuffer.__new__", false]], "__new__() (functionfeedback method)": [[48, "opto.optimizers.optoprime.FunctionFeedback.__new__", false]], "__new__() (gradientinfo method)": [[98, "opto.optimizers.textgrad.GradientInfo.__new__", false]], "__new__() (graph method)": [[229, "opto.trace.nodes.Graph.__new__", false]], "__new__() (graphpropagator method)": [[382, "opto.trace.propagators.graph_propagator.GraphPropagator.__new__", false]], "__new__() (map method)": [[123, "opto.trace.containers.Map.__new__", false]], "__new__() (messagenode method)": [[235, "opto.trace.nodes.MessageNode.__new__", false]], "__new__() (module method)": [[164, "opto.trace.modules.Module.__new__", false]], "__new__() (node method)": [[279, "opto.trace.nodes.Node.__new__", false]], "__new__() (nodecontainer method)": [[137, "opto.trace.containers.NodeContainer.__new__", false]], "__new__() (nodevizstyleguide method)": [[321, "opto.trace.nodes.NodeVizStyleGuide.__new__", false]], "__new__() (nodevizstyleguidecolorful method)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful.__new__", false]], "__new__() (opro method)": [[7, "opto.optimizers.opro.OPRO.__new__", false]], "__new__() (optimizer method)": [[38, "opto.optimizers.optimizer.Optimizer.__new__", false]], "__new__() (optoprime method)": [[55, "opto.optimizers.optoprime.OptoPrime.__new__", false]], "__new__() (parametercontainer method)": [[138, "opto.trace.containers.ParameterContainer.__new__", false]], "__new__() (parameternode method)": [[334, "opto.trace.nodes.ParameterNode.__new__", false]], "__new__() (probleminstance method)": [[81, "opto.optimizers.optoprime.ProblemInstance.__new__", false]], "__new__() (propagator method)": [[397, "opto.trace.propagators.propagators.Propagator.__new__", false]], "__new__() (seq method)": [[141, "opto.trace.containers.Seq.__new__", false]], "__new__() (seqiterable method)": [[161, "opto.trace.iterators.SeqIterable.__new__", false]], "__new__() (stop_tracing method)": [[405, "opto.trace.stop_tracing.__new__", false]], "__new__() (sumpropagator method)": [[401, "opto.trace.propagators.propagators.SumPropagator.__new__", false]], "__new__() (textgrad method)": [[101, "opto.optimizers.textgrad.TextGrad.__new__", false]], "__new__() (tracegraph method)": [[387, "opto.trace.propagators.graph_propagator.TraceGraph.__new__", false]], "__new__() (tracemissinginputserror method)": [[158, "opto.trace.errors.TraceMissingInputsError.__new__", false]], "_backwarded (node attribute)": [[279, "opto.trace.nodes.Node._backwarded", false]], "_constraint (node attribute)": [[279, "opto.trace.nodes.Node._constraint", false]], "_dependencies (node attribute)": [[279, "opto.trace.nodes.Node._dependencies", false]], "_description (node attribute)": [[279, "opto.trace.nodes.Node._description", false]], "_feedback (node attribute)": [[279, "opto.trace.nodes.Node._feedback", false]], "_info (node attribute)": [[279, "opto.trace.nodes.Node._info", false]], "_nodes (graph attribute)": [[229, "opto.trace.nodes.Graph._nodes", false]], "abstractfeedback (class in opto.trace.propagators.propagators)": [[394, "opto.trace.propagators.propagators.AbstractFeedback", false]], "abstractmodel (class in opto.utils.llm)": [[417, "opto.utils.llm.AbstractModel", false]], "abstractnode (class in opto.trace.nodes)": [[172, "opto.trace.nodes.AbstractNode", false]], "abstractoptimizer (class in opto.optimizers.optimizer)": [[34, "opto.optimizers.optimizer.AbstractOptimizer", false]], "abstractpropagator (class in opto.trace.propagators.propagators)": [[395, "opto.trace.propagators.propagators.AbstractPropagator", false]], "add() (fifobuffer method)": [[5, "opto.optimizers.buffers.FIFOBuffer.add", false]], "aggregate() (graphpropagator method)": [[383, "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", false]], "append() (exceptionnode method)": [[185, "opto.trace.nodes.ExceptionNode.append", false]], "append() (messagenode method)": [[236, "opto.trace.nodes.MessageNode.append", false]], "append() (node method)": [[280, "opto.trace.nodes.Node.append", false]], "append() (parameternode method)": [[335, "opto.trace.nodes.ParameterNode.append", false]], "append() (seq method)": [[142, "opto.trace.containers.Seq.append", false]], "apply_op() (in module opto.trace.broadcast)": [[119, "opto.trace.broadcast.apply_op", false]], "auto_construct_oai_config_list_from_env() (in module opto.utils.llm)": [[422, "opto.utils.llm.auto_construct_oai_config_list_from_env", false]], "autogenllm (class in opto.utils.llm)": [[419, "opto.utils.llm.AutoGenLLM", false]], "backward() (exceptionnode method)": [[186, "opto.trace.nodes.ExceptionNode.backward", false]], "backward() (messagenode method)": [[237, "opto.trace.nodes.MessageNode.backward", false]], "backward() (node method)": [[281, "opto.trace.nodes.Node.backward", false]], "backward() (opro method)": [[8, "opto.optimizers.opro.OPRO.backward", false]], "backward() (optimizer method)": [[39, "opto.optimizers.optimizer.Optimizer.backward", false]], "backward() (optoprime method)": [[56, "opto.optimizers.optoprime.OptoPrime.backward", false]], "backward() (parameternode method)": [[336, "opto.trace.nodes.ParameterNode.backward", false]], "backward() (textgrad method)": [[102, "opto.optimizers.textgrad.TextGrad.backward", false]], "call() (exceptionnode method)": [[187, "opto.trace.nodes.ExceptionNode.call", false]], "call() (messagenode method)": [[238, "opto.trace.nodes.MessageNode.call", false]], "call() (node method)": [[282, "opto.trace.nodes.Node.call", false]], "call() (parameternode method)": [[337, "opto.trace.nodes.ParameterNode.call", false]], "call_llm() (opro method)": [[9, "opto.optimizers.opro.OPRO.call_llm", false]], "call_llm() (optoprime method)": [[57, "opto.optimizers.optoprime.OptoPrime.call_llm", false]], "call_llm() (textgrad method)": [[103, "opto.optimizers.textgrad.TextGrad.call_llm", false]], "capitalize() (exceptionnode method)": [[188, "opto.trace.nodes.ExceptionNode.capitalize", false]], "capitalize() (messagenode method)": [[239, "opto.trace.nodes.MessageNode.capitalize", false]], "capitalize() (node method)": [[283, "opto.trace.nodes.Node.capitalize", false]], "capitalize() (parameternode method)": [[338, "opto.trace.nodes.ParameterNode.capitalize", false]], "children (abstractnode property)": [[173, "opto.trace.nodes.AbstractNode.children", false]], "children (exceptionnode property)": [[189, "opto.trace.nodes.ExceptionNode.children", false]], "children (messagenode property)": [[240, "opto.trace.nodes.MessageNode.children", false]], "children (node property)": [[284, "opto.trace.nodes.Node.children", false]], "children (parameternode property)": [[339, "opto.trace.nodes.ParameterNode.children", false]], "clear() (graph method)": [[231, "opto.trace.nodes.Graph.clear", false]], "clear() (map method)": [[124, "opto.trace.containers.Map.clear", false]], "clear() (seq method)": [[143, "opto.trace.containers.Seq.clear", false]], "clone() (exceptionnode method)": [[190, "opto.trace.nodes.ExceptionNode.clone", false]], "clone() (messagenode method)": [[241, "opto.trace.nodes.MessageNode.clone", false]], "clone() (node method)": [[285, "opto.trace.nodes.Node.clone", false]], "clone() (parameternode method)": [[340, "opto.trace.nodes.ParameterNode.clone", false]], "code (probleminstance attribute)": [[82, "opto.optimizers.optoprime.ProblemInstance.code", false]], "constraints (probleminstance attribute)": [[83, "opto.optimizers.optoprime.ProblemInstance.constraints", false]], "construct_prompt() (opro method)": [[10, "opto.optimizers.opro.OPRO.construct_prompt", false]], "construct_prompt() (optoprime method)": [[58, "opto.optimizers.optoprime.OptoPrime.construct_prompt", false]], "construct_reduce_prompt() (in module opto.optimizers.textgrad)": [[111, "opto.optimizers.textgrad.construct_reduce_prompt", false]], "construct_tgd_prompt() (in module opto.optimizers.textgrad)": [[112, "opto.optimizers.textgrad.construct_tgd_prompt", false]], "construct_update_dict() (opro method)": [[11, "opto.optimizers.opro.OPRO.construct_update_dict", false]], "construct_update_dict() (optoprime method)": [[59, "opto.optimizers.optoprime.OptoPrime.construct_update_dict", false]], "contain() (in module opto.trace.utils)": [[407, "opto.trace.utils.contain", false]], "copy() (map method)": [[125, "opto.trace.containers.Map.copy", false]], "copy() (seq method)": [[144, "opto.trace.containers.Seq.copy", false]], "count() (seq method)": [[145, "opto.trace.containers.Seq.count", false]], "create() (autogenllm method)": [[420, "opto.utils.llm.AutoGenLLM.create", false]], "create_feedback() (exceptionnode method)": [[191, "opto.trace.nodes.ExceptionNode.create_feedback", false]], "data (abstractnode property)": [[174, "opto.trace.nodes.AbstractNode.data", false]], "data (exceptionnode property)": [[192, "opto.trace.nodes.ExceptionNode.data", false]], "data (messagenode property)": [[242, "opto.trace.nodes.MessageNode.data", false]], "data (node property)": [[286, "opto.trace.nodes.Node.data", false]], "data (parameternode property)": [[341, "opto.trace.nodes.ParameterNode.data", false]], "default_objective (opro attribute)": [[12, "opto.optimizers.opro.OPRO.default_objective", false]], "default_objective (optoprime attribute)": [[60, "opto.optimizers.optoprime.OptoPrime.default_objective", false]], "default_prompt_symbols (opro attribute)": [[13, "opto.optimizers.opro.OPRO.default_prompt_symbols", false]], "default_prompt_symbols (optoprime attribute)": [[61, "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", false]], "default_propagator() (opro method)": [[14, "opto.optimizers.opro.OPRO.default_propagator", false]], "default_propagator() (optimizer method)": [[40, "opto.optimizers.optimizer.Optimizer.default_propagator", false]], "default_propagator() (optoprime method)": [[62, "opto.optimizers.optoprime.OptoPrime.default_propagator", false]], "default_propagator() (textgrad method)": [[104, "opto.optimizers.textgrad.TextGrad.default_propagator", false]], "description (exceptionnode property)": [[193, "opto.trace.nodes.ExceptionNode.description", false]], "description (messagenode property)": [[243, "opto.trace.nodes.MessageNode.description", false]], "description (node property)": [[287, "opto.trace.nodes.Node.description", false]], "description (parameternode property)": [[342, "opto.trace.nodes.ParameterNode.description", false]], "detach() (exceptionnode method)": [[194, "opto.trace.nodes.ExceptionNode.detach", false]], "detach() (messagenode method)": [[244, "opto.trace.nodes.MessageNode.detach", false]], "detach() (node method)": [[288, "opto.trace.nodes.Node.detach", false]], "detach() (parameternode method)": [[343, "opto.trace.nodes.ParameterNode.detach", false]], "dictiterable (class in opto.trace.iterators)": [[160, "opto.trace.iterators.DictIterable", false]], "documentation (functionfeedback attribute)": [[49, "opto.optimizers.optoprime.FunctionFeedback.documentation", false]], "documentation (probleminstance attribute)": [[84, "opto.optimizers.optoprime.ProblemInstance.documentation", false]], "empty() (tracegraph method)": [[388, "opto.trace.propagators.graph_propagator.TraceGraph.empty", false]], "eq() (exceptionnode method)": [[195, "opto.trace.nodes.ExceptionNode.eq", false]], "eq() (messagenode method)": [[245, "opto.trace.nodes.MessageNode.eq", false]], "eq() (node method)": [[289, "opto.trace.nodes.Node.eq", false]], "eq() (parameternode method)": [[344, "opto.trace.nodes.ParameterNode.eq", false]], "escape_json_nested_quotes() (in module opto.trace.utils)": [[408, "opto.trace.utils.escape_json_nested_quotes", false]], "example_problem_template (opro attribute)": [[15, "opto.optimizers.opro.OPRO.example_problem_template", false]], "example_problem_template (optoprime attribute)": [[63, "opto.optimizers.optoprime.OptoPrime.example_problem_template", false]], "example_prompt (opro attribute)": [[16, "opto.optimizers.opro.OPRO.example_prompt", false]], "example_prompt (optoprime attribute)": [[64, "opto.optimizers.optoprime.OptoPrime.example_prompt", false]], "exceptionnode (class in opto.trace.nodes)": [[184, "opto.trace.nodes.ExceptionNode", false]], "executionerror": [[157, "opto.trace.errors.ExecutionError", false]], "expand() (tracegraph class method)": [[389, "opto.trace.propagators.graph_propagator.TraceGraph.expand", false]], "expandable_dependencies (exceptionnode property)": [[196, "opto.trace.nodes.ExceptionNode.expandable_dependencies", false]], "expandable_dependencies (messagenode property)": [[246, "opto.trace.nodes.MessageNode.expandable_dependencies", false]], "expandable_dependencies (node property)": [[290, "opto.trace.nodes.Node.expandable_dependencies", false]], "expandable_dependencies (parameternode property)": [[345, "opto.trace.nodes.ParameterNode.expandable_dependencies", false]], "extend() (seq method)": [[146, "opto.trace.containers.Seq.extend", false]], "extract_llm_suggestion() (opro method)": [[17, "opto.optimizers.opro.OPRO.extract_llm_suggestion", false]], "extract_llm_suggestion() (optoprime method)": [[65, "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", false]], "feedback (exceptionnode property)": [[197, "opto.trace.nodes.ExceptionNode.feedback", false]], "feedback (messagenode property)": [[247, "opto.trace.nodes.MessageNode.feedback", false]], "feedback (node property)": [[291, "opto.trace.nodes.Node.feedback", false]], "feedback (parameternode property)": [[346, "opto.trace.nodes.ParameterNode.feedback", false]], "feedback (probleminstance attribute)": [[85, "opto.optimizers.optoprime.ProblemInstance.feedback", false]], "fifobuffer (class in opto.optimizers.buffers)": [[4, "opto.optimizers.buffers.FIFOBuffer", false]], "final_prompt (opro attribute)": [[18, "opto.optimizers.opro.OPRO.final_prompt", false]], "final_prompt (optoprime attribute)": [[66, "opto.optimizers.optoprime.OptoPrime.final_prompt", false]], "for_all_methods() (in module opto.trace.utils)": [[409, "opto.trace.utils.for_all_methods", false]], "format() (exceptionnode method)": [[198, "opto.trace.nodes.ExceptionNode.format", false]], "format() (messagenode method)": [[248, "opto.trace.nodes.MessageNode.format", false]], "format() (node method)": [[292, "opto.trace.nodes.Node.format", false]], "format() (parameternode method)": [[347, "opto.trace.nodes.ParameterNode.format", false]], "forward() (module method)": [[165, "opto.trace.modules.Module.forward", false]], "fromkeys() (map class method)": [[126, "opto.trace.containers.Map.fromkeys", false]], "functionfeedback (class in opto.optimizers.optoprime)": [[48, "opto.optimizers.optoprime.FunctionFeedback", false]], "get() (graph method)": [[232, "opto.trace.nodes.Graph.get", false]], "get() (map method)": [[127, "opto.trace.containers.Map.get", false]], "get_attrs() (nodevizstyleguide method)": [[322, "opto.trace.nodes.NodeVizStyleGuide.get_attrs", false]], "get_attrs() (nodevizstyleguidecolorful method)": [[328, "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", false]], "get_border_color() (nodevizstyleguidecolorful method)": [[329, "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", false]], "get_color() (nodevizstyleguide method)": [[323, "opto.trace.nodes.NodeVizStyleGuide.get_color", false]], "get_color() (nodevizstyleguidecolorful method)": [[330, "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", false]], "get_fun_name() (in module opto.optimizers.optoprime)": [[92, "opto.optimizers.optoprime.get_fun_name", false]], "get_label() (nodevizstyleguide method)": [[324, "opto.trace.nodes.NodeVizStyleGuide.get_label", false]], "get_label() (nodevizstyleguidecolorful method)": [[331, "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", false]], "get_node_shape() (nodevizstyleguide method)": [[325, "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", false]], "get_node_shape() (nodevizstyleguidecolorful method)": [[332, "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", false]], "get_op_name() (in module opto.trace.nodes)": [[376, "opto.trace.nodes.get_op_name", false]], "get_short_value() (in module opto.optimizers.textgrad)": [[113, "opto.optimizers.textgrad.get_short_value", false]], "get_style() (nodevizstyleguide method)": [[326, "opto.trace.nodes.NodeVizStyleGuide.get_style", false]], "get_style() (nodevizstyleguidecolorful method)": [[333, "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", false]], "getattr() (exceptionnode method)": [[199, "opto.trace.nodes.ExceptionNode.getattr", false]], "getattr() (messagenode method)": [[249, "opto.trace.nodes.MessageNode.getattr", false]], "getattr() (node method)": [[293, "opto.trace.nodes.Node.getattr", false]], "getattr() (parameternode method)": [[348, "opto.trace.nodes.ParameterNode.getattr", false]], "gradient (gradientinfo attribute)": [[99, "opto.optimizers.textgrad.GradientInfo.gradient", false]], "gradient_context (gradientinfo attribute)": [[100, "opto.optimizers.textgrad.GradientInfo.gradient_context", false]], "gradient_multipart_template (in module opto.optimizers.textgrad)": [[96, "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", false]], "gradient_of_results_instruction (in module opto.optimizers.textgrad)": [[97, "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", false]], "gradientinfo (class in opto.optimizers.textgrad)": [[98, "opto.optimizers.textgrad.GradientInfo", false]], "graph (class in opto.trace.nodes)": [[229, "opto.trace.nodes.Graph", false]], "graph (functionfeedback attribute)": [[50, "opto.optimizers.optoprime.FunctionFeedback.graph", false]], "graph (tracegraph attribute)": [[390, "opto.trace.propagators.graph_propagator.TraceGraph.graph", false]], "graphpropagator (class in opto.trace.propagators.graph_propagator)": [[382, "opto.trace.propagators.graph_propagator.GraphPropagator", false]], "gt() (abstractnode method)": [[175, "opto.trace.nodes.AbstractNode.gt", false]], "gt() (exceptionnode method)": [[200, "opto.trace.nodes.ExceptionNode.gt", false]], "gt() (messagenode method)": [[250, "opto.trace.nodes.MessageNode.gt", false]], "gt() (node method)": [[294, "opto.trace.nodes.Node.gt", false]], "gt() (parameternode method)": [[349, "opto.trace.nodes.ParameterNode.gt", false]], "hidden_dependencies (exceptionnode property)": [[201, "opto.trace.nodes.ExceptionNode.hidden_dependencies", false]], "hidden_dependencies (messagenode property)": [[251, "opto.trace.nodes.MessageNode.hidden_dependencies", false]], "id (abstractnode property)": [[176, "opto.trace.nodes.AbstractNode.id", false]], "id (exceptionnode property)": [[202, "opto.trace.nodes.ExceptionNode.id", false]], "id (messagenode property)": [[252, "opto.trace.nodes.MessageNode.id", false]], "id (node property)": [[295, "opto.trace.nodes.Node.id", false]], "id (parameternode property)": [[350, "opto.trace.nodes.ParameterNode.id", false]], "identity() (in module opto.trace.operators)": [[379, "opto.trace.operators.identity", false]], "index() (seq method)": [[147, "opto.trace.containers.Seq.index", false]], "info (exceptionnode property)": [[203, "opto.trace.nodes.ExceptionNode.info", false]], "info (messagenode property)": [[253, "opto.trace.nodes.MessageNode.info", false]], "info (node property)": [[296, "opto.trace.nodes.Node.info", false]], "info (parameternode property)": [[351, "opto.trace.nodes.ParameterNode.info", false]], "init_feedback() (graphpropagator method)": [[384, "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", false]], "init_feedback() (propagator method)": [[398, "opto.trace.propagators.propagators.Propagator.init_feedback", false]], "init_feedback() (sumpropagator method)": [[402, "opto.trace.propagators.propagators.SumPropagator.init_feedback", false]], "inputs (exceptionnode property)": [[204, "opto.trace.nodes.ExceptionNode.inputs", false]], "inputs (messagenode property)": [[254, "opto.trace.nodes.MessageNode.inputs", false]], "inputs (probleminstance attribute)": [[86, "opto.optimizers.optoprime.ProblemInstance.inputs", false]], "insert() (seq method)": [[148, "opto.trace.containers.Seq.insert", false]], "instruction (probleminstance attribute)": [[87, "opto.optimizers.optoprime.ProblemInstance.instruction", false]], "is_leaf (abstractnode property)": [[177, "opto.trace.nodes.AbstractNode.is_leaf", false]], "is_leaf (exceptionnode property)": [[205, "opto.trace.nodes.ExceptionNode.is_leaf", false]], "is_leaf (messagenode property)": [[255, "opto.trace.nodes.MessageNode.is_leaf", false]], "is_leaf (node property)": [[297, "opto.trace.nodes.Node.is_leaf", false]], "is_leaf (parameternode property)": [[352, "opto.trace.nodes.ParameterNode.is_leaf", false]], "is_root (abstractnode property)": [[178, "opto.trace.nodes.AbstractNode.is_root", false]], "is_root (exceptionnode property)": [[206, "opto.trace.nodes.ExceptionNode.is_root", false]], "is_root (messagenode property)": [[256, "opto.trace.nodes.MessageNode.is_root", false]], "is_root (node property)": [[298, "opto.trace.nodes.Node.is_root", false]], "is_root (parameternode property)": [[353, "opto.trace.nodes.ParameterNode.is_root", false]], "items() (exceptionnode method)": [[207, "opto.trace.nodes.ExceptionNode.items", false]], "items() (map method)": [[128, "opto.trace.containers.Map.items", false]], "items() (messagenode method)": [[257, "opto.trace.nodes.MessageNode.items", false]], "items() (node method)": [[299, "opto.trace.nodes.Node.items", false]], "items() (parameternode method)": [[354, "opto.trace.nodes.ParameterNode.items", false]], "iterate() (in module opto.trace.iterators)": [[162, "opto.trace.iterators.iterate", false]], "join() (exceptionnode method)": [[208, "opto.trace.nodes.ExceptionNode.join", false]], "join() (messagenode method)": [[258, "opto.trace.nodes.MessageNode.join", false]], "join() (node method)": [[300, "opto.trace.nodes.Node.join", false]], "join() (parameternode method)": [[355, "opto.trace.nodes.ParameterNode.join", false]], "keys() (exceptionnode method)": [[209, "opto.trace.nodes.ExceptionNode.keys", false]], "keys() (map method)": [[129, "opto.trace.containers.Map.keys", false]], "keys() (messagenode method)": [[259, "opto.trace.nodes.MessageNode.keys", false]], "keys() (node method)": [[301, "opto.trace.nodes.Node.keys", false]], "keys() (parameternode method)": [[356, "opto.trace.nodes.ParameterNode.keys", false]], "len() (exceptionnode method)": [[210, "opto.trace.nodes.ExceptionNode.len", false]], "len() (messagenode method)": [[260, "opto.trace.nodes.MessageNode.len", false]], "len() (node method)": [[302, "opto.trace.nodes.Node.len", false]], "len() (parameternode method)": [[357, "opto.trace.nodes.ParameterNode.len", false]], "level (abstractnode property)": [[179, "opto.trace.nodes.AbstractNode.level", false]], "level (exceptionnode property)": [[211, "opto.trace.nodes.ExceptionNode.level", false]], "level (messagenode property)": [[261, "opto.trace.nodes.MessageNode.level", false]], "level (node property)": [[303, "opto.trace.nodes.Node.level", false]], "level (parameternode property)": [[358, "opto.trace.nodes.ParameterNode.level", false]], "load() (module method)": [[166, "opto.trace.modules.Module.load", false]], "lower() (exceptionnode method)": [[212, "opto.trace.nodes.ExceptionNode.lower", false]], "lower() (messagenode method)": [[262, "opto.trace.nodes.MessageNode.lower", false]], "lower() (node method)": [[304, "opto.trace.nodes.Node.lower", false]], "lower() (parameternode method)": [[359, "opto.trace.nodes.ParameterNode.lower", false]], "lt() (abstractnode method)": [[180, "opto.trace.nodes.AbstractNode.lt", false]], "lt() (exceptionnode method)": [[213, "opto.trace.nodes.ExceptionNode.lt", false]], "lt() (messagenode method)": [[263, "opto.trace.nodes.MessageNode.lt", false]], "lt() (node method)": [[305, "opto.trace.nodes.Node.lt", false]], "lt() (parameternode method)": [[360, "opto.trace.nodes.ParameterNode.lt", false]], "map (class in opto.trace.containers)": [[123, "opto.trace.containers.Map", false]], "messagenode (class in opto.trace.nodes)": [[235, "opto.trace.nodes.MessageNode", false]], "model (abstractmodel property)": [[418, "opto.utils.llm.AbstractModel.model", false]], "model (autogenllm property)": [[421, "opto.utils.llm.AutoGenLLM.model", false]], "model() (in module opto.trace.modules)": [[170, "opto.trace.modules.model", false]], "module": [[1, "module-opto", false], [2, "module-opto.optimizers", false], [3, "module-opto.optimizers.buffers", false], [6, "module-opto.optimizers.opro", false], [33, "module-opto.optimizers.optimizer", false], [47, "module-opto.optimizers.optoprime", false], [95, "module-opto.optimizers.textgrad", false], [115, "module-opto.optimizers.utils", false], [117, "module-opto.trace", false], [118, "module-opto.trace.broadcast", false], [121, "module-opto.trace.bundle", false], [122, "module-opto.trace.containers", false], [156, "module-opto.trace.errors", false], [159, "module-opto.trace.iterators", false], [163, "module-opto.trace.modules", false], [171, "module-opto.trace.nodes", false], [378, "module-opto.trace.operators", false], [380, "module-opto.trace.propagators", false], [381, "module-opto.trace.propagators.graph_propagator", false], [393, "module-opto.trace.propagators.propagators", false], [406, "module-opto.trace.utils", false], [415, "module-opto.utils", false], [416, "module-opto.utils.llm", false], [423, "module-opto.version", false]], "module (class in opto.trace.modules)": [[164, "opto.trace.modules.Module", false]], "name (abstractnode property)": [[181, "opto.trace.nodes.AbstractNode.name", false]], "name (exceptionnode property)": [[214, "opto.trace.nodes.ExceptionNode.name", false]], "name (messagenode property)": [[264, "opto.trace.nodes.MessageNode.name", false]], "name (node property)": [[306, "opto.trace.nodes.Node.name", false]], "name (parameternode property)": [[361, "opto.trace.nodes.ParameterNode.name", false]], "neq() (exceptionnode method)": [[215, "opto.trace.nodes.ExceptionNode.neq", false]], "neq() (messagenode method)": [[265, "opto.trace.nodes.MessageNode.neq", false]], "neq() (node method)": [[307, "opto.trace.nodes.Node.neq", false]], "neq() (parameternode method)": [[362, "opto.trace.nodes.ParameterNode.neq", false]], "node (class in opto.trace.nodes)": [[279, "opto.trace.nodes.Node", false]], "node() (in module opto.trace.nodes)": [[377, "opto.trace.nodes.node", false]], "node_to_function_feedback() (in module opto.optimizers.optoprime)": [[93, "opto.optimizers.optoprime.node_to_function_feedback", false]], "nodecontainer (class in opto.trace.containers)": [[137, "opto.trace.containers.NodeContainer", false]], "nodevizstyleguide (class in opto.trace.nodes)": [[321, "opto.trace.nodes.NodeVizStyleGuide", false]], "nodevizstyleguidecolorful (class in opto.trace.nodes)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful", false]], "opro (class in opto.optimizers.opro)": [[7, "opto.optimizers.opro.OPRO", false]], "optimizer (class in opto.optimizers.optimizer)": [[38, "opto.optimizers.optimizer.Optimizer", false]], "opto": [[1, "module-opto", false]], "opto.optimizers": [[2, "module-opto.optimizers", false]], "opto.optimizers.buffers": [[3, "module-opto.optimizers.buffers", false]], "opto.optimizers.opro": [[6, "module-opto.optimizers.opro", false]], "opto.optimizers.optimizer": [[33, "module-opto.optimizers.optimizer", false]], "opto.optimizers.optoprime": [[47, "module-opto.optimizers.optoprime", false]], "opto.optimizers.textgrad": [[95, "module-opto.optimizers.textgrad", false]], "opto.optimizers.utils": [[115, "module-opto.optimizers.utils", false]], "opto.trace": [[117, "module-opto.trace", false]], "opto.trace.broadcast": [[118, "module-opto.trace.broadcast", false]], "opto.trace.bundle": [[121, "module-opto.trace.bundle", false]], "opto.trace.containers": [[122, "module-opto.trace.containers", false]], "opto.trace.errors": [[156, "module-opto.trace.errors", false]], "opto.trace.iterators": [[159, "module-opto.trace.iterators", false]], "opto.trace.modules": [[163, "module-opto.trace.modules", false]], "opto.trace.nodes": [[171, "module-opto.trace.nodes", false]], "opto.trace.operators": [[378, "module-opto.trace.operators", false]], "opto.trace.propagators": [[380, "module-opto.trace.propagators", false]], "opto.trace.propagators.graph_propagator": [[381, "module-opto.trace.propagators.graph_propagator", false]], "opto.trace.propagators.propagators": [[393, "module-opto.trace.propagators.propagators", false]], "opto.trace.utils": [[406, "module-opto.trace.utils", false]], "opto.utils": [[415, "module-opto.utils", false]], "opto.utils.llm": [[416, "module-opto.utils.llm", false]], "opto.version": [[423, "module-opto.version", false]], "optoprime (class in opto.optimizers.optoprime)": [[55, "opto.optimizers.optoprime.OptoPrime", false]], "others (functionfeedback attribute)": [[51, "opto.optimizers.optoprime.FunctionFeedback.others", false]], "others (probleminstance attribute)": [[88, "opto.optimizers.optoprime.ProblemInstance.others", false]], "output (functionfeedback attribute)": [[52, "opto.optimizers.optoprime.FunctionFeedback.output", false]], "output_format_prompt (opro attribute)": [[19, "opto.optimizers.opro.OPRO.output_format_prompt", false]], "output_format_prompt (optoprime attribute)": [[67, "opto.optimizers.optoprime.OptoPrime.output_format_prompt", false]], "outputs (probleminstance attribute)": [[89, "opto.optimizers.optoprime.ProblemInstance.outputs", false]], "parameter_dependencies (exceptionnode property)": [[216, "opto.trace.nodes.ExceptionNode.parameter_dependencies", false]], "parameter_dependencies (messagenode property)": [[266, "opto.trace.nodes.MessageNode.parameter_dependencies", false]], "parameter_dependencies (node property)": [[308, "opto.trace.nodes.Node.parameter_dependencies", false]], "parameter_dependencies (parameternode property)": [[363, "opto.trace.nodes.ParameterNode.parameter_dependencies", false]], "parametercontainer (class in opto.trace.containers)": [[138, "opto.trace.containers.ParameterContainer", false]], "parameternode (class in opto.trace.nodes)": [[334, "opto.trace.nodes.ParameterNode", false]], "parameters() (map method)": [[130, "opto.trace.containers.Map.parameters", false]], "parameters() (module method)": [[167, "opto.trace.modules.Module.parameters", false]], "parameters() (parametercontainer method)": [[139, "opto.trace.containers.ParameterContainer.parameters", false]], "parameters() (seq method)": [[149, "opto.trace.containers.Seq.parameters", false]], "parameters_dict() (map method)": [[131, "opto.trace.containers.Map.parameters_dict", false]], "parameters_dict() (module method)": [[168, "opto.trace.modules.Module.parameters_dict", false]], "parameters_dict() (parametercontainer method)": [[140, "opto.trace.containers.ParameterContainer.parameters_dict", false]], "parameters_dict() (seq method)": [[150, "opto.trace.containers.Seq.parameters_dict", false]], "parents (abstractnode property)": [[182, "opto.trace.nodes.AbstractNode.parents", false]], "parents (exceptionnode property)": [[217, "opto.trace.nodes.ExceptionNode.parents", false]], "parents (messagenode property)": [[267, "opto.trace.nodes.MessageNode.parents", false]], "parents (node property)": [[309, "opto.trace.nodes.Node.parents", false]], "parents (parameternode property)": [[364, "opto.trace.nodes.ParameterNode.parents", false]], "parse_eqs_to_dict() (in module opto.trace.utils)": [[410, "opto.trace.utils.parse_eqs_to_dict", false]], "pop() (exceptionnode method)": [[218, "opto.trace.nodes.ExceptionNode.pop", false]], "pop() (map method)": [[132, "opto.trace.containers.Map.pop", false]], "pop() (messagenode method)": [[268, "opto.trace.nodes.MessageNode.pop", false]], "pop() (node method)": [[310, "opto.trace.nodes.Node.pop", false]], "pop() (parameternode method)": [[365, "opto.trace.nodes.ParameterNode.pop", false]], "pop() (seq method)": [[151, "opto.trace.containers.Seq.pop", false]], "popitem() (map method)": [[133, "opto.trace.containers.Map.popitem", false]], "print_color() (in module opto.optimizers.utils)": [[116, "opto.optimizers.utils.print_color", false]], "print_limit (nodevizstyleguide attribute)": [[321, "opto.trace.nodes.NodeVizStyleGuide.print_limit", false]], "print_limit (nodevizstyleguidecolorful attribute)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful.print_limit", false]], "problem_instance() (opro method)": [[20, "opto.optimizers.opro.OPRO.problem_instance", false]], "problem_instance() (optoprime method)": [[68, "opto.optimizers.optoprime.OptoPrime.problem_instance", false]], "problem_template (probleminstance attribute)": [[90, "opto.optimizers.optoprime.ProblemInstance.problem_template", false]], "probleminstance (class in opto.optimizers.optoprime)": [[81, "opto.optimizers.optoprime.ProblemInstance", false]], "propagate() (abstractpropagator method)": [[396, "opto.trace.propagators.propagators.AbstractPropagator.propagate", false]], "propagate() (graphpropagator method)": [[385, "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", false]], "propagate() (propagator method)": [[399, "opto.trace.propagators.propagators.Propagator.propagate", false]], "propagate() (sumpropagator method)": [[403, "opto.trace.propagators.propagators.SumPropagator.propagate", false]], "propagator (abstractoptimizer property)": [[35, "opto.optimizers.optimizer.AbstractOptimizer.propagator", false]], "propagator (class in opto.trace.propagators.propagators)": [[397, "opto.trace.propagators.propagators.Propagator", false]], "propagator (opro property)": [[21, "opto.optimizers.opro.OPRO.propagator", false]], "propagator (optimizer property)": [[41, "opto.optimizers.optimizer.Optimizer.propagator", false]], "propagator (optoprime property)": [[69, "opto.optimizers.optoprime.OptoPrime.propagator", false]], "propagator (textgrad property)": [[105, "opto.optimizers.textgrad.TextGrad.propagator", false]], "propose() (opro method)": [[22, "opto.optimizers.opro.OPRO.propose", false]], "propose() (optimizer method)": [[42, "opto.optimizers.optimizer.Optimizer.propose", false]], "propose() (optoprime method)": [[70, "opto.optimizers.optoprime.OptoPrime.propose", false]], "propose() (textgrad method)": [[106, "opto.optimizers.textgrad.TextGrad.propose", false]], "py_name (abstractnode property)": [[183, "opto.trace.nodes.AbstractNode.py_name", false]], "py_name (exceptionnode property)": [[219, "opto.trace.nodes.ExceptionNode.py_name", false]], "py_name (messagenode property)": [[269, "opto.trace.nodes.MessageNode.py_name", false]], "py_name (node property)": [[311, "opto.trace.nodes.Node.py_name", false]], "py_name (parameternode property)": [[366, "opto.trace.nodes.ParameterNode.py_name", false]], "recursive_conversion() (in module opto.trace.broadcast)": [[120, "opto.trace.broadcast.recursive_conversion", false]], "register() (graph method)": [[233, "opto.trace.nodes.Graph.register", false]], "register() (graphpropagator method)": [[386, "opto.trace.propagators.graph_propagator.GraphPropagator.register", false]], "register() (propagator method)": [[400, "opto.trace.propagators.propagators.Propagator.register", false]], "register() (sumpropagator method)": [[404, "opto.trace.propagators.propagators.SumPropagator.register", false]], "remove() (seq method)": [[152, "opto.trace.containers.Seq.remove", false]], "remove_non_ascii() (in module opto.trace.utils)": [[411, "opto.trace.utils.remove_non_ascii", false]], "render_opt_step() (in module opto.trace.utils)": [[412, "opto.trace.utils.render_opt_step", false]], "replace() (exceptionnode method)": [[220, "opto.trace.nodes.ExceptionNode.replace", false]], "replace() (messagenode method)": [[270, "opto.trace.nodes.MessageNode.replace", false]], "replace() (node method)": [[312, "opto.trace.nodes.Node.replace", false]], "replace() (parameternode method)": [[367, "opto.trace.nodes.ParameterNode.replace", false]], "replace_symbols() (opro method)": [[23, "opto.optimizers.opro.OPRO.replace_symbols", false]], "replace_symbols() (optoprime method)": [[71, "opto.optimizers.optoprime.OptoPrime.replace_symbols", false]], "repr_function_call() (in module opto.optimizers.optoprime)": [[94, "opto.optimizers.optoprime.repr_function_call", false]], "repr_node_constraint() (opro static method)": [[24, "opto.optimizers.opro.OPRO.repr_node_constraint", false]], "repr_node_constraint() (optoprime static method)": [[72, "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", false]], "repr_node_value() (opro static method)": [[25, "opto.optimizers.opro.OPRO.repr_node_value", false]], "repr_node_value() (optoprime static method)": [[73, "opto.optimizers.optoprime.OptoPrime.repr_node_value", false]], "representation_prompt (opro attribute)": [[26, "opto.optimizers.opro.OPRO.representation_prompt", false]], "representation_prompt (optoprime attribute)": [[74, "opto.optimizers.optoprime.OptoPrime.representation_prompt", false]], "reverse() (seq method)": [[153, "opto.trace.containers.Seq.reverse", false]], "rm_node_attrs() (in module opto.optimizers.textgrad)": [[114, "opto.optimizers.textgrad.rm_node_attrs", false]], "roots (functionfeedback attribute)": [[53, "opto.optimizers.optoprime.FunctionFeedback.roots", false]], "roots (graph property)": [[234, "opto.trace.nodes.Graph.roots", false]], "save() (module method)": [[169, "opto.trace.modules.Module.save", false]], "seq (class in opto.trace.containers)": [[141, "opto.trace.containers.Seq", false]], "seqiterable (class in opto.trace.iterators)": [[161, "opto.trace.iterators.SeqIterable", false]], "setdefault() (map method)": [[134, "opto.trace.containers.Map.setdefault", false]], "sort() (seq method)": [[154, "opto.trace.containers.Seq.sort", false]], "split() (exceptionnode method)": [[221, "opto.trace.nodes.ExceptionNode.split", false]], "split() (messagenode method)": [[271, "opto.trace.nodes.MessageNode.split", false]], "split() (node method)": [[313, "opto.trace.nodes.Node.split", false]], "split() (parameternode method)": [[368, "opto.trace.nodes.ParameterNode.split", false]], "step() (abstractoptimizer method)": [[36, "opto.optimizers.optimizer.AbstractOptimizer.step", false]], "step() (opro method)": [[27, "opto.optimizers.opro.OPRO.step", false]], "step() (optimizer method)": [[43, "opto.optimizers.optimizer.Optimizer.step", false]], "step() (optoprime method)": [[75, "opto.optimizers.optoprime.OptoPrime.step", false]], "step() (textgrad method)": [[107, "opto.optimizers.textgrad.TextGrad.step", false]], "stop_tracing (class in opto.trace)": [[405, "opto.trace.stop_tracing", false]], "strip() (exceptionnode method)": [[222, "opto.trace.nodes.ExceptionNode.strip", false]], "strip() (messagenode method)": [[272, "opto.trace.nodes.MessageNode.strip", false]], "strip() (node method)": [[314, "opto.trace.nodes.Node.strip", false]], "strip() (parameternode method)": [[369, "opto.trace.nodes.ParameterNode.strip", false]], "style (nodevizstyleguide attribute)": [[321, "opto.trace.nodes.NodeVizStyleGuide.style", false]], "style (nodevizstyleguidecolorful attribute)": [[327, "opto.trace.nodes.NodeVizStyleGuideColorful.style", false]], "sum_feedback() (in module opto.trace.utils)": [[413, "opto.trace.utils.sum_feedback", false]], "summarize() (opro method)": [[28, "opto.optimizers.opro.OPRO.summarize", false]], "summarize() (optoprime method)": [[76, "opto.optimizers.optoprime.OptoPrime.summarize", false]], "sumpropagator (class in opto.trace.propagators.propagators)": [[401, "opto.trace.propagators.propagators.SumPropagator", false]], "swapcase() (exceptionnode method)": [[223, "opto.trace.nodes.ExceptionNode.swapcase", false]], "swapcase() (messagenode method)": [[273, "opto.trace.nodes.MessageNode.swapcase", false]], "swapcase() (node method)": [[315, "opto.trace.nodes.Node.swapcase", false]], "swapcase() (parameternode method)": [[370, "opto.trace.nodes.ParameterNode.swapcase", false]], "test_json_quote_escaper() (in module opto.trace.utils)": [[414, "opto.trace.utils.test_json_quote_escaper", false]], "textgrad (class in opto.optimizers.textgrad)": [[101, "opto.optimizers.textgrad.TextGrad", false]], "title() (exceptionnode method)": [[224, "opto.trace.nodes.ExceptionNode.title", false]], "title() (messagenode method)": [[274, "opto.trace.nodes.MessageNode.title", false]], "title() (node method)": [[316, "opto.trace.nodes.Node.title", false]], "title() (parameternode method)": [[371, "opto.trace.nodes.ParameterNode.title", false]], "trace (graph attribute)": [[230, "opto.trace.nodes.Graph.TRACE", false]], "trace_graph (opro property)": [[29, "opto.optimizers.opro.OPRO.trace_graph", false]], "trace_graph (optimizer property)": [[44, "opto.optimizers.optimizer.Optimizer.trace_graph", false]], "trace_graph (optoprime property)": [[77, "opto.optimizers.optoprime.OptoPrime.trace_graph", false]], "trace_graph (textgrad property)": [[108, "opto.optimizers.textgrad.TextGrad.trace_graph", false]], "tracegraph (class in opto.trace.propagators.graph_propagator)": [[387, "opto.trace.propagators.graph_propagator.TraceGraph", false]], "tracemissinginputserror": [[158, "opto.trace.errors.TraceMissingInputsError", false]], "trainable (node attribute)": [[279, "opto.trace.nodes.Node.trainable", false]], "trainable_method() (in module opto.trace.containers)": [[155, "opto.trace.containers.trainable_method", false]], "type (exceptionnode property)": [[225, "opto.trace.nodes.ExceptionNode.type", false]], "type (messagenode property)": [[275, "opto.trace.nodes.MessageNode.type", false]], "type (node property)": [[317, "opto.trace.nodes.Node.type", false]], "type (parameternode property)": [[372, "opto.trace.nodes.ParameterNode.type", false]], "update() (map method)": [[135, "opto.trace.containers.Map.update", false]], "update() (opro method)": [[30, "opto.optimizers.opro.OPRO.update", false]], "update() (optimizer method)": [[45, "opto.optimizers.optimizer.Optimizer.update", false]], "update() (optoprime method)": [[78, "opto.optimizers.optoprime.OptoPrime.update", false]], "update() (textgrad method)": [[109, "opto.optimizers.textgrad.TextGrad.update", false]], "upper() (exceptionnode method)": [[226, "opto.trace.nodes.ExceptionNode.upper", false]], "upper() (messagenode method)": [[276, "opto.trace.nodes.MessageNode.upper", false]], "upper() (node method)": [[318, "opto.trace.nodes.Node.upper", false]], "upper() (parameternode method)": [[373, "opto.trace.nodes.ParameterNode.upper", false]], "user_feedback (functionfeedback attribute)": [[54, "opto.optimizers.optoprime.FunctionFeedback.user_feedback", false]], "user_feedback (tracegraph attribute)": [[391, "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", false]], "user_prompt_template (opro attribute)": [[31, "opto.optimizers.opro.OPRO.user_prompt_template", false]], "user_prompt_template (optoprime attribute)": [[79, "opto.optimizers.optoprime.OptoPrime.user_prompt_template", false]], "value (messagenode attribute)": [[235, "opto.trace.nodes.MessageNode.value", false]], "values() (exceptionnode method)": [[227, "opto.trace.nodes.ExceptionNode.values", false]], "values() (map method)": [[136, "opto.trace.containers.Map.values", false]], "values() (messagenode method)": [[277, "opto.trace.nodes.MessageNode.values", false]], "values() (node method)": [[319, "opto.trace.nodes.Node.values", false]], "values() (parameternode method)": [[374, "opto.trace.nodes.ParameterNode.values", false]], "variables (probleminstance attribute)": [[91, "opto.optimizers.optoprime.ProblemInstance.variables", false]], "visualize() (tracegraph method)": [[392, "opto.trace.propagators.graph_propagator.TraceGraph.visualize", false]], "zero_feedback() (abstractoptimizer method)": [[37, "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", false]], "zero_feedback() (exceptionnode method)": [[228, "opto.trace.nodes.ExceptionNode.zero_feedback", false]], "zero_feedback() (messagenode method)": [[278, "opto.trace.nodes.MessageNode.zero_feedback", false]], "zero_feedback() (node method)": [[320, "opto.trace.nodes.Node.zero_feedback", false]], "zero_feedback() (opro method)": [[32, "opto.optimizers.opro.OPRO.zero_feedback", false]], "zero_feedback() (optimizer method)": [[46, "opto.optimizers.optimizer.Optimizer.zero_feedback", false]], "zero_feedback() (optoprime method)": [[80, "opto.optimizers.optoprime.OptoPrime.zero_feedback", false]], "zero_feedback() (parameternode method)": [[375, "opto.trace.nodes.ParameterNode.zero_feedback", false]], "zero_feedback() (textgrad method)": [[110, "opto.optimizers.textgrad.TextGrad.zero_feedback", false]]}, "objects": {"": [[1, 0, 0, "-", "opto"]], "opto": [[2, 0, 0, "-", "optimizers"], [117, 0, 0, "-", "trace"], [415, 0, 0, "-", "utils"], [423, 0, 0, "-", "version"]], "opto.optimizers": [[3, 0, 0, "-", "buffers"], [6, 0, 0, "-", "opro"], [33, 0, 0, "-", "optimizer"], [47, 0, 0, "-", "optoprime"], [95, 0, 0, "-", "textgrad"], [115, 0, 0, "-", "utils"]], "opto.optimizers.buffers": [[4, 1, 1, "", "FIFOBuffer"]], "opto.optimizers.buffers.FIFOBuffer": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "__new__"], [5, 2, 1, "", "add"]], "opto.optimizers.opro": [[7, 1, 1, "", "OPRO"]], "opto.optimizers.opro.OPRO": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "__new__"], [8, 2, 1, "", "backward"], [9, 2, 1, "", "call_llm"], [10, 2, 1, "", "construct_prompt"], [11, 2, 1, "", "construct_update_dict"], [12, 3, 1, "", "default_objective"], [13, 3, 1, "", "default_prompt_symbols"], [14, 2, 1, "", "default_propagator"], [15, 3, 1, "", "example_problem_template"], [16, 3, 1, "", "example_prompt"], [17, 2, 1, "", "extract_llm_suggestion"], [18, 3, 1, "", "final_prompt"], [19, 3, 1, "", "output_format_prompt"], [20, 2, 1, "", "problem_instance"], [21, 4, 1, "", "propagator"], [22, 2, 1, "", "propose"], [23, 2, 1, "", "replace_symbols"], [24, 2, 1, "", "repr_node_constraint"], [25, 2, 1, "", "repr_node_value"], [26, 3, 1, "", "representation_prompt"], [27, 2, 1, "", "step"], [28, 2, 1, "", "summarize"], [29, 4, 1, "", "trace_graph"], [30, 2, 1, "", "update"], [31, 3, 1, "", "user_prompt_template"], [32, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer": [[34, 1, 1, "", "AbstractOptimizer"], [38, 1, 1, "", "Optimizer"]], "opto.optimizers.optimizer.AbstractOptimizer": [[34, 2, 1, "", "__init__"], [34, 2, 1, "", "__new__"], [35, 4, 1, "", "propagator"], [36, 2, 1, "", "step"], [37, 2, 1, "", "zero_feedback"]], "opto.optimizers.optimizer.Optimizer": [[38, 2, 1, "", "__init__"], [38, 2, 1, "", "__new__"], [39, 2, 1, "", "backward"], [40, 2, 1, "", "default_propagator"], [41, 4, 1, "", "propagator"], [42, 2, 1, "", "propose"], [43, 2, 1, "", "step"], [44, 4, 1, "", "trace_graph"], [45, 2, 1, "", "update"], [46, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime": [[48, 1, 1, "", "FunctionFeedback"], [55, 1, 1, "", "OptoPrime"], [81, 1, 1, "", "ProblemInstance"], [92, 5, 1, "", "get_fun_name"], [93, 5, 1, "", "node_to_function_feedback"], [94, 5, 1, "", "repr_function_call"]], "opto.optimizers.optoprime.FunctionFeedback": [[48, 2, 1, "", "__init__"], [48, 2, 1, "", "__new__"], [49, 3, 1, "", "documentation"], [50, 3, 1, "", "graph"], [51, 3, 1, "", "others"], [52, 3, 1, "", "output"], [53, 3, 1, "", "roots"], [54, 3, 1, "", "user_feedback"]], "opto.optimizers.optoprime.OptoPrime": [[55, 2, 1, "", "__init__"], [55, 2, 1, "", "__new__"], [56, 2, 1, "", "backward"], [57, 2, 1, "", "call_llm"], [58, 2, 1, "", "construct_prompt"], [59, 2, 1, "", "construct_update_dict"], [60, 3, 1, "", "default_objective"], [61, 3, 1, "", "default_prompt_symbols"], [62, 2, 1, "", "default_propagator"], [63, 3, 1, "", "example_problem_template"], [64, 3, 1, "", "example_prompt"], [65, 2, 1, "", "extract_llm_suggestion"], [66, 3, 1, "", "final_prompt"], [67, 3, 1, "", "output_format_prompt"], [68, 2, 1, "", "problem_instance"], [69, 4, 1, "", "propagator"], [70, 2, 1, "", "propose"], [71, 2, 1, "", "replace_symbols"], [72, 2, 1, "", "repr_node_constraint"], [73, 2, 1, "", "repr_node_value"], [74, 3, 1, "", "representation_prompt"], [75, 2, 1, "", "step"], [76, 2, 1, "", "summarize"], [77, 4, 1, "", "trace_graph"], [78, 2, 1, "", "update"], [79, 3, 1, "", "user_prompt_template"], [80, 2, 1, "", "zero_feedback"]], "opto.optimizers.optoprime.ProblemInstance": [[81, 2, 1, "", "__init__"], [81, 2, 1, "", "__new__"], [82, 3, 1, "", "code"], [83, 3, 1, "", "constraints"], [84, 3, 1, "", "documentation"], [85, 3, 1, "", "feedback"], [86, 3, 1, "", "inputs"], [87, 3, 1, "", "instruction"], [88, 3, 1, "", "others"], [89, 3, 1, "", "outputs"], [90, 3, 1, "", "problem_template"], [91, 3, 1, "", "variables"]], "opto.optimizers.textgrad": [[96, 6, 1, "", "GRADIENT_MULTIPART_TEMPLATE"], [97, 6, 1, "", "GRADIENT_OF_RESULTS_INSTRUCTION"], [98, 1, 1, "", "GradientInfo"], [101, 1, 1, "", "TextGrad"], [111, 5, 1, "", "construct_reduce_prompt"], [112, 5, 1, "", "construct_tgd_prompt"], [113, 5, 1, "", "get_short_value"], [114, 5, 1, "", "rm_node_attrs"]], "opto.optimizers.textgrad.GradientInfo": [[98, 2, 1, "", "__init__"], [98, 2, 1, "", "__new__"], [99, 3, 1, "", "gradient"], [100, 3, 1, "", "gradient_context"]], "opto.optimizers.textgrad.TextGrad": [[101, 2, 1, "", "__init__"], [101, 2, 1, "", "__new__"], [102, 2, 1, "", "backward"], [103, 2, 1, "", "call_llm"], [104, 2, 1, "", "default_propagator"], [105, 4, 1, "", "propagator"], [106, 2, 1, "", "propose"], [107, 2, 1, "", "step"], [108, 4, 1, "", "trace_graph"], [109, 2, 1, "", "update"], [110, 2, 1, "", "zero_feedback"]], "opto.optimizers.utils": [[116, 5, 1, "", "print_color"]], "opto.trace": [[118, 0, 0, "-", "broadcast"], [121, 0, 0, "-", "bundle"], [122, 0, 0, "-", "containers"], [156, 0, 0, "-", "errors"], [159, 0, 0, "-", "iterators"], [163, 0, 0, "-", "modules"], [171, 0, 0, "-", "nodes"], [378, 0, 0, "-", "operators"], [380, 0, 0, "-", "propagators"], [405, 1, 1, "", "stop_tracing"], [406, 0, 0, "-", "utils"]], "opto.trace.broadcast": [[119, 5, 1, "", "apply_op"], [120, 5, 1, "", "recursive_conversion"]], "opto.trace.containers": [[123, 1, 1, "", "Map"], [137, 1, 1, "", "NodeContainer"], [138, 1, 1, "", "ParameterContainer"], [141, 1, 1, "", "Seq"], [155, 5, 1, "", "trainable_method"]], "opto.trace.containers.Map": [[123, 2, 1, "", "__init__"], [123, 2, 1, "", "__new__"], [124, 2, 1, "", "clear"], [125, 2, 1, "", "copy"], [126, 2, 1, "", "fromkeys"], [127, 2, 1, "", "get"], [128, 2, 1, "", "items"], [129, 2, 1, "", "keys"], [130, 2, 1, "", "parameters"], [131, 2, 1, "", "parameters_dict"], [132, 2, 1, "", "pop"], [133, 2, 1, "", "popitem"], [134, 2, 1, "", "setdefault"], [135, 2, 1, "", "update"], [136, 2, 1, "", "values"]], "opto.trace.containers.NodeContainer": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "__new__"]], "opto.trace.containers.ParameterContainer": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "__new__"], [139, 2, 1, "", "parameters"], [140, 2, 1, "", "parameters_dict"]], "opto.trace.containers.Seq": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "__new__"], [142, 2, 1, "", "append"], [143, 2, 1, "", "clear"], [144, 2, 1, "", "copy"], [145, 2, 1, "", "count"], [146, 2, 1, "", "extend"], [147, 2, 1, "", "index"], [148, 2, 1, "", "insert"], [149, 2, 1, "", "parameters"], [150, 2, 1, "", "parameters_dict"], [151, 2, 1, "", "pop"], [152, 2, 1, "", "remove"], [153, 2, 1, "", "reverse"], [154, 2, 1, "", "sort"]], "opto.trace.errors": [[157, 7, 1, "", "ExecutionError"], [158, 7, 1, "", "TraceMissingInputsError"]], "opto.trace.errors.ExecutionError": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "__new__"]], "opto.trace.errors.TraceMissingInputsError": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "__new__"]], "opto.trace.iterators": [[160, 1, 1, "", "DictIterable"], [161, 1, 1, "", "SeqIterable"], [162, 5, 1, "", "iterate"]], "opto.trace.iterators.DictIterable": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "__new__"]], "opto.trace.iterators.SeqIterable": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "__new__"]], "opto.trace.modules": [[164, 1, 1, "", "Module"], [170, 5, 1, "", "model"]], "opto.trace.modules.Module": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "__new__"], [165, 2, 1, "", "forward"], [166, 2, 1, "", "load"], [167, 2, 1, "", "parameters"], [168, 2, 1, "", "parameters_dict"], [169, 2, 1, "", "save"]], "opto.trace.nodes": [[172, 1, 1, "", "AbstractNode"], [184, 1, 1, "", "ExceptionNode"], [229, 1, 1, "", "Graph"], [235, 1, 1, "", "MessageNode"], [279, 1, 1, "", "Node"], [321, 1, 1, "", "NodeVizStyleGuide"], [327, 1, 1, "", "NodeVizStyleGuideColorful"], [334, 1, 1, "", "ParameterNode"], [376, 5, 1, "", "get_op_name"], [377, 5, 1, "", "node"]], "opto.trace.nodes.AbstractNode": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "__new__"], [173, 4, 1, "", "children"], [174, 4, 1, "", "data"], [175, 2, 1, "", "gt"], [176, 4, 1, "", "id"], [177, 4, 1, "", "is_leaf"], [178, 4, 1, "", "is_root"], [179, 4, 1, "", "level"], [180, 2, 1, "", "lt"], [181, 4, 1, "", "name"], [182, 4, 1, "", "parents"], [183, 4, 1, "", "py_name"]], "opto.trace.nodes.ExceptionNode": [[184, 2, 1, "", "__init__"], [184, 2, 1, "", "__new__"], [185, 2, 1, "", "append"], [186, 2, 1, "", "backward"], [187, 2, 1, "", "call"], [188, 2, 1, "", "capitalize"], [189, 4, 1, "", "children"], [190, 2, 1, "", "clone"], [191, 2, 1, "", "create_feedback"], [192, 4, 1, "", "data"], [193, 4, 1, "", "description"], [194, 2, 1, "", "detach"], [195, 2, 1, "", "eq"], [196, 4, 1, "", "expandable_dependencies"], [197, 4, 1, "", "feedback"], [198, 2, 1, "", "format"], [199, 2, 1, "", "getattr"], [200, 2, 1, "", "gt"], [201, 4, 1, "", "hidden_dependencies"], [202, 4, 1, "", "id"], [203, 4, 1, "", "info"], [204, 4, 1, "", "inputs"], [205, 4, 1, "", "is_leaf"], [206, 4, 1, "", "is_root"], [207, 2, 1, "", "items"], [208, 2, 1, "", "join"], [209, 2, 1, "", "keys"], [210, 2, 1, "", "len"], [211, 4, 1, "", "level"], [212, 2, 1, "", "lower"], [213, 2, 1, "", "lt"], [214, 4, 1, "", "name"], [215, 2, 1, "", "neq"], [216, 4, 1, "", "parameter_dependencies"], [217, 4, 1, "", "parents"], [218, 2, 1, "", "pop"], [219, 4, 1, "", "py_name"], [220, 2, 1, "", "replace"], [221, 2, 1, "", "split"], [222, 2, 1, "", "strip"], [223, 2, 1, "", "swapcase"], [224, 2, 1, "", "title"], [225, 4, 1, "", "type"], [226, 2, 1, "", "upper"], [227, 2, 1, "", "values"], [228, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Graph": [[230, 3, 1, "", "TRACE"], [229, 2, 1, "", "__init__"], [229, 2, 1, "", "__new__"], [229, 3, 1, "", "_nodes"], [231, 2, 1, "", "clear"], [232, 2, 1, "", "get"], [233, 2, 1, "", "register"], [234, 4, 1, "", "roots"]], "opto.trace.nodes.MessageNode": [[235, 2, 1, "", "__init__"], [235, 2, 1, "", "__new__"], [236, 2, 1, "", "append"], [237, 2, 1, "", "backward"], [238, 2, 1, "", "call"], [239, 2, 1, "", "capitalize"], [240, 4, 1, "", "children"], [241, 2, 1, "", "clone"], [242, 4, 1, "", "data"], [243, 4, 1, "", "description"], [244, 2, 1, "", "detach"], [245, 2, 1, "", "eq"], [246, 4, 1, "", "expandable_dependencies"], [247, 4, 1, "", "feedback"], [248, 2, 1, "", "format"], [249, 2, 1, "", "getattr"], [250, 2, 1, "", "gt"], [251, 4, 1, "", "hidden_dependencies"], [252, 4, 1, "", "id"], [253, 4, 1, "", "info"], [254, 4, 1, "", "inputs"], [255, 4, 1, "", "is_leaf"], [256, 4, 1, "", "is_root"], [257, 2, 1, "", "items"], [258, 2, 1, "", "join"], [259, 2, 1, "", "keys"], [260, 2, 1, "", "len"], [261, 4, 1, "", "level"], [262, 2, 1, "", "lower"], [263, 2, 1, "", "lt"], [264, 4, 1, "", "name"], [265, 2, 1, "", "neq"], [266, 4, 1, "", "parameter_dependencies"], [267, 4, 1, "", "parents"], [268, 2, 1, "", "pop"], [269, 4, 1, "", "py_name"], [270, 2, 1, "", "replace"], [271, 2, 1, "", "split"], [272, 2, 1, "", "strip"], [273, 2, 1, "", "swapcase"], [274, 2, 1, "", "title"], [275, 4, 1, "", "type"], [276, 2, 1, "", "upper"], [235, 3, 1, "", "value"], [277, 2, 1, "", "values"], [278, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.Node": [[279, 2, 1, "", "__init__"], [279, 2, 1, "", "__new__"], [279, 3, 1, "", "_backwarded"], [279, 3, 1, "", "_constraint"], [279, 3, 1, "", "_dependencies"], [279, 3, 1, "", "_description"], [279, 3, 1, "", "_feedback"], [279, 3, 1, "", "_info"], [280, 2, 1, "", "append"], [281, 2, 1, "", "backward"], [282, 2, 1, "", "call"], [283, 2, 1, "", "capitalize"], [284, 4, 1, "", "children"], [285, 2, 1, "", "clone"], [286, 4, 1, "", "data"], [287, 4, 1, "", "description"], [288, 2, 1, "", "detach"], [289, 2, 1, "", "eq"], [290, 4, 1, "", "expandable_dependencies"], [291, 4, 1, "", "feedback"], [292, 2, 1, "", "format"], [293, 2, 1, "", "getattr"], [294, 2, 1, "", "gt"], [295, 4, 1, "", "id"], [296, 4, 1, "", "info"], [297, 4, 1, "", "is_leaf"], [298, 4, 1, "", "is_root"], [299, 2, 1, "", "items"], [300, 2, 1, "", "join"], [301, 2, 1, "", "keys"], [302, 2, 1, "", "len"], [303, 4, 1, "", "level"], [304, 2, 1, "", "lower"], [305, 2, 1, "", "lt"], [306, 4, 1, "", "name"], [307, 2, 1, "", "neq"], [308, 4, 1, "", "parameter_dependencies"], [309, 4, 1, "", "parents"], [310, 2, 1, "", "pop"], [311, 4, 1, "", "py_name"], [312, 2, 1, "", "replace"], [313, 2, 1, "", "split"], [314, 2, 1, "", "strip"], [315, 2, 1, "", "swapcase"], [316, 2, 1, "", "title"], [279, 3, 1, "", "trainable"], [317, 4, 1, "", "type"], [318, 2, 1, "", "upper"], [319, 2, 1, "", "values"], [320, 2, 1, "", "zero_feedback"]], "opto.trace.nodes.NodeVizStyleGuide": [[321, 2, 1, "", "__init__"], [321, 2, 1, "", "__new__"], [322, 2, 1, "", "get_attrs"], [323, 2, 1, "", "get_color"], [324, 2, 1, "", "get_label"], [325, 2, 1, "", "get_node_shape"], [326, 2, 1, "", "get_style"], [321, 3, 1, "", "print_limit"], [321, 3, 1, "", "style"]], "opto.trace.nodes.NodeVizStyleGuideColorful": [[327, 2, 1, "", "__init__"], [327, 2, 1, "", "__new__"], [328, 2, 1, "", "get_attrs"], [329, 2, 1, "", "get_border_color"], [330, 2, 1, "", "get_color"], [331, 2, 1, "", "get_label"], [332, 2, 1, "", "get_node_shape"], [333, 2, 1, "", "get_style"], [327, 3, 1, "", "print_limit"], [327, 3, 1, "", "style"]], "opto.trace.nodes.ParameterNode": [[334, 2, 1, "", "__init__"], [334, 2, 1, "", "__new__"], [335, 2, 1, "", "append"], [336, 2, 1, "", "backward"], [337, 2, 1, "", "call"], [338, 2, 1, "", "capitalize"], [339, 4, 1, "", "children"], [340, 2, 1, "", "clone"], [341, 4, 1, "", "data"], [342, 4, 1, "", "description"], [343, 2, 1, "", "detach"], [344, 2, 1, "", "eq"], [345, 4, 1, "", "expandable_dependencies"], [346, 4, 1, "", "feedback"], [347, 2, 1, "", "format"], [348, 2, 1, "", "getattr"], [349, 2, 1, "", "gt"], [350, 4, 1, "", "id"], [351, 4, 1, "", "info"], [352, 4, 1, "", "is_leaf"], [353, 4, 1, "", "is_root"], [354, 2, 1, "", "items"], [355, 2, 1, "", "join"], [356, 2, 1, "", "keys"], [357, 2, 1, "", "len"], [358, 4, 1, "", "level"], [359, 2, 1, "", "lower"], [360, 2, 1, "", "lt"], [361, 4, 1, "", "name"], [362, 2, 1, "", "neq"], [363, 4, 1, "", "parameter_dependencies"], [364, 4, 1, "", "parents"], [365, 2, 1, "", "pop"], [366, 4, 1, "", "py_name"], [367, 2, 1, "", "replace"], [368, 2, 1, "", "split"], [369, 2, 1, "", "strip"], [370, 2, 1, "", "swapcase"], [371, 2, 1, "", "title"], [372, 4, 1, "", "type"], [373, 2, 1, "", "upper"], [374, 2, 1, "", "values"], [375, 2, 1, "", "zero_feedback"]], "opto.trace.operators": [[379, 5, 1, "", "identity"]], "opto.trace.propagators": [[381, 0, 0, "-", "graph_propagator"], [393, 0, 0, "-", "propagators"]], "opto.trace.propagators.graph_propagator": [[382, 1, 1, "", "GraphPropagator"], [387, 1, 1, "", "TraceGraph"]], "opto.trace.propagators.graph_propagator.GraphPropagator": [[382, 2, 1, "", "__init__"], [382, 2, 1, "", "__new__"], [383, 2, 1, "", "aggregate"], [384, 2, 1, "", "init_feedback"], [385, 2, 1, "", "propagate"], [386, 2, 1, "", "register"]], "opto.trace.propagators.graph_propagator.TraceGraph": [[387, 2, 1, "", "__init__"], [387, 2, 1, "", "__new__"], [388, 2, 1, "", "empty"], [389, 2, 1, "", "expand"], [390, 3, 1, "", "graph"], [391, 3, 1, "", "user_feedback"], [392, 2, 1, "", "visualize"]], "opto.trace.propagators.propagators": [[394, 1, 1, "", "AbstractFeedback"], [395, 1, 1, "", "AbstractPropagator"], [397, 1, 1, "", "Propagator"], [401, 1, 1, "", "SumPropagator"]], "opto.trace.propagators.propagators.AbstractFeedback": [[394, 2, 1, "", "__init__"], [394, 2, 1, "", "__new__"]], "opto.trace.propagators.propagators.AbstractPropagator": [[395, 2, 1, "", "__init__"], [395, 2, 1, "", "__new__"], [396, 2, 1, "", "propagate"]], "opto.trace.propagators.propagators.Propagator": [[397, 2, 1, "", "__init__"], [397, 2, 1, "", "__new__"], [398, 2, 1, "", "init_feedback"], [399, 2, 1, "", "propagate"], [400, 2, 1, "", "register"]], "opto.trace.propagators.propagators.SumPropagator": [[401, 2, 1, "", "__init__"], [401, 2, 1, "", "__new__"], [402, 2, 1, "", "init_feedback"], [403, 2, 1, "", "propagate"], [404, 2, 1, "", "register"]], "opto.trace.stop_tracing": [[405, 2, 1, "", "__init__"], [405, 2, 1, "", "__new__"]], "opto.trace.utils": [[407, 5, 1, "", "contain"], [408, 5, 1, "", "escape_json_nested_quotes"], [409, 5, 1, "", "for_all_methods"], [410, 5, 1, "", "parse_eqs_to_dict"], [411, 5, 1, "", "remove_non_ascii"], [412, 5, 1, "", "render_opt_step"], [413, 5, 1, "", "sum_feedback"], [414, 5, 1, "", "test_json_quote_escaper"]], "opto.utils": [[416, 0, 0, "-", "llm"]], "opto.utils.llm": [[417, 1, 1, "", "AbstractModel"], [419, 1, 1, "", "AutoGenLLM"], [422, 5, 1, "", "auto_construct_oai_config_list_from_env"]], "opto.utils.llm.AbstractModel": [[417, 2, 1, "", "__init__"], [417, 2, 1, "", "__new__"], [418, 4, 1, "", "model"]], "opto.utils.llm.AutoGenLLM": [[419, 2, 1, "", "__init__"], [419, 2, 1, "", "__new__"], [420, 2, 1, "", "create"], [421, 4, 1, "", "model"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data", "7": "py:exception"}, "terms": {"": [26, 74, 123, 128, 129, 130, 136, 139, 141, 142, 143, 146, 148, 149, 152, 153, 167, 172, 175, 176, 180, 181, 186, 200, 202, 213, 214, 237, 250, 252, 263, 264, 281, 294, 295, 305, 306, 322, 324, 328, 331, 336, 349, 350, 360, 361, 419, 420, 424, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437, 438], "0": [55, 172, 179, 211, 233, 261, 303, 358, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "00": [426, 438], "005": 438, "0050": 438, "01": [420, 438], "0100": 438, "0125": [425, 427], "01701570386908862": 424, "02": 420, "037500000000001": 437, "04": 427, "04321208107251127": 424, "04434824362397194": 435, "046178679913282394": 435, "05": [427, 438], "0500": 438, "06": 428, "06207482910694713": 427, "06279093772172928": 435, "0648590698838234": 435, "065": 438, "0650": 438, "07": [427, 438], "0700": 438, "072": 438, "0720": 438, "075": 438, "0750": 438, "08542013551374739": 427, "09292582122656425": 427, "0m": 427, "0x7f4bd428a410": 426, "0x7f6d1d53d810": 424, "0x7f991e677d00": 434, "0x7f99340f9cc0": 434, "0x7f99340fa770": 434, "0x7f99341e7760": 434, "1": [67, 218, 220, 221, 235, 268, 270, 271, 310, 312, 313, 365, 367, 368, 408, 410, 424, 425, 426, 427, 431, 432, 433, 434, 436, 437, 438], "10": [113, 425, 426, 427, 428, 432, 433, 435, 436, 437, 438], "100": [186, 237, 281, 321, 327, 336, 392, 426, 427, 438], "1000": 438, "10000": 438, "101": 436, "1024": 426, "105": 433, "1060161998875906": 427, "10650121803495348": 427, "109": 433, "11": [425, 427, 433, 434, 436, 437], "12": [425, 427, 436, 437, 438], "120": 437, "1200000047683716": 435, "122": 437, "13": [425, 427, 437], "131": 427, "14": [427, 437], "143": 425, "15": [425, 427, 432, 434, 437], "150000000000002": 437, "15523541800098087": 424, "159": 427, "16": 427, "17": [426, 427, 433, 437, 438], "172": 433, "18": [427, 437], "19": 427, "19735687971115112": 435, "2": [67, 133, 408, 410, 424, 425, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438], "20": [425, 427, 432, 437, 438], "200": 425, "20000": 438, "2022": 437, "2024": [420, 428, 433, 437], "21": [426, 427], "210": 433, "2100000000000002": 436, "2122009999999999": 436, "216": 433, "22": [425, 427], "23": [424, 427, 437], "2321000000000002": 436, "24": [424, 427, 437, 438], "240": 427, "25": [424, 427, 431], "250": [425, 426], "2544000000000002": 436, "26": [427, 437], "267": 433, "268": 433, "27": [427, 437, 438], "28": [425, 427, 438], "29": 427, "2f": 438, "3": [67, 422, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "30": [427, 428, 437, 438], "311": 427, "3125": 437, "32": [427, 437], "33": 425, "3333333333333333": 434, "33mwarn": 427, "35": 425, "36": 427, "36093443632125854": 435, "37": [427, 437], "38": 427, "3x": 428, "4": [422, 424, 425, 426, 427, 431, 432, 434, 435, 436, 437, 438], "40": 422, "40783": 426, "4096": [9, 55, 57, 101], "42": [425, 427], "427": 437, "44": 436, "449999999999999": 437, "45833333": 424, "47826087": 424, "4788647342995169": 424, "4888888888888889": 424, "4f": 438, "5": [422, 424, 425, 426, 427, 432, 434, 435, 436, 437, 438], "50": [433, 438], "51": 438, "52": 437, "54": 425, "55": 424, "56": 438, "5628820061683655": 435, "57894737": 424, "6": [426, 427, 432, 434, 435, 436, 437, 438], "60": 432, "62": 438, "6344540280467054": 424, "64": 438, "66": 437, "68": 427, "7": [425, 427, 432, 433, 434, 435, 436, 437, 438], "712": 433, "72": 438, "73": [425, 438], "75": 433, "76": 438, "77": 433, "79": 433, "8": [426, 427, 432, 433, 434, 435, 436, 437, 438], "80": [433, 437], "81": 438, "8122000098228455": 435, "8125": 437, "83": 438, "84": 438, "84615385": 424, "85": [437, 438], "86": 438, "866826140399557": 427, "87": 438, "88": [425, 427, 438], "9": [427, 435, 436, 437, 438], "92": 438, "94": 438, "95": 438, "97": 438, "A": [119, 138, 184, 186, 190, 193, 194, 195, 199, 210, 215, 232, 234, 235, 237, 241, 243, 244, 245, 249, 260, 265, 279, 281, 285, 287, 288, 289, 293, 302, 307, 321, 327, 334, 336, 340, 342, 343, 344, 348, 357, 362, 376, 377, 382, 405, 408, 417, 419, 420, 425, 426, 427, 429, 431, 433, 434, 437, 438], "As": [426, 427, 432, 433], "Be": 433, "But": [427, 431], "By": [426, 432, 435, 438], "For": [97, 186, 237, 281, 336, 419, 429, 431, 432, 433, 434, 437], "IN": 153, "If": [132, 135, 172, 174, 186, 192, 195, 215, 233, 237, 242, 245, 265, 281, 286, 289, 307, 324, 331, 336, 341, 344, 362, 376, 377, 417, 419, 420, 422, 424, 425, 426, 427, 431, 432, 433, 434, 436, 437, 438], "In": [135, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "It": [181, 214, 228, 229, 264, 278, 279, 306, 320, 361, 375, 394, 419, 420, 424, 426, 427, 428, 429, 431, 432, 434, 438], "Its": 434, "No": [420, 425, 426, 427, 434], "Not": 436, "Of": 432, "One": 438, "THESE": 425, "The": [26, 74, 96, 112, 113, 131, 140, 150, 168, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 192, 195, 196, 197, 199, 200, 202, 211, 213, 214, 215, 216, 217, 219, 225, 229, 231, 232, 233, 235, 237, 238, 240, 242, 245, 246, 247, 249, 250, 252, 261, 263, 264, 265, 266, 267, 269, 275, 279, 281, 282, 284, 286, 289, 290, 291, 293, 294, 295, 303, 305, 306, 307, 308, 309, 311, 317, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 341, 344, 345, 346, 348, 349, 350, 358, 360, 361, 362, 363, 364, 366, 372, 376, 377, 417, 419, 420, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438], "Then": [427, 431, 432], "These": [112, 429], "To": [324, 331, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 437, 438], "With": 433, "_": [424, 432, 433, 435, 436], "__add__": 434, "__bool__": 434, "__call__": [424, 429, 432, 433], "__code": [424, 426, 431, 432, 437, 438], "__code0": [424, 426, 427, 431, 432], "__code1": [424, 426, 432, 437], "__deepcopy__": 172, "__init__": [4, 7, 34, 38, 48, 55, 81, 98, 101, 123, 137, 138, 141, 157, 158, 160, 161, 164, 172, 184, 229, 235, 279, 321, 327, 334, 382, 387, 394, 395, 397, 401, 405, 417, 419, 424, 426, 427, 429, 433, 434, 435], "__main__": [424, 434], "__new__": [4, 7, 34, 38, 48, 55, 81, 98, 101, 123, 137, 138, 141, 157, 158, 160, 161, 164, 172, 184, 229, 235, 279, 321, 327, 334, 382, 387, 394, 395, 397, 401, 405, 417, 419], "__str__": 172, "_add_child": 172, "_add_par": 172, "_backward": 279, "_constraint": 279, "_data": [172, 174, 192, 242, 286, 341], "_depend": [196, 216, 246, 266, 279, 290, 308, 345, 363], "_descript": 279, "_factori": 419, "_feedback": 279, "_info": 279, "_level": [175, 180, 200, 213, 250, 263, 294, 305, 349, 360], "_name": [172, 233], "_node": [181, 214, 229, 231, 232, 233, 264, 306, 361], "_node__index": [218, 268, 310, 365], "_propag": 435, "_step": 435, "a1": [431, 432], "a10": 432, "a2": 432, "a3": 432, "a4": 432, "a5": 432, "a6": 432, "a7": 432, "a8": 432, "a9": 432, "ab": [427, 435], "abc_test1": 410, "abcdefgh": 432, "abil": [430, 438], "about": [26, 67, 74, 184, 203, 235, 253, 279, 296, 334, 351, 424, 426, 427, 428, 432, 433, 436, 437, 438], "abov": [96, 431, 433, 435, 438], "absolut": [427, 432], "abspath": 432, "abstract": [172, 417, 434], "abstractnod": 279, "accept": [425, 436], "accept_trad": 425, "access": [172, 173, 189, 240, 284, 339, 424, 426, 427, 432, 433, 434, 438], "accomplish": [427, 433], "accomplishinh": 427, "accord": [12, 60, 424, 426, 427, 432, 433, 434, 435, 436, 437, 438], "accordingli": 438, "account": 427, "accumul": [97, 435], "accur": [426, 427, 432], "accuraci": [426, 438], "achiev": [427, 431, 432, 433, 438], "across": [427, 433, 434], "act": [424, 432, 433], "action": [424, 425, 426, 427, 433], "action_spac": 427, "activ": [427, 432], "actual": [420, 427, 428, 431, 432, 433, 438], "acycl": [229, 434], "ad": 434, "adapt": [427, 429], "add": [172, 174, 192, 233, 235, 242, 286, 341, 427, 432, 433, 434, 438], "add0": 438, "addit": [112, 184, 203, 235, 253, 279, 296, 334, 351, 394, 420, 426, 427, 432, 434], "addition": [427, 433], "address": [426, 436], "adequ": 427, "adjac": [424, 432], "adjust": [424, 426, 427, 432, 438], "adopt": 429, "advanc": 424, "advantag": [424, 432], "advic": 427, "affect": 231, "after": [176, 186, 202, 228, 231, 233, 237, 252, 278, 281, 295, 320, 336, 350, 375, 417, 419, 426, 427, 429, 432, 433, 435, 438], "again": [432, 438], "against": [175, 180, 200, 213, 250, 263, 294, 305, 349, 360, 431], "agent": [420, 429], "agent1": 433, "agent2": 433, "agent_1": 433, "agent_2": 433, "agent_goal_desc": 433, "agent_goal_spec": 433, "agent_info": 433, "agent_ob": 433, "agent_obs_desc": 433, "agentchat": 437, "aggreg": [29, 44, 77, 108, 279, 413, 435], "aggress": 432, "agre": 431, "ai": 429, "aim": [426, 427, 432], "al": 433, "algorithm": [26, 74, 424, 426, 427, 428, 432, 435, 436, 437, 438], "alic": 425, "align": [426, 427, 432], "all": [29, 44, 77, 108, 124, 130, 131, 139, 140, 143, 149, 150, 167, 168, 229, 231, 234, 279, 382, 409, 420, 425, 427, 431, 432, 433, 434, 437], "allow": [172, 173, 189, 233, 240, 284, 339, 420, 428, 429, 431, 432, 434], "allow_external_depend": [426, 434], "allow_format_str_templ": 420, "along": 427, "alongsid": 427, "alpha": 429, "alreadi": [186, 237, 281, 336, 377, 427, 431, 432, 433, 437], "also": [134, 172, 426, 427, 428, 431, 433, 434], "alter": [426, 432], "altern": [425, 431, 437], "although": 433, "alwai": [333, 427, 434, 438], "amend": 432, "an": [15, 34, 63, 67, 119, 136, 137, 141, 162, 172, 174, 182, 184, 186, 192, 195, 196, 215, 217, 229, 231, 235, 237, 242, 245, 246, 265, 267, 279, 281, 286, 289, 290, 307, 309, 324, 326, 331, 334, 336, 341, 344, 345, 362, 364, 376, 420, 422, 424, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 438], "analog": 279, "analysi": [424, 432], "analysis_result": 424, "analyz": [424, 426, 427, 432, 438], "ani": [11, 30, 45, 48, 51, 52, 53, 59, 78, 109, 119, 162, 174, 186, 192, 231, 233, 237, 242, 279, 281, 286, 336, 341, 377, 379, 384, 385, 387, 391, 396, 398, 399, 402, 403, 420, 424, 426, 427, 429, 430, 431, 432, 433, 434, 438], "annot": 437, "anoth": [175, 180, 195, 200, 213, 215, 245, 250, 263, 265, 289, 294, 305, 307, 344, 349, 360, 362, 424, 425, 431, 432, 433, 435], "answer": [19, 26, 67, 74, 424, 426, 427, 431, 436, 437, 438], "anyio": 437, "anyth": 426, "apart": 427, "api": [417, 420, 422, 424, 426, 427, 428, 429, 430, 431, 432, 435], "api_kei": [422, 424, 425, 426, 427, 431, 432], "api_key_input": [424, 426, 427, 431, 432], "api_vers": 420, "apierror": 420, "appear": [424, 426, 427, 432], "append": [146, 172, 324, 331, 424, 425, 426, 427, 431, 432, 437, 438], "appl": 433, "appli": [119, 120, 409, 427, 432, 434, 438], "applic": [429, 432], "apply_op": 434, "approach": [426, 427, 429, 432, 433, 436], "appropri": [427, 432], "ar": [16, 19, 26, 31, 64, 67, 74, 93, 120, 196, 201, 229, 233, 246, 251, 290, 322, 323, 325, 328, 329, 330, 332, 345, 385, 396, 399, 403, 408, 420, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438], "area": [427, 432, 433], "arena": 433, "arg": [7, 8, 10, 22, 27, 34, 38, 39, 42, 43, 55, 56, 58, 70, 75, 101, 102, 106, 107, 119, 141, 154, 165, 185, 187, 198, 235, 236, 238, 248, 280, 282, 292, 335, 337, 347, 424, 426, 427, 431, 434, 435, 437], "arg1": 434, "arg2": 434, "args_0": 437, "args_1": 437, "args_2": 437, "args_3": 437, "argument": [112, 147, 187, 238, 282, 337, 417, 419, 420, 424, 426, 431, 437], "aris": [424, 426, 432], "arithmet": 434, "arm": 427, "around": [408, 419, 424, 428, 432, 433, 434], "arrai": [424, 427], "as_fram": 438, "ascend": [431, 437], "ask": [67, 424, 426, 427, 431, 432, 433, 436, 437, 438], "aspect": [424, 428], "assert": [427, 434], "assertionerror": 434, "assess": 426, "assign": [172, 184, 235, 279, 322, 323, 328, 329, 330, 334, 426], "assist": [426, 429, 433], "associ": 427, "assum": [174, 181, 192, 214, 229, 232, 233, 242, 264, 286, 306, 341, 361], "aswaminathan": [426, 437], "attach": [424, 426, 427, 431, 432], "attack": 432, "attempt": [424, 426, 427, 431, 432], "attr": 434, "attribut": [7, 34, 38, 48, 55, 81, 95, 98, 101, 114, 172, 174, 176, 184, 192, 196, 199, 202, 216, 229, 231, 232, 233, 234, 235, 242, 246, 249, 252, 266, 279, 286, 290, 293, 295, 308, 322, 328, 334, 341, 345, 348, 350, 363, 387, 417, 419, 433, 434, 436, 438], "attributeerror": [174, 186, 192, 237, 242, 281, 286, 336, 341, 434], "auto": 426, "autogen": [419, 420, 424, 425, 426, 427, 430, 431, 432, 437, 438], "autogenllm": [55, 101], "autograd": [96, 429, 435], "automat": [424, 428, 429, 431, 432, 434], "autonotebook": 426, "avail": [420, 424, 432, 433], "available_act": 433, "avoid": [176, 196, 202, 216, 228, 246, 252, 266, 278, 290, 295, 308, 320, 324, 331, 345, 350, 363, 375, 437], "awai": 425, "awar": 433, "award": 432, "b": [235, 424, 426, 427, 431, 432, 433, 434], "back": [279, 431, 432], "background": 427, "backpropag": 435, "backpropagationgradientdesc": 435, "backslash": 432, "backward": [21, 35, 41, 69, 105, 279, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "ball": 426, "bar": 438, "bar0": 438, "bard": 431, "barter": 425, "base": [22, 27, 34, 36, 38, 42, 43, 70, 75, 106, 107, 157, 172, 186, 237, 281, 322, 323, 325, 328, 329, 330, 332, 336, 424, 425, 426, 427, 429, 431, 432, 433, 438], "baselin": 433, "basemodul": 434, "baseutil": 433, "basic": [279, 432, 433, 436], "batch_loss": 437, "batched_feedback": 437, "batched_output": 437, "bathroom": 433, "battl": 432, "battleshipboard": 432, "beat": 426, "becasu": 438, "becaus": [424, 426, 427, 431, 432, 433, 438], "becom": [231, 431, 432], "bedroom": 433, "been": [186, 228, 231, 233, 237, 278, 279, 281, 320, 336, 375, 424, 426, 427, 431, 432, 433], "befor": [148, 196, 216, 232, 246, 266, 290, 308, 345, 363, 426, 431, 433, 438], "begin": [113, 235, 376], "behav": [431, 435], "behavior": [431, 432, 434, 435], "behind": 426, "being": [172, 424, 427, 431, 432, 436, 438], "below": [429, 431, 433, 435, 436, 438], "bench": 427, "benchmark": 426, "benefici": [425, 432], "besid": 420, "best": [433, 438], "best_opt": 424, "best_scor": 424, "bestregular": 438, "bestscor": 438, "bett": 426, "better": [16, 64, 424, 425, 426, 427, 431, 432, 438], "between": [231, 425, 427, 428, 431, 434, 437], "beyond": 424, "bias": 433, "bigbenchhard": 426, "birdsey": 433, "black": 329, "blackbox": [432, 438], "blob": 96, "block": [424, 426, 427, 431, 432, 437], "blow": 431, "board": [424, 432], "board_siz": 424, "bob": 425, "bodi": [431, 432], "book": 433, "bool": [9, 55, 57, 103, 112, 172, 175, 177, 178, 180, 200, 205, 206, 213, 250, 255, 256, 263, 279, 294, 297, 298, 305, 349, 352, 353, 360, 377, 431, 434, 437], "boolean": [184, 195, 215, 235, 245, 265, 279, 289, 307, 334, 344, 362, 420, 431, 434], "border": [328, 329], "both": [131, 140, 150, 168, 424, 425, 426, 427, 428, 431, 432, 433], "bound": 434, "box": [325, 332, 427], "bp": 435, "brace": 432, "bracket": [114, 376, 432], "break": [424, 425, 427, 431, 432, 433, 436], "brief": 432, "brown": 429, "build": [426, 429, 431, 432], "built": 438, "bundl": [424, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "button": [424, 426, 427, 431, 432], "buy_resourc": 425, "buzzer": 426, "bypass": 433, "c": [424, 425, 433, 438], "cabinet": 433, "cach": 420, "cache_se": 420, "calcul": [424, 425, 427, 432], "call": [9, 57, 103, 172, 196, 216, 231, 232, 233, 246, 266, 279, 290, 308, 322, 328, 345, 363, 420, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "call_llm": [426, 429, 433], "call_llm0": 426, "call_llm1": 426, "call_llm2": 426, "call_llm3": 426, "callabl": [119, 120, 417, 419], "callback": [424, 426, 427, 431, 432], "came": [431, 433], "can": [21, 26, 35, 41, 67, 69, 74, 105, 172, 279, 324, 331, 408, 411, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "can_place_ship": 424, "cannot": [170, 408, 424, 426, 427, 431, 432, 433, 434, 438], "capabl": [433, 437], "captur": [429, 430, 433], "care": 433, "carefulli": 279, "carlson": 426, "carri": 433, "carrier": [424, 432], "case": [135, 231, 420, 424, 427, 431, 433, 437], "cast": 427, "catch_execution_error": 426, "caus": [324, 331, 424, 427], "caveat": 433, "cd": [427, 430], "cell": [424, 425, 426, 432, 438], "certif": 417, "certifi": 437, "challeng": 432, "chanc": 432, "chang": [19, 26, 60, 67, 74, 424, 426, 427, 429, 431, 432, 433, 436, 437, 438], "changeabl": [26, 74, 424, 426, 436, 437, 438], "char": [222, 272, 314, 369], "charact": [172, 183, 186, 219, 237, 269, 281, 311, 321, 327, 336, 366, 408, 432, 438], "character1": 433, "character2": 433, "charset": 437, "chat": 431, "chatgpt": 431, "check": [175, 177, 178, 180, 186, 195, 200, 205, 206, 213, 215, 233, 237, 245, 250, 255, 256, 263, 265, 281, 289, 294, 297, 298, 305, 307, 336, 344, 349, 352, 353, 360, 362, 408, 424, 427, 431, 432, 433, 434, 437], "check_hit": 424, "check_input": 436, "check_random_st": 438, "check_shot": [424, 432], "check_termin": [424, 432], "child": [94, 172, 173, 186, 189, 237, 240, 281, 284, 336, 339, 385, 396, 399, 403, 435], "children": [172, 177, 197, 205, 247, 255, 279, 291, 297, 346, 352, 383], "chinganc": 427, "choic": [424, 425, 426, 433], "choos": [425, 429, 432, 433], "chose": 431, "chosen": 432, "cl": 170, "clarifi": 427, "class": [3, 4, 6, 7, 33, 34, 38, 47, 48, 55, 81, 95, 98, 101, 117, 122, 123, 137, 138, 141, 157, 159, 160, 161, 163, 164, 170, 171, 172, 184, 194, 229, 235, 244, 279, 288, 321, 327, 334, 343, 381, 382, 387, 393, 394, 395, 397, 401, 405, 409, 416, 417, 419, 427, 429, 431, 432, 433, 434, 435], "classic": [431, 432, 435], "classifi": 438, "classmethod": [126, 389], "claud": [422, 431], "clean": 231, "clear": [229, 424, 426, 431, 432, 434, 436, 437, 438], "clearli": 426, "click": [424, 426, 427, 431, 432, 433], "client": [420, 425], "clip": 427, "clone": [427, 430, 434], "close": [427, 432], "closer": 427, "code": [13, 19, 26, 61, 67, 74, 81, 90, 113, 157, 424, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438], "code_optim": 431, "coef_": 438, "coeffici": 438, "coffeet": 433, "col": 424, "collabor": 433, "collect": [170, 382, 422, 435], "colon": [176, 202, 252, 295, 324, 331, 350, 426], "color": [116, 322, 323, 327, 328, 329, 330], "com": [96, 427, 430], "combin": [181, 214, 264, 306, 324, 331, 361, 432], "come": [12, 431], "command": 427, "commentari": 426, "common": 432, "commonli": 426, "commun": [426, 433], "commut": 279, "compar": [172, 175, 180, 195, 200, 213, 215, 245, 250, 263, 265, 289, 294, 305, 307, 344, 349, 360, 362, 431, 433, 434, 437], "comparison": [172, 195, 215, 245, 265, 289, 307, 344, 362, 427, 428, 434], "compat": [431, 432], "complet": [231, 420, 424, 425, 427, 433], "complex": 431, "compon": 427, "compos": [26, 74, 424, 426, 429, 436, 437, 438], "composit": 438, "comput": [186, 237, 279, 281, 334, 336, 385, 396, 399, 403, 427, 428, 431, 434, 435, 436, 437], "compute_loss": 437, "concat": 437, "concat1": 437, "concaten": 437, "concept": 428, "concern": 427, "concis": 426, "condit": [427, 432], "conduct": 433, "confer": 426, "config": [420, 425, 427], "config_list": [419, 424, 425, 426, 427, 431, 432, 438], "config_list_from_json": [424, 425, 426, 427, 431, 432, 438], "configur": 438, "confirm": 427, "connect": [434, 438], "consecut": 427, "consid": [16, 64, 67, 424, 426, 427, 432, 434, 436, 437, 438], "consider": [427, 432], "consist": [425, 427, 432, 438], "constant": 427, "constrain": 436, "constraint": [13, 26, 61, 74, 81, 90, 93, 112, 184, 235, 279, 334, 377, 424, 426, 427, 431, 436, 437], "construct": [10, 58, 111, 112, 322, 324, 328, 331, 426, 429, 431, 433], "contain": [26, 48, 74, 114, 119, 120, 168, 176, 184, 195, 196, 199, 202, 210, 215, 216, 235, 245, 246, 249, 252, 260, 265, 266, 279, 289, 290, 293, 295, 302, 307, 308, 334, 344, 345, 348, 350, 357, 362, 363, 376, 377, 387, 394, 420, 424, 426, 427, 431, 433, 434, 436, 437, 438], "container_of_nod": 407, "content": [186, 237, 281, 321, 324, 327, 331, 336, 425, 426, 431, 433, 434], "context": [112, 172, 174, 192, 242, 286, 341, 420, 424, 426, 428, 432], "contextmanag": 405, "continu": [426, 427, 432, 433, 435], "contrast": 437, "contribut": [427, 430, 432], "control": [408, 420, 427, 432, 434, 438], "control_mod": 427, "controller_input": 427, "conveni": 431, "convent": [431, 433, 434], "convers": [96, 425], "conversation_histori": 425, "convert": [11, 59, 93, 123, 141, 431, 434, 438], "convert_english_to_numb": 438, "coord": [424, 432], "coordin": [424, 427, 432, 433], "copi": [172, 194, 235, 244, 288, 343, 426, 431, 434, 438], "copy_node_a": 235, "core": [427, 434, 437], "corner": 431, "correct": [186, 237, 279, 281, 336, 426, 427, 429, 431, 437, 438], "correctli": [232, 424, 426, 427, 431, 432, 437], "correspond": [132, 176, 196, 202, 216, 232, 246, 252, 266, 290, 295, 308, 345, 350, 363, 427, 431, 433, 437], "cost": 433, "could": [424, 431, 432], "count": [220, 270, 312, 367, 424, 432, 433], "cours": 432, "cover": 434, "craft": 426, "creat": [26, 74, 172, 190, 194, 241, 244, 285, 288, 340, 343, 377, 384, 398, 402, 419, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "create_and_fill_battleship_board": 424, "create_battleship_board": 424, "create_feedback": [427, 436], "create_messag": 425, "create_prompt": 426, "creation": [424, 434], "credit": [432, 433], "criteria": 426, "crucial": 432, "cruiser": [424, 432], "cum_reward": 432, "current": [16, 64, 172, 175, 180, 186, 190, 194, 196, 200, 201, 213, 231, 237, 241, 244, 246, 250, 251, 263, 279, 281, 285, 288, 290, 294, 305, 336, 340, 343, 345, 349, 360, 424, 426, 427, 428, 431, 432, 433, 436, 437, 438], "current_dict": 425, "current_inventori": 425, "current_messag": 425, "current_play": 425, "current_prompt": 425, "curv": 429, "custom": [420, 438], "cutleryfork": 433, "d": [124, 127, 128, 129, 132, 133, 134, 135, 136, 424, 433], "dag": [172, 173, 175, 180, 189, 200, 213, 229, 240, 250, 263, 284, 294, 305, 339, 349, 360, 435], "dall": 432, "data": [11, 22, 30, 42, 45, 59, 70, 78, 93, 106, 109, 172, 186, 225, 228, 237, 275, 278, 279, 281, 317, 320, 336, 372, 375, 377, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "data_typ": [26, 74, 424, 426, 436, 437, 438], "databas": 429, "dataset": [426, 431, 438], "deal": 436, "debug": 431, "decid": [427, 429, 432, 433], "decide_lang": 429, "decis": [424, 427, 432], "declar": [420, 429, 432], "decor": [170, 409, 431, 432, 433, 434, 438], "decreas": 438, "dedent": 426, "deem": 426, "deep": [172, 194, 244, 288, 343], "deepcopi": 434, "deeper": [424, 432], "def": [410, 420, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "default": [14, 40, 62, 104, 127, 151, 172, 186, 237, 279, 281, 321, 327, 336, 377, 420, 422, 424, 426, 427, 431, 432, 434, 435], "default_object": [427, 432], "default_propag": 435, "defaultdict": [229, 231, 435], "defens": 426, "defin": [26, 74, 123, 141, 233, 321, 327, 427, 429, 430, 431, 433, 434, 435, 436, 437, 438], "definit": [19, 26, 67, 74, 424, 426, 427, 431, 432, 436, 437, 438], "delai": 433, "delet": 231, "delimit": [176, 202, 252, 295, 350], "demand": 426, "demo": [426, 433], "demonstr": [426, 427, 431, 433, 435], "denot": [424, 432, 433], "depend": [196, 201, 216, 246, 251, 266, 279, 290, 308, 345, 363, 429, 430, 434], "deprec": 427, "deriv": [426, 427], "descent": 112, "describ": [26, 74, 184, 235, 279, 334, 377, 424, 426, 431, 433, 436, 437, 438], "descript": [26, 74, 112, 184, 186, 235, 237, 279, 281, 321, 324, 327, 331, 334, 336, 376, 377, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "deshaun": 426, "design": [228, 278, 320, 375, 424, 427, 429, 431, 432, 435, 437], "desir": [427, 435], "despit": [427, 432], "destroy": [424, 432], "detach": [172, 433, 434], "detail": [235, 426, 431], "detect": 432, "determin": [179, 211, 261, 303, 322, 323, 325, 328, 329, 330, 332, 358, 425, 427, 433], "develop": 433, "dialogu": 433, "dict": [11, 23, 30, 45, 48, 49, 51, 52, 53, 55, 59, 71, 78, 93, 98, 100, 109, 120, 123, 131, 140, 150, 162, 168, 184, 186, 204, 235, 237, 254, 279, 281, 322, 328, 336, 383, 385, 396, 399, 403, 419, 424, 427, 434], "dict_act": 433, "dict_info": 433, "dict_nod": 434, "dictat": 427, "dictionari": [30, 45, 78, 109, 131, 140, 150, 168, 181, 184, 214, 232, 233, 235, 264, 279, 306, 322, 328, 334, 361, 410, 424, 427, 432, 434], "did": [426, 427, 437], "differ": [425, 427, 429, 431, 432, 433, 434, 437], "differenti": [428, 435], "digraph": [186, 237, 281, 336], "dim": 427, "dimens": 427, "dimension": 427, "direct": [172, 229, 279, 427, 432, 433, 434], "direction_to_go": 427, "direction_to_puck": 427, "directli": [172, 426, 427, 433, 434, 435, 438], "disabl": 405, "disambigu": 437, "discord": 431, "discuss": [431, 433], "dishwash": 433, "diskcach": 437, "displai": [424, 426, 427, 431, 432], "distanc": 427, "distro": 437, "divid": [433, 434], "do": [26, 74, 408, 424, 425, 426, 427, 431, 433, 435, 436, 437, 438], "do_constrain": 112, "do_in_context_exampl": 112, "do_momentum": 112, "doc": 420, "docker": 437, "docstr": [26, 74, 424, 426, 431, 436, 437, 438], "document": [13, 26, 48, 61, 67, 74, 81, 90, 424, 426, 427, 431, 434, 436, 437, 438], "doe": [135, 376, 408, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438], "doesn": [426, 432, 433], "don": [113, 431, 433], "done": [433, 434], "dotenv": 437, "doubl": [408, 426, 432], "down": [19, 67, 424, 426, 427, 431, 432, 433, 435, 436, 437, 438], "downstream": 432, "dozen": 431, "dp": 426, "dtype": [426, 431, 434], "du": 436, "due": [426, 427, 432, 433], "duplic": [190, 241, 285, 340], "dure": [113, 172, 176, 202, 252, 295, 350, 425, 427, 432, 436], "dynam": 427, "e": [135, 420, 424, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437], "e_nod": 427, "each": [26, 74, 181, 214, 231, 232, 264, 306, 361, 420, 424, 425, 426, 427, 429, 432, 433, 435, 436, 437, 438], "each_input": 437, "earlier": [431, 432, 437], "easi": 433, "easili": 431, "eastern": 426, "edg": [424, 434], "edit": 430, "editor": 431, "effect": [427, 432, 433], "effector": 427, "effici": [427, 432, 433], "effor": 431, "effort": 433, "eight": 438, "either": [135, 235, 424, 432, 433, 434], "elabor": 426, "element": [146, 181, 214, 229, 233, 264, 306, 361, 424, 426, 427, 431, 434, 437], "elia": 426, "elicit": 424, "elif": [424, 425, 427, 432], "ellips": [325, 332], "ellipsi": [324, 331], "els": [127, 424, 425, 426, 427, 431, 432, 433, 434, 435, 437, 438], "empti": [133, 151, 231, 326, 424, 426, 427, 431, 432, 433, 437], "en": 426, "en_or_": 429, "enabl": [186, 237, 281, 336, 426, 429], "encapsul": 434, "enclos": 376, "encod": 427, "encount": 424, "encourag": [427, 431], "end": [113, 142, 425, 426, 427, 429, 431, 435, 438], "engin": 433, "engine_nam": 97, "engligsh": 438, "english": 438, "enhanc": [426, 432], "enhanced_infer": 420, "enough": [426, 427, 438], "ensur": [176, 186, 196, 202, 216, 231, 232, 237, 246, 252, 266, 281, 290, 295, 308, 336, 345, 350, 363, 426, 427, 428, 432, 438], "enter": [424, 426, 427, 431, 432], "entir": [113, 428, 429, 432], "entri": 432, "enumer": [424, 426, 432, 435, 437, 438], "env": [424, 426, 427, 431, 432, 433, 437], "env_nam": [424, 426, 427, 431, 432], "env_name_input": [424, 426, 427, 431, 432], "environ": [422, 425, 426, 431, 432, 433], "environment": 427, "episod": 424, "epoch": 431, "eq": [431, 434, 437], "eq0": 437, "eq1": [431, 437], "eq2": 437, "eq3": 437, "equal": [195, 215, 245, 265, 289, 307, 344, 362, 427, 431, 434], "equat": 410, "equival": [434, 438], "error": [19, 67, 176, 184, 202, 252, 295, 350, 376, 424, 426, 427, 431, 432, 433, 437, 438], "escap": 408, "especi": [424, 426, 427], "essenc": 432, "essenti": [173, 182, 189, 217, 240, 267, 284, 309, 339, 364, 426, 432], "et": 433, "etc": [429, 438], "eval": [424, 426, 427, 431, 432, 437], "eval0": [424, 426], "eval1": [424, 426, 431], "eval10": 432, "eval11": 432, "eval145": 427, "eval146": 427, "eval147": 427, "eval148": 427, "eval2": 426, "eval3": 426, "eval4": [426, 432], "eval5": 426, "eval6": [426, 432], "eval7": 432, "eval84": 437, "eval85": 437, "eval86": 437, "eval87": 437, "eval_metr": 426, "eval_polici": 424, "evalu": [427, 428, 431, 432, 437], "even": [427, 431, 432], "ever": 427, "everi": [417, 424], "everyth": 426, "evid": 432, "evidenc": 427, "evolv": 432, "evvalu": 434, "exact": 438, "exactli": [408, 432], "examin": [427, 431], "exampl": [15, 16, 31, 63, 64, 112, 235, 408, 410, 411, 420, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437], "example_problem": [15, 63], "example_respons": [15, 63], "examples_path": 432, "exce": [324, 331], "except": [156, 157, 158, 184, 196, 216, 246, 266, 290, 308, 345, 363, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "exception_ev": 426, "exception_eval0": 426, "exception_eval1": 426, "exception_func_with_input_checking0": 436, "exception_nod": [157, 424, 426, 427, 429, 431, 432, 436, 437], "exception_step": 427, "exceptiongroup": 437, "exceptionnod": [157, 323, 329, 330, 424, 426, 427, 436], "exchang": 425, "exclud": 432, "exclude_ship": 424, "execpt": 436, "execut": [26, 74, 157, 184, 424, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438], "executionerror": [424, 426, 427, 429, 431, 432, 433, 436, 437], "exert": 432, "exhaust": 431, "exhibit": 427, "exist": [174, 192, 242, 286, 341, 426, 432], "expand": [196, 246, 279, 290, 345], "expect": [67, 424, 426, 427, 431, 432, 436, 437, 438], "expected_output": 431, "experi": [426, 433], "explain": [67, 424, 426, 434, 436, 437, 438], "explan": [26, 74, 424, 426, 427, 436, 437, 438], "explicit": 431, "explicitli": [424, 426, 427, 431, 433, 434, 438], "explor": 433, "exponenti": 425, "expos": 432, "express": [376, 433, 434], "extend": [172, 279, 433, 436], "extens": 437, "extern": [429, 430], "extract": [17, 65, 172, 376, 377, 426, 427, 429], "extract_act": 433, "extract_answ": 426, "extract_text_or_completion_object": 420, "f": [135, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "f0": [431, 432], "f1": 432, "f2": 432, "f3": 432, "f4": 432, "f5": 432, "f6": 432, "f7": 432, "f8": 432, "f9": 432, "f_feedback": 438, "facilit": 426, "fact": 431, "factori": [417, 419], "fail": [426, 427, 431, 433, 436, 437, 438], "fair": 428, "fallback": [424, 432], "fals": [9, 55, 57, 101, 103, 112, 172, 177, 178, 186, 205, 206, 237, 255, 256, 279, 281, 297, 298, 336, 352, 353, 377, 392, 412, 420, 424, 425, 426, 427, 431, 432, 433, 434, 437, 438], "false_func": 120, "far": 425, "fashion": 437, "fast": 428, "faster": [427, 428, 433], "fb": 438, "feasibl": [16, 64], "featur": 429, "feed": 432, "feedback": [8, 12, 13, 21, 22, 26, 27, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 46, 48, 56, 60, 61, 67, 69, 70, 74, 75, 80, 81, 90, 96, 97, 102, 105, 106, 107, 110, 182, 186, 217, 228, 237, 267, 278, 279, 281, 309, 320, 336, 364, 375, 383, 384, 385, 387, 394, 396, 398, 399, 402, 403, 413, 424, 425, 426, 427, 429, 432, 433, 434, 435, 436, 438], "feedback_fn": 429, "feel": 420, "fetch_openml": 438, "few": [426, 429, 431, 433, 434], "field": 426, "figur": [429, 431, 433, 438], "file": [166, 169, 422, 425, 430, 431], "file_nam": [166, 169], "fill": [322, 326, 328, 330, 333], "filter": 420, "filter_dict": [55, 419], "filter_func": 420, "final": [172, 233, 424, 425, 426, 427, 429, 434, 438], "find": [229, 424, 425, 426, 432, 433], "findal": 426, "finish": 433, "firebrick1": [323, 329, 330], "first": [147, 152, 424, 425, 426, 427, 429, 432, 433, 435, 437], "fit": 438, "fit_transform": 438, "five": 438, "fix": [426, 432, 433], "flag": 172, "flaml": 437, "flattn": [130, 139, 149, 167], "flaw": [424, 427], "flexibilti": 435, "flexibl": 429, "float": [427, 434, 436, 438], "float0": [436, 438], "flow": [429, 431, 432, 434], "focu": [424, 429], "folder": [431, 432, 438], "follow": [19, 26, 67, 74, 97, 135, 233, 235, 420, 424, 426, 427, 428, 431, 432, 433, 434, 436, 437, 438], "foo": [434, 438], "foo_nod": 434, "foobar": 438, "foobar_text": 438, "food": 433, "footbal": 426, "forc": 431, "form": [172, 229, 432], "format": [19, 26, 67, 74, 112, 172, 176, 202, 232, 233, 252, 295, 350, 408, 420, 422, 424, 425, 426, 432, 433, 434, 436, 437, 438], "formul": 426, "forward": [164, 426, 429, 435], "found": [132, 376, 408, 411, 420, 424, 425, 426, 432, 433], "four": [425, 438], "fourth": 427, "frame": 431, "framework": [428, 429, 434, 435], "frequent": 427, "fridg": 433, "friend": 433, "friendli": [183, 219, 269, 311, 366], "from": [17, 65, 97, 113, 114, 124, 135, 143, 146, 166, 172, 186, 197, 231, 232, 237, 247, 279, 281, 291, 336, 346, 376, 377, 383, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "fulfil": 427, "full": 433, "fun": [187, 238, 282, 337, 410, 434, 437], "fun_nod": 434, "func_with_input_check": 436, "function": [19, 26, 47, 67, 74, 95, 115, 118, 120, 122, 159, 163, 171, 172, 174, 186, 187, 192, 196, 216, 231, 232, 233, 237, 238, 242, 246, 266, 281, 282, 286, 290, 308, 336, 337, 341, 345, 363, 376, 378, 406, 408, 416, 417, 419, 420, 422, 428, 429, 432, 433, 434, 436, 437], "functionfeedback": 93, "functionoptim": 438, "functionpropag": 48, "fundament": 431, "further": [427, 432, 433], "g": [420, 424, 426, 427, 429, 431, 432, 435, 437], "g0": 431, "game": [424, 426, 431], "gameplai": 432, "gener": [172, 322, 328, 424, 426, 427, 429, 431, 432, 433, 435, 437], "get": [134, 173, 176, 179, 181, 182, 183, 189, 199, 202, 211, 214, 217, 219, 233, 234, 240, 249, 252, 261, 264, 267, 269, 284, 293, 295, 303, 306, 309, 311, 322, 328, 339, 348, 350, 358, 361, 364, 366, 420, 424, 427, 429, 432, 434], "get_board": 424, "get_feedback": [431, 437], "get_game_statu": 424, "get_hit": 424, "get_life_point": 424, "get_miss": 424, "get_shot": [424, 432], "get_shots_overlay_board": 424, "get_wrapper_attr": 427, "getattr": 434, "getitem": [427, 434], "git": [427, 430], "github": [96, 427, 430], "give": [426, 427, 431, 432, 434, 435], "given": [30, 45, 78, 109, 132, 186, 232, 237, 281, 336, 384, 398, 402, 420, 424, 426, 427, 431, 432, 433, 434, 437, 438], "global": [424, 425, 426, 427, 431, 432], "goal": [425, 426, 427, 432, 433], "goal_po": 427, "gocheck": 433, "goe": 426, "goexplor": 433, "gold": 425, "good": [427, 431], "got": [96, 97, 424, 426, 432], "gpt": [422, 425, 427], "grab": [427, 431], "grad": 435, "gradeint": 435, "gradient": [97, 98, 111, 112, 279, 429, 432], "gradient_context": 98, "gradientdesc": 435, "gradientinfo": 111, "grammat": 426, "graph": [29, 38, 44, 48, 77, 108, 172, 174, 179, 181, 182, 186, 192, 196, 201, 211, 214, 217, 237, 242, 246, 251, 261, 264, 267, 279, 281, 286, 290, 303, 306, 309, 321, 324, 327, 331, 334, 336, 341, 345, 358, 361, 364, 387, 424, 426, 428, 429, 431, 433, 435, 436, 437, 438], "graphpropag": [186, 237, 281, 336, 387], "graphviz": [186, 237, 281, 324, 331, 336, 437], "grasp": 427, "great": [427, 431], "greater": [175, 200, 233, 250, 294, 349, 432, 436, 438], "greet": 429, "grip": 427, "gripper": 427, "gripper_distance_apart": 427, "gripper_open": 427, "ground": 431, "group": 96, "gt": 172, "guess": [432, 438], "guid": [322, 327, 328, 425, 426, 427, 431, 432, 438], "guidanc": [431, 432], "guo": 433, "gym": 427, "gymnasium": 427, "h": 433, "h11": 437, "ha": [135, 164, 172, 177, 178, 186, 205, 206, 228, 233, 237, 255, 256, 278, 279, 281, 297, 298, 320, 336, 352, 353, 375, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 438], "had": [431, 435], "hand": [426, 427], "hand_po": 427, "handl": [186, 237, 279, 281, 336, 408, 424, 425, 426, 427, 433, 434], "happen": [431, 433, 437], "happi": [424, 425, 426], "hard": [113, 431, 433], "have": [141, 172, 231, 424, 425, 426, 427, 428, 431, 432, 433, 434, 437], "heart": 432, "heed": 427, "height": 424, "hello": [410, 434], "help": [16, 26, 64, 74, 170, 424, 426, 427, 429, 431, 433, 436, 437, 438], "helper": [322, 328, 427, 432, 438], "henc": [426, 427, 436], "here": [408, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438], "heterogen": 426, "heurist": 432, "hidden": [201, 251], "hide": 433, "hierarch": [173, 189, 240, 284, 339, 433], "high": [26, 74, 424, 426, 427, 436, 437, 438], "higher": [425, 432, 438], "highlight": 427, "hint": [16, 64, 427, 432, 438], "histori": [433, 438], "hit": [424, 432], "hockei": 426, "hola": 429, "hold": [427, 433], "home": [426, 427, 433, 437], "hood": 431, "horizon": [427, 433], "host": 426, "housework": 433, "how": [26, 67, 74, 424, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "howev": [424, 426, 427, 428, 430, 431, 432, 433, 438], "html": 426, "http": [96, 426, 427, 430, 437], "httpcore": 437, "httpx": 437, "huggingfac": 426, "human": [431, 432, 433], "hundr": 428, "hurri": 433, "hypothet": 432, "i": [15, 19, 26, 34, 63, 67, 74, 96, 113, 123, 132, 133, 135, 141, 147, 148, 151, 152, 164, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 189, 192, 195, 196, 200, 202, 205, 206, 211, 213, 214, 215, 216, 217, 228, 229, 231, 232, 233, 234, 235, 237, 240, 242, 245, 246, 250, 252, 255, 256, 261, 263, 264, 265, 266, 267, 278, 279, 281, 284, 286, 289, 290, 294, 295, 297, 298, 303, 305, 306, 307, 308, 309, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 339, 341, 344, 345, 349, 350, 352, 353, 358, 360, 361, 362, 363, 364, 375, 376, 377, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438], "ic": 426, "id": [172, 232, 433, 437], "ideal": 435, "ident": [186, 235, 237, 281, 336, 427], "identifi": [137, 172, 176, 202, 229, 232, 233, 234, 252, 295, 350, 424, 426, 427, 432, 437], "idna": 437, "ignor": 420, "ignore_extraction_error": [55, 431], "illustr": 431, "imag": [432, 433], "immedi": 426, "impact": [432, 438], "implaus": 426, "implement": [172, 420, 424, 427, 428, 429, 431, 432, 433, 437], "impli": [424, 427, 432], "implicit": 432, "implicitli": 424, "import": [229, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "improv": [60, 424, 426, 427, 431, 432, 436, 437, 438], "includ": [26, 74, 112, 131, 140, 150, 168, 172, 279, 322, 328, 424, 426, 427, 428, 429, 432, 433, 434, 436, 437, 438], "include_exampl": 55, "incomplet": [26, 74, 424, 426, 436, 437, 438], "incorpor": 432, "incorrect": [427, 429, 432], "incorrectli": 427, "increas": [424, 425, 427, 432, 438], "increment": [181, 214, 264, 306, 361, 427], "ind": 437, "inde": 424, "index": [141, 148, 151, 176, 181, 202, 214, 232, 233, 252, 264, 295, 306, 350, 361, 424, 426, 434, 437], "indexerror": [151, 426], "indic": [184, 235, 279, 334, 420, 424, 426, 427, 431, 432, 433, 434, 436, 437], "individu": 433, "induc": 432, "infer": [26, 74, 424, 426, 436, 437, 438], "infix": 427, "influenc": [426, 432], "info": [184, 235, 279, 334, 427, 433, 438], "inform": [184, 203, 235, 253, 279, 296, 334, 351, 426, 427, 432, 438], "inher": 433, "inherit": 433, "ini": 432, "init": [424, 427], "init_feedback": 435, "init_scor": 424, "init_with_one_hit": 424, "initi": [172, 184, 196, 216, 229, 233, 235, 246, 266, 279, 290, 308, 321, 327, 334, 345, 363, 425, 427, 432, 436], "input": [13, 26, 61, 67, 74, 81, 90, 114, 119, 184, 233, 235, 376, 424, 426, 427, 429, 431, 432, 434, 436, 437, 438], "insid": [114, 408, 426, 431, 432, 434], "inspir": 429, "instal": [426, 428, 431, 432, 434, 435, 436, 437, 438], "instanc": [15, 16, 63, 64, 79, 172, 184, 194, 229, 235, 244, 279, 288, 334, 343, 419, 424, 426, 427, 434, 436, 437, 438], "instanti": [420, 432], "instead": [424, 431, 434, 435], "instruct": [13, 26, 31, 61, 67, 74, 81, 90, 424, 426, 427, 429, 431, 432, 436, 437, 438], "instruct1": 429, "instruct2": 429, "instrument": 426, "int": [4, 9, 48, 50, 57, 113, 179, 211, 261, 303, 321, 327, 358, 387, 390, 417, 419, 420, 424, 432, 434, 438], "int0": 438, "integ": [145, 147, 420, 431, 437, 438], "integr": 229, "intellig": 431, "intend": [424, 427, 432], "interact": [419, 424, 426, 432, 433], "interest": 433, "interfac": 431, "interg": 438, "intermedi": [26, 74, 424, 426, 436, 437, 438], "intern": [172, 174, 192, 242, 286, 341, 431], "interpret": [432, 438], "interrupt": 431, "intervent": 431, "introduc": 432, "intuit": 429, "invalid": 231, "inventori": 425, "inventory_messag": 425, "investig": 433, "invis": 432, "involv": [424, 426, 427, 429, 431, 432, 433], "io": 426, "iprogress": 426, "ipython": [424, 426, 427, 431, 432], "ipywidget": [424, 426, 427, 431, 432], "is_hit": 424, "is_leaf": 172, "is_root": [172, 234], "is_vert": 424, "isinst": [424, 427, 434], "isn": [424, 426], "issu": [324, 331, 424, 426, 427, 428, 432, 436], "item": [5, 124, 135, 142, 143, 148, 151, 152, 424, 433, 437, 438], "iter": [126, 135, 146, 231, 424, 425, 427, 432, 434, 435, 436, 437], "its": [93, 172, 179, 181, 186, 211, 214, 232, 233, 234, 237, 261, 264, 281, 303, 306, 323, 325, 329, 330, 332, 336, 358, 361, 426, 427, 431, 432, 433, 436], "itself": [172, 426, 430, 431], "j": [424, 432], "jiter": 437, "joblib": 437, "john": 426, "join": [424, 427, 432], "json": [19, 67, 408, 424, 425, 426, 427, 433, 436, 437, 438], "json_object": 425, "json_str": 408, "json_txt": 411, "juan": 429, "judici": [228, 278, 320, 375], "jupyt": 426, "just": [19, 26, 67, 74, 424, 426, 427, 431, 432, 434, 436, 437, 438], "k": [127, 132, 133, 134, 135, 438], "keep": [424, 427, 431], "kei": [123, 132, 133, 135, 196, 199, 216, 232, 233, 235, 246, 249, 266, 290, 293, 308, 345, 348, 363, 385, 396, 399, 403, 408, 420, 422, 424, 425, 426, 427, 431, 432], "kernel": 437, "keyerror": [132, 133, 196, 216, 246, 266, 290, 308, 345, 363, 426], "keyword": [112, 119, 187, 238, 282, 337], "kind": 432, "kitchen": 433, "kitchencabinet": 433, "kk": 438, "know": [431, 432, 433], "known": [424, 432], "kwarg": [4, 7, 8, 10, 22, 27, 34, 38, 39, 42, 43, 48, 55, 56, 58, 70, 75, 81, 98, 101, 102, 106, 107, 119, 123, 137, 138, 141, 157, 158, 160, 161, 164, 165, 172, 184, 185, 187, 198, 229, 235, 236, 238, 248, 279, 280, 282, 292, 321, 327, 334, 335, 337, 347, 382, 387, 394, 395, 397, 401, 405, 417, 419, 420, 424, 426, 431, 435, 437], "kwd": 154, "l": 437, "l1": 438, "l_eval": 437, "label": [322, 324, 328, 331, 437], "lack": [135, 424], "lai": 432, "lambda": 435, "lang": 429, "langchain": 429, "languag": [96, 426, 428, 429, 438], "larg": [428, 430, 438], "larger": [96, 433, 438], "largest": 437, "last": [151, 233, 427, 434, 435, 437], "later": 434, "latest": 427, "layout": 432, "lazi": 422, "lead": [424, 425, 426, 427, 432, 438], "leaf": [177, 205, 255, 297, 352], "learn": [279, 429, 431, 433, 437, 438], "least": [432, 437], "led": [427, 431], "left": [231, 433], "legaci": 420, "legitim": 424, "len": [424, 425, 426, 431, 432, 433, 434, 435, 437, 438], "len_": 434, "length": [141, 210, 233, 260, 302, 357, 428], "less": [180, 213, 263, 305, 360, 425, 431, 432], "let": [424, 427, 431, 432, 433, 435], "level": [26, 74, 172, 175, 180, 196, 200, 201, 213, 229, 246, 250, 251, 263, 279, 290, 294, 305, 345, 349, 360, 424, 426, 436, 437, 438], "leverag": [426, 428, 431, 432], "li": [424, 426, 427], "lib": [426, 427, 437], "librari": [424, 425, 426, 427, 429, 431, 432], "lightgrai": [323, 330], "like": [112, 114, 128, 129, 324, 331, 422, 424, 426, 427, 429, 431, 432, 433, 434, 438], "likelihood": 432, "limit": [324, 331, 432, 438], "lindholm": 426, "line": [431, 432, 438], "linear": 437, "linear_model": 438, "link": 431, "list": [34, 38, 48, 50, 55, 101, 111, 120, 130, 139, 141, 149, 151, 162, 167, 172, 173, 181, 182, 184, 189, 204, 214, 217, 229, 231, 232, 233, 234, 235, 240, 254, 264, 267, 284, 306, 309, 339, 361, 364, 383, 387, 390, 413, 419, 422, 424, 426, 427, 431, 432, 433, 434, 435, 437], "list0": [424, 432, 437], "list1": [431, 437], "list2": 437, "list3": 437, "live": 433, "livingroom": 433, "ll": [425, 426], "llf": 427, "llfbench": 427, "llm": [9, 55, 57, 101, 103, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438], "llm_op": 96, "llmcallabl": [426, 433], "load": [425, 427, 433], "load_dataset": 426, "local": [426, 427], "locat": [427, 432, 433], "log": [55, 101, 424, 426, 438], "logger": [116, 427], "logic": [195, 215, 245, 265, 289, 307, 344, 362, 424, 426, 427, 432, 434], "logisticregress": 438, "long": [113, 417], "look": [424, 426, 431, 432, 437], "lookup": 229, "loop": [424, 425, 432], "loss": [228, 278, 320, 375, 431, 435, 437], "low": 427, "lower": [425, 426, 433, 438], "lst": [431, 437], "lst0": 437, "lst1": [431, 437], "lst2": 437, "lst3": 437, "lt": 172, "m": 433, "machin": [279, 431, 438], "made": [424, 426, 427, 432], "magic": [210, 260, 302, 357, 434], "magnitud": 438, "magnitutd": 432, "mai": [26, 74, 114, 417, 424, 426, 427, 430, 431, 433, 436, 437, 438], "main": [96, 419, 424, 432], "maintain": [229, 279, 432], "major": 432, "make": [420, 424, 427, 429, 430, 431, 432, 433, 435, 436, 438], "manag": [229, 417, 427, 431, 432], "maneuv": 427, "mani": [431, 432, 433], "manipul": [173, 189, 240, 284, 339, 427, 432], "manual": [431, 434, 435], "map": [424, 429, 432], "map0": 424, "map1": 424, "map2": 432, "map3": 432, "map4": 432, "map6": 432, "marcelo": 426, "mark": [279, 408, 432, 434], "mask": [10, 20, 58, 68], "master": 432, "match": [376, 426, 431, 433, 435, 437], "math": 435, "matplotlib": [427, 437], "maveriq": 426, "max": 431, "max_index": 431, "max_token": [9, 55, 57, 101, 425, 426], "maxim": [425, 432, 438], "maximum": [179, 186, 211, 237, 261, 281, 303, 321, 327, 336, 358, 427, 431, 437], "maxsplit": [221, 271, 313, 368], "me": 433, "mean": [26, 67, 74, 424, 426, 427, 432, 436, 437, 438], "meaning": 424, "meant": [172, 426, 427, 432], "mechan": [279, 429, 432, 433], "meet": [427, 433], "memori": [417, 433], "memory_s": [55, 424, 425, 427, 436], "mention": [427, 432], "mere": 426, "messag": [116, 158, 184, 376, 420, 425, 426, 427, 432, 433], "message_prompt": 425, "messagenod": [92, 94, 195, 210, 215, 289, 302, 307, 344, 357, 362, 385, 389, 396, 399, 403, 426, 431, 436], "met": 427, "meta": 433, "metaworld": 427, "method": [4, 7, 34, 38, 48, 55, 81, 98, 101, 123, 135, 137, 138, 141, 155, 160, 161, 164, 172, 175, 180, 184, 200, 210, 213, 229, 235, 250, 260, 263, 279, 294, 302, 305, 321, 322, 327, 328, 334, 349, 357, 360, 382, 387, 394, 395, 397, 401, 405, 409, 417, 419, 426, 427, 431, 432, 434, 436], "method_nam": 434, "metric": 431, "microsoft": [426, 427, 430], "microwav": 433, "might": [26, 74, 424, 426, 427, 428, 431, 432, 433, 436, 437, 438], "min": 431, "min_index": 431, "mind": 431, "miniconda3": [426, 427, 437], "minim": [417, 429, 430, 436, 437], "minimum": [427, 431, 437], "minor": 433, "minu": 438, "miscount": 432, "mishandl": 432, "misjudg": 427, "misrepres": 432, "misrepresent": 432, "miss": [424, 432, 433], "mistak": 427, "misunderstand": 427, "mnist_784": 438, "mode": 430, "model": [96, 130, 131, 139, 140, 149, 150, 166, 167, 168, 169, 417, 419, 420, 422, 425, 426, 427, 428, 429, 432, 433], "model_select": 438, "modelcli": 420, "modelclientresponseprotocol": 420, "modelwrapp": 426, "modif": [427, 432, 433], "modifi": [233, 426, 427, 432, 436], "modul": [95, 424, 426], "momentum": 112, "monitor": 427, "mooki": 426, "more": [420, 424, 426, 427, 428, 431, 432, 433, 437, 438], "moreov": [427, 432], "most": [424, 427, 429, 432, 438], "motion": 427, "move": [424, 427, 432], "movement": [427, 433], "much": 432, "multi": 427, "multipl": [172, 383, 425, 427, 431, 432, 433, 437], "multipli": 438, "multiply0": 438, "must": [425, 427, 432, 433, 436, 438], "my": 433, "my_api_kei": [424, 426, 427, 431, 432], "my_fun": 438, "n": [15, 16, 18, 19, 26, 31, 63, 64, 66, 67, 74, 79, 90, 96, 97, 408, 410, 424, 425, 426, 427, 432, 434, 436, 437, 438], "n1": 438, "n2": 438, "n3": 438, "n_eval_episod": 424, "n_optimization_step": 427, "n_words_offset": 113, "nafter": 438, "name": [19, 67, 93, 172, 176, 183, 184, 202, 219, 229, 232, 233, 235, 252, 269, 279, 295, 311, 324, 331, 334, 350, 366, 377, 408, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "name_scop": 233, "nameerror": [427, 432], "nanswer": 426, "natur": [426, 431, 433], "navig": [427, 433], "nbelow": 31, "nd": 427, "nearbi": 424, "nearest": 433, "nearing": 427, "necessari": [231, 424, 425, 426, 427, 432, 433], "necessarili": 424, "need": [19, 26, 60, 67, 74, 394, 420, 424, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "neg": [427, 431, 438], "negat": [175, 180, 200, 213, 250, 263, 294, 305, 349, 360, 438], "negoti": 433, "neighbor": 432, "net": [426, 437], "netflix": 437, "network": 432, "neural": 432, "never": [181, 214, 229, 233, 264, 306, 361, 417, 419], "nevertheless": 424, "new": [12, 19, 22, 30, 42, 45, 67, 70, 78, 106, 109, 181, 214, 220, 231, 264, 270, 306, 312, 361, 367, 377, 424, 426, 434, 435, 436, 437, 438], "new_map": [424, 432], "new_test_input": 431, "new_test_output": 431, "next": [424, 425, 426, 427, 435, 436], "next_agent_obs_desc": 433, "next_ob": 427, "nformat": 19, "nfunction": 19, "ngiven": [427, 438], "nhere": [15, 16, 63, 64, 96], "nhistori": 438, "nif": [19, 26, 67, 74], "nin": [26, 67, 74], "nine": 438, "niter": 436, "nmost": 438, "nnow": 79, "no_improv": 412, "no_trace_graph": [412, 432], "node": [8, 39, 56, 92, 102, 114, 119, 120, 137, 138, 162, 382, 383, 384, 385, 387, 389, 390, 396, 398, 399, 403, 407, 413, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 438], "node_a": 235, "node_b": 235, "node_dict": [24, 25, 72, 73], "node_feedback": 93, "node_getattr": 434, "node_i": 434, "node_to_function_feedback": 438, "node_x": 434, "nodecontain": [120, 434], "noisi": 437, "non": [131, 140, 150, 168, 186, 237, 279, 281, 336, 427, 438], "non_nod": 434, "non_trace_fun": 434, "none": [10, 20, 38, 48, 55, 58, 68, 81, 98, 100, 101, 116, 124, 126, 127, 135, 143, 172, 184, 186, 221, 222, 235, 237, 271, 272, 279, 281, 313, 314, 334, 336, 368, 369, 377, 387, 417, 419, 420, 424, 425, 426, 427, 431, 432, 433, 438], "nonetyp": [424, 432], "normal": [432, 434, 437], "note": [172, 173, 174, 175, 176, 179, 180, 181, 182, 186, 189, 192, 195, 196, 200, 202, 210, 211, 213, 214, 215, 216, 217, 228, 229, 231, 232, 233, 237, 240, 242, 245, 246, 250, 252, 260, 261, 263, 264, 265, 266, 267, 278, 279, 281, 284, 286, 289, 290, 294, 295, 302, 303, 305, 306, 307, 308, 309, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 336, 339, 341, 344, 345, 349, 350, 357, 358, 360, 361, 362, 363, 364, 375, 376, 377, 420, 422, 425, 426, 431, 432, 433, 436, 437], "notebook": [424, 425, 426, 431], "notebook_tqdm": 426, "noth": [427, 433], "notic": [431, 438], "noutput_format": [19, 67], "noveral": 425, "now": [424, 425, 426, 427, 431, 432, 433, 436, 437, 438], "np": [424, 427, 437, 438], "nparent": 434, "npleas": 426, "nprint": 410, "nquestion": 426, "nregular": 438, "nreturn": 427, "nscore": 438, "nsparsiti": 438, "nspecif": [26, 74], "nsuccess": 436, "ntest": 426, "nthe": [19, 426, 427], "nthi": 96, "null": 424, "num": 424, "num_each_typ": 424, "number": [113, 145, 172, 186, 237, 281, 321, 327, 336, 417, 419, 426, 428, 431, 432, 433, 436, 438], "numer": [427, 437], "numpi": [424, 427, 437, 438], "nwhen": 19, "nyou": [26, 74], "nyour": [15, 18, 63, 66], "o": [424, 425, 426, 427, 431, 432], "oai_config_list": [422, 424, 425, 426, 427, 431, 432, 438], "oai_config_list_sampl": 438, "ob": [424, 427, 432, 433], "obei": 377, "object": [14, 21, 35, 40, 41, 55, 62, 69, 101, 104, 105, 120, 128, 129, 136, 162, 172, 174, 186, 190, 192, 229, 233, 237, 241, 242, 281, 285, 286, 336, 340, 341, 377, 384, 398, 402, 420, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 438], "observ": [424, 427, 432, 433], "obsrvaiton": 427, "obtain": [426, 427, 432], "occur": [426, 427, 432], "occurr": [145, 152], "often": [424, 427, 429, 437], "oh": 431, "old": [220, 270, 312, 367, 438], "old_vari": 438, "on_button_click": [424, 426, 427, 431, 432], "on_click": [424, 426, 427, 431, 432], "onc": [427, 432, 438], "one": [179, 211, 261, 303, 358, 425, 426, 431, 432, 433, 434, 435, 437, 438], "onli": [67, 186, 233, 237, 281, 336, 420, 424, 425, 426, 427, 430, 432, 433, 436, 437, 438], "onlin": [424, 437], "onto": 433, "op": [119, 434, 435], "open": [427, 432], "openai": [420, 425, 431, 432, 437], "openai_api_kei": [424, 426, 427, 431, 432], "openaiwrapp": [419, 426], "oper": [119, 176, 182, 186, 195, 202, 204, 215, 217, 235, 237, 245, 252, 254, 265, 267, 279, 281, 289, 295, 307, 309, 336, 344, 350, 362, 364, 376, 424, 426, 427, 428, 429, 431, 435, 436, 437, 438], "operator_nam": [235, 386, 400, 404], "oppon": 432, "opportun": 424, "oppos": 426, "opro": 428, "opt": [424, 426, 427, 430, 431, 432, 434, 435, 436, 437, 438], "optim": [130, 139, 149, 167, 170, 408, 411, 412, 419, 424, 428, 429, 430, 434, 436], "optimize_polici": 427, "optimizer1": [428, 433], "optimizer2": [428, 433], "optimizer3": 428, "optimizer_kwarg": 112, "optimz": 435, "optimzi": 435, "option": [98, 112, 147, 172, 184, 186, 235, 237, 279, 281, 321, 327, 334, 336, 377, 424, 432], "opto": [424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438], "optoprim": [424, 425, 426, 427, 428, 429, 431, 432, 433, 436, 437, 438], "order": [186, 237, 279, 281, 336, 431, 432, 434, 435, 437, 438], "organ": 229, "organiz": 433, "orient": 427, "origin": [172, 426, 427, 432, 434, 436], "other": [13, 26, 48, 61, 67, 74, 81, 90, 93, 146, 175, 180, 195, 200, 213, 215, 245, 250, 263, 265, 289, 294, 305, 307, 322, 325, 328, 332, 344, 349, 360, 362, 408, 420, 424, 426, 427, 429, 431, 432, 433, 436, 437, 438], "otherwis": [132, 172, 177, 178, 186, 195, 205, 206, 215, 237, 245, 255, 256, 265, 281, 289, 297, 298, 307, 326, 336, 344, 352, 353, 362, 376, 377, 430, 434], "our": [425, 426, 428, 429, 431, 432, 433], "out": [151, 228, 278, 320, 375, 426, 427, 429, 431, 432, 433, 438], "outcom": [424, 427, 432], "outlin": 427, "output": [13, 19, 26, 48, 60, 61, 67, 74, 81, 90, 93, 96, 119, 235, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "output_format": [424, 426, 436, 437, 438], "outsid": [408, 432], "over": [231, 424, 425, 427, 429, 431, 432, 434], "overal": [425, 427], "overfit": 438, "overload": [210, 260, 302, 357, 434, 435], "overrid": [172, 419, 420, 435], "overridden": 420, "own": [422, 432, 433], "p": [426, 432, 434, 435, 438], "p1_inventori": 425, "p1_name": 425, "p1_prompt": 425, "p1_valu": 425, "p2_inventori": 425, "p2_name": 425, "p2_prompt": 425, "p2_valu": 425, "packag": [424, 425, 426, 427, 430, 433, 437], "page": 433, "pair": [133, 431, 437], "panda": 438, "paper": [426, 428], "param": [113, 435, 436], "paramet": [22, 27, 29, 30, 34, 36, 38, 42, 43, 44, 45, 55, 70, 75, 77, 78, 101, 106, 107, 108, 109, 112, 114, 119, 120, 131, 138, 140, 150, 166, 168, 169, 170, 172, 175, 180, 184, 186, 187, 195, 196, 199, 200, 213, 215, 216, 232, 233, 235, 237, 238, 245, 246, 249, 250, 263, 265, 266, 279, 281, 282, 289, 290, 293, 294, 305, 307, 308, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 344, 345, 348, 349, 360, 362, 363, 376, 377, 408, 417, 419, 420, 424, 426, 427, 428, 429, 431, 432, 435, 436, 437], "parametercontain": [131, 150, 164, 168], "parameternod": [11, 30, 34, 38, 45, 55, 59, 78, 101, 109, 114, 131, 140, 150, 168, 323, 325, 329, 330, 332, 377, 426, 431, 434, 438], "parameters_dict": [130, 139, 149, 167], "parent": [172, 178, 179, 186, 206, 211, 228, 237, 256, 261, 278, 281, 298, 303, 320, 336, 353, 358, 375, 385, 396, 399, 403, 434, 435, 436], "parent_feedback": [186, 237, 281, 336], "parenthes": 432, "parm": 434, "pars": [410, 425, 426, 427], "parse_ob": 427, "parsed_answ": 426, "part": [26, 74, 96, 176, 182, 202, 217, 252, 267, 295, 309, 350, 364, 424, 426, 427, 432, 435, 436, 437, 438], "particular": 427, "particularli": 427, "pass": [186, 187, 237, 238, 281, 282, 336, 337, 419, 424, 426, 431, 437, 438], "pass_through": 434, "passive_env_check": 427, "password": [424, 426, 427, 431, 432], "past": [112, 427, 431, 432], "path": [382, 427, 432], "pattern": [427, 437], "penalti": 438, "per": [424, 425, 427, 431, 432], "perceiv": 432, "percentag": 438, "perform": [186, 237, 281, 336, 424, 426, 427, 428, 431, 432, 433, 434, 435, 437, 438], "perhap": 424, "period": 426, "permut": 438, "perspect": [431, 433], "pg": 435, "phase": [427, 429], "philosophi": [431, 432], "phrase": 426, "pick": 427, "pickl": 170, "piec": 424, "pip": [424, 426, 427, 428, 430, 431, 432, 434, 435, 436, 437, 438], "pkl": 431, "place": [153, 424, 427, 432], "place_ship": 424, "placehold": [424, 426, 427, 431, 432], "placement": 424, "plai": [425, 432], "plan": [424, 432, 433], "plate": 433, "plausibl": 426, "player": [424, 425, 426], "player_prompt": 425, "pleas": [408, 422, 426, 433, 438], "plot": [186, 237, 281, 336, 427, 437], "plt": [427, 437], "plu": [179, 211, 261, 303, 358], "point": [427, 432, 438], "polici": [427, 432], "poor": 438, "pop": 437, "popular": 429, "portion": [176, 202, 252, 295, 350], "pose": [426, 427], "posit": [119, 424, 427, 431, 432, 438], "possibl": [427, 432, 433], "possibli": [426, 427, 432], "post": [426, 429], "post1": 437, "potenti": [96, 196, 216, 246, 266, 290, 308, 345, 363, 424, 432], "power": 429, "ppo": 432, "pre": [427, 429], "precis": [426, 427], "pred": 426, "predefin": [427, 432, 437], "predict": [426, 431, 437], "predictor": 437, "prefix": [233, 420, 427], "prepar": [426, 433], "preprocess": 438, "presenc": 432, "present": [135, 147, 152, 174, 192, 242, 286, 341, 424, 432, 433, 438], "prevent": [424, 427, 432, 436], "preview": [425, 427], "previou": [231, 427, 432, 433], "previous": 231, "previous_messag": 425, "primari": 424, "primarili": 432, "primit": [429, 431, 432], "print": [186, 237, 281, 321, 324, 327, 331, 336, 410, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "print_limit": [186, 237, 281, 321, 327, 336, 392, 431, 432, 434], "print_nod": 434, "prior": [427, 433], "priorit": 424, "prioriti": [186, 237, 281, 336], "privat": 425, "probabl": 432, "problem": [15, 16, 26, 63, 64, 67, 74, 79, 113, 324, 331, 424, 426, 427, 431, 432, 435, 436, 437, 438], "problem_inst": 79, "problemat": 424, "proce": 433, "procedur": [431, 432, 433, 438], "process": [228, 278, 320, 375, 424, 425, 426, 429], "produc": [424, 425, 426, 427, 428, 429, 432, 433], "product": 438, "program": [426, 429, 430, 432], "progress": [424, 427, 433], "project": 433, "prompt": [9, 10, 57, 58, 103, 111, 112, 420, 424, 426, 429, 436, 437, 438], "prompt_symbol": 55, "prompt_templ": 426, "propag": [8, 14, 38, 39, 40, 55, 56, 62, 101, 102, 104, 182, 186, 217, 228, 237, 267, 278, 279, 281, 309, 320, 336, 364, 375, 438], "propagate_funct": [386, 400, 404], "propagated_grad": 435, "propagt": 435, "proper": [427, 432], "properli": [196, 216, 233, 246, 266, 290, 308, 345, 363, 408, 424, 427, 432], "properti": [21, 29, 35, 41, 44, 69, 77, 105, 108, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 189, 192, 193, 196, 197, 201, 202, 203, 204, 205, 206, 211, 214, 216, 217, 219, 225, 234, 240, 242, 243, 246, 247, 251, 252, 253, 254, 255, 256, 261, 264, 266, 267, 269, 275, 284, 286, 287, 290, 291, 295, 296, 297, 298, 303, 306, 308, 309, 311, 317, 322, 328, 339, 341, 342, 345, 346, 350, 351, 352, 353, 358, 361, 363, 364, 366, 372, 418, 421], "propos": [425, 427, 428, 431, 435], "proposed_end": 425, "proposed_trad": 425, "provid": [128, 129, 136, 172, 186, 229, 237, 281, 321, 327, 336, 377, 420, 422, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 438], "proxim": [424, 427], "puck": 427, "puck_path": 427, "puck_po": 427, "pud": 433, "pure": [429, 437], "purpos": 433, "purppos": 435, "put": [427, 433], "py": [96, 408, 411, 426, 427], "py_nam": 172, "pydant": 437, "pypi": 437, "pyplot": [427, 437], "python": [19, 26, 67, 74, 123, 141, 183, 219, 269, 311, 324, 331, 366, 424, 425, 426, 427, 428, 429, 430, 432, 433, 436, 437, 438], "python3": [426, 427, 437], "pytorch": [429, 431, 434], "quantiti": 425, "question": [26, 74, 424, 426, 436, 437, 438], "question0": 426, "question1": 426, "question2": 426, "question3": 426, "question4": 426, "question5": 426, "question6": 426, "question7": 426, "question8": 426, "queue": [186, 237, 281, 336], "quot": [408, 426], "quotat": 408, "r": [424, 426], "r1": [431, 432], "r10": 432, "r2": 432, "r3": 432, "r4": 432, "r5": 432, "r6": 432, "r7": 432, "r8": 432, "r9": 432, "rais": [132, 133, 147, 151, 152, 174, 186, 192, 237, 242, 281, 286, 336, 341, 376, 420, 425, 426, 427, 436], "ran": 428, "randint": [424, 437], "random": [420, 424, 427, 433, 437], "random_st": 438, "randomli": 433, "rang": [151, 424, 425, 426, 427, 431, 432, 433, 435, 436, 437, 438], "rather": [424, 426, 432, 434], "rational": 431, "raw": [384, 398, 402], "re": [26, 74, 424, 426, 433, 436, 437, 438], "reach": 427, "react": [432, 433], "reactiv": 432, "read": 433, "readi": 231, "readthedoc": 426, "realiz": 433, "reanalyz": 432, "reason": [67, 424, 426, 427, 431, 432, 433, 436, 437, 438], "receiv": [424, 426, 427, 432, 435, 437], "recent": [427, 438], "recent_hit": 432, "recogn": [424, 426], "recognit": 432, "recommend": [147, 427], "reconsid": 432, "record": [429, 432], "recov": 435, "recurs": [120, 384, 398, 402, 434], "reduc": [97, 111, 113, 429, 433], "refer": [172, 231, 235, 432, 435], "referenc": 432, "refin": [426, 427], "reflect": 427, "reformul": 426, "refresh": [417, 419], "regard": 427, "regex": 437, "regist": [172, 181, 214, 229, 264, 306, 361, 420], "registri": 229, "regress": 437, "regular": [376, 438], "regularization_paramet": 438, "reinforc": 427, "reiniti": 231, "reject": 425, "rel": 427, "relat": [427, 434], "relev": 426, "reli": [424, 426, 427, 430], "reliabl": 426, "remain": [427, 431, 437], "rememb": [67, 424, 426, 436, 437, 438], "remind": 427, "remov": [114, 124, 132, 133, 143, 151, 172, 181, 183, 214, 219, 229, 231, 233, 264, 269, 306, 311, 361, 366, 427, 431, 434, 437, 438], "renam": 438, "render_html": 432, "render_opt_step": [431, 432], "repeat": [113, 427, 433], "repeatedli": [427, 438], "replac": [408, 427, 433, 438], "replic": 426, "repo": 428, "repopul": 231, "report": 428, "repositori": [430, 438], "repres": [172, 235, 279, 325, 332, 424, 426, 427, 428, 429, 431, 432, 433], "represent": [172, 408, 431, 438], "request": [199, 232, 249, 293, 348, 426, 427, 437], "requir": [186, 237, 281, 336, 417, 426, 427, 428, 430, 432, 433, 437, 438], "requires_grad": 435, "resembl": 432, "reset": [32, 37, 46, 80, 110, 231, 427, 433, 435], "reset_freq": [417, 419], "reshap": 438, "resolv": [424, 436], "resourc": 425, "respect": [425, 432], "respond": [426, 427, 433], "respons": [9, 15, 17, 18, 34, 57, 63, 65, 66, 103, 420, 424, 425, 426, 427, 429, 433, 436, 437, 438], "response_desc": 96, "response_format": 425, "response_json": 425, "rest": 120, "restart": 437, "restrict": 424, "restructur": 432, "result": [26, 67, 74, 97, 186, 187, 195, 215, 237, 238, 245, 265, 281, 282, 289, 307, 336, 337, 344, 362, 424, 426, 427, 428, 431, 432, 434, 436, 437, 438], "result_valu": 425, "results_gradi": 97, "retain": [186, 237, 281, 336], "retain_graph": [186, 237, 281, 336, 431], "retri": [424, 432], "retriev": [174, 192, 229, 232, 242, 286, 341, 432], "return": [9, 14, 21, 35, 40, 41, 57, 62, 69, 103, 104, 105, 112, 113, 114, 130, 131, 132, 133, 139, 140, 145, 147, 149, 150, 151, 162, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 192, 194, 195, 199, 200, 201, 202, 205, 206, 210, 211, 213, 214, 215, 217, 219, 232, 234, 237, 238, 240, 241, 242, 244, 245, 249, 250, 251, 252, 255, 256, 260, 261, 263, 264, 265, 267, 269, 281, 282, 284, 285, 286, 288, 289, 293, 294, 295, 297, 298, 302, 303, 305, 306, 307, 309, 311, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 343, 344, 348, 349, 350, 352, 353, 357, 358, 360, 361, 362, 364, 366, 376, 377, 385, 389, 396, 399, 403, 408, 417, 419, 420, 422, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "return_feedback": 438, "return_x_i": 438, "reveal": [426, 432, 433], "revers": [186, 237, 281, 336, 435], "reverse_plot": [186, 237, 281, 336, 392], "review": [427, 432], "revis": 432, "revolv": 424, "reward": [424, 427, 432, 433], "rewrit": 432, "right": [11, 59, 233, 426, 427, 431, 433], "rl": [427, 432, 433], "rlhf": 432, "robot": 427, "role": [425, 426], "room": 433, "root": [48, 93, 178, 179, 186, 206, 211, 229, 237, 256, 261, 281, 298, 303, 336, 353, 358, 438], "rotat": 427, "round": [424, 433], "routin": 435, "row": [424, 432], "rule": [425, 432, 435], "run": [231, 417, 425, 426, 427, 430, 431, 432, 433, 435, 438], "runtim": 431, "runtimeerror": 420, "saga": 438, "sai": 427, "said": 425, "sale": 429, "same": [172, 181, 214, 233, 264, 306, 361, 425, 427, 428, 431, 433, 434, 436], "sampl": [424, 437], "satisf": 436, "satisfi": [19, 67, 279, 424, 426, 427, 432, 436, 437, 438], "save": [113, 422, 424, 426, 427, 432, 438], "save_env_vari": [424, 426, 427, 431, 432], "sawyer": 427, "scale": [425, 438], "scaler": 438, "scenario": [424, 426], "scikit": [437, 438], "scipi": 437, "scope": [233, 432], "score": [424, 425, 426, 427, 438], "scorer": 438, "script": [426, 430, 433], "scroll": 432, "seamlessli": [426, 428], "search": [97, 376, 427, 433], "second": [176, 202, 252, 295, 350, 417, 419, 424, 426, 429, 435], "secret": 434, "section": [427, 431, 433], "see": [26, 74, 79, 113, 424, 426, 431, 432, 433, 435, 436, 437, 438], "seed": [425, 427, 437], "seek": [426, 432], "seem": [424, 426, 427, 431, 432], "seemingli": 432, "seen": 382, "segment": 426, "select": [424, 425, 432, 437], "select_coordin": [424, 432], "select_coordinate0": 432, "self": [175, 180, 200, 213, 250, 263, 294, 305, 349, 360, 424, 426, 427, 429, 432, 433, 434, 435], "self0": [424, 426], "self1": [424, 426], "self10": 426, "self11": 426, "self12": 426, "self2": 426, "self3": 426, "self4": 426, "self5": 426, "self6": 426, "self7": 426, "self8": 426, "self9": 426, "sell_resourc": 425, "send": [431, 433, 434], "send_messag": 433, "sent": [427, 438], "sentenc": [420, 426], "sep": [221, 271, 313, 368], "separ": 172, "seq": [208, 258, 300, 355], "sequenc": [142, 146, 426, 427, 429, 435], "sequenti": [427, 433], "seri": [427, 433], "serv": [172, 433], "set": [120, 128, 129, 134, 162, 172, 181, 201, 214, 229, 233, 251, 264, 306, 321, 322, 326, 327, 328, 333, 361, 424, 425, 426, 427, 431, 432, 434, 436, 438], "setter": 434, "setup": 432, "seven": 438, "sever": [172, 433], "shape": [322, 325, 328, 332, 438], "share": 433, "ship": [424, 432], "ship_symbol": 424, "short": [113, 431], "shot": [424, 429, 432], "shots_overlay_board": 424, "should": [19, 26, 67, 74, 228, 232, 233, 235, 278, 279, 320, 375, 377, 417, 419, 424, 426, 427, 431, 432, 433, 434, 436, 437, 438], "show": [113, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "show_ship": 432, "shown": 432, "shut": 427, "side": 432, "signal": [431, 432], "signatur": [19, 67, 424, 426, 436, 437, 438], "signifi": 427, "signific": 424, "significantli": 424, "similar": [431, 433, 438], "simpel": 435, "simpl": [191, 426, 431, 432, 435, 437, 438], "simple_visu": [186, 237, 281, 336, 392], "simpli": [431, 432, 436], "simplic": 437, "simplifi": [186, 237, 281, 336, 431, 432], "simul": [427, 432, 433, 438], "sinc": [426, 427, 432, 433, 434, 437], "singl": 437, "site": [426, 427, 437], "situat": [424, 432, 433], "six": 438, "size": [4, 424, 432], "skate": 426, "skip": [186, 237, 281, 336], "sklearn": 438, "slate": 231, "slow": 428, "slower": 428, "small": [426, 437, 438], "smallest": 437, "sniffio": 437, "snippet": 432, "so": [279, 425, 426, 427, 429, 431, 432, 435, 437], "soccer": 426, "soi": 429, "solid": [326, 333, 427], "solut": [16, 64, 113, 431], "solv": [26, 74, 424, 426, 427, 433, 436, 437, 438], "solver": 438, "some": [16, 31, 64, 133, 431, 432, 433], "sometim": [113, 427, 437], "somewhat": 427, "sonnet": 422, "soon": 433, "sophist": 424, "sort": [431, 435, 437], "sorted_lst": 431, "sota": 426, "sourc": [4, 5, 7, 10, 26, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 55, 57, 58, 59, 62, 65, 68, 71, 72, 73, 74, 76, 81, 92, 93, 94, 98, 101, 103, 111, 112, 113, 114, 116, 119, 120, 123, 131, 137, 138, 139, 140, 141, 150, 155, 157, 158, 160, 161, 162, 164, 165, 166, 169, 170, 172, 175, 180, 184, 191, 229, 231, 232, 233, 235, 279, 280, 281, 282, 283, 285, 288, 289, 292, 293, 299, 300, 301, 302, 304, 307, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 376, 377, 379, 382, 383, 384, 387, 388, 389, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 417, 419, 420, 422, 424, 426, 429, 436, 437, 438], "space": 427, "sparsiti": 438, "special": [429, 432, 436], "specif": [172, 228, 278, 320, 375, 376, 408, 424, 426, 427, 429, 431, 432, 436, 437, 438], "specifi": [132, 187, 199, 238, 249, 282, 293, 337, 348, 422, 424, 426, 427, 432, 433], "speed": 428, "speical": 438, "split": [176, 202, 233, 252, 295, 350, 426, 427], "sport": 426, "sports_understand": 426, "spot": 424, "squar": [114, 376, 429, 432, 435, 437], "stabl": 426, "standard": [321, 426], "standardscal": 438, "start": [147, 424, 425, 426, 427, 435, 437], "state": [231, 424, 425, 427, 432, 433, 436, 438], "statement": [195, 215, 245, 265, 289, 307, 344, 362, 426, 427, 431, 434], "static": [24, 25, 72, 73], "statu": 427, "std": 424, "stem": 432, "step": [424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "step93": 427, "step94": 427, "step_idx": 412, "step_info": 433, "stepsiz": 435, "sticki": 433, "still": [431, 433], "stockpil": 425, "stone": 425, "stop": [147, 433], "storag": 430, "store": [172, 174, 192, 225, 229, 231, 242, 275, 279, 286, 317, 341, 372, 424, 426, 427, 431, 432, 433], "stove": 433, "str": [9, 11, 17, 23, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 65, 71, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 98, 99, 100, 101, 103, 112, 113, 114, 158, 172, 176, 181, 183, 184, 187, 202, 204, 214, 219, 232, 235, 238, 252, 254, 264, 269, 279, 282, 295, 306, 311, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 337, 350, 361, 366, 376, 377, 408, 424, 425, 426, 427, 431, 432, 434, 436, 437], "str0": 426, "str_rep": 424, "straightforward": [431, 432], "strang": [431, 437], "strange_sort_list": [428, 431, 437], "strateg": [424, 432], "strategi": [424, 427, 432, 433], "streak": 432, "string": [114, 172, 176, 184, 202, 232, 235, 252, 279, 295, 324, 326, 331, 333, 334, 350, 376, 377, 408, 420, 424, 426, 427, 428, 431, 434, 437], "stringent": 432, "strip": [424, 426, 427, 431, 432], "structur": [172, 173, 182, 189, 217, 240, 267, 279, 284, 309, 339, 364, 408, 424, 426, 438], "style": [191, 321, 322, 326, 327, 328, 333, 432, 433], "subclass": [172, 419, 434], "subgraph": 389, "subject": 426, "submarin": [424, 432], "submit": [424, 426, 427, 431, 432], "submit_button": [424, 426, 427, 431, 432], "suboptim": 427, "subscript": [424, 432], "subsequ": [425, 426, 427, 432], "substr": 426, "succe": 427, "success": [427, 431, 432, 436, 438], "successfulli": [228, 278, 320, 375, 427], "suffici": 425, "suffix": 427, "suggest": [11, 17, 19, 59, 65, 67, 424, 426, 427, 432, 436, 437, 438], "suggested_value_1": [19, 67, 424, 426, 436, 437, 438], "suggested_value_2": [19, 67, 424, 426, 436, 437, 438], "suitabl": 427, "sum": [97, 424, 426, 427, 432, 433, 435, 437, 438], "summari": [10, 20, 58, 68, 428], "sunk": 424, "super": [426, 433, 435], "support": [147, 279, 394, 419, 428, 431, 435], "suppos": [424, 427, 431], "surround": 432, "swiftli": 433, "switch": 428, "sy": 432, "symbol": [23, 71], "syntax": [19, 67, 424, 426, 432, 436, 437, 438], "syntaxerror": 432, "synthet": 431, "system": [10, 58, 96, 425, 426, 427, 429, 432], "system_prompt": [9, 57, 103, 425, 426, 429], "t": [113, 408, 424, 426, 427, 431, 432, 433], "tabl": [229, 428, 433], "tactic": 432, "tailor": 426, "take": [186, 237, 281, 336, 376, 417, 419, 420, 425, 426, 427, 429, 431, 432, 433, 438], "taken": [427, 431], "talli": 425, "tape": 429, "target": [424, 426, 427, 431, 432, 436, 437], "task": [26, 74, 424, 426, 427, 432, 433, 436, 437, 438], "task_id": 433, "tell": [432, 437], "temperatur": 425, "templat": [420, 426, 434], "ten": 438, "tend": 426, "tensor": 435, "tenth": 438, "termcolor": 437, "termin": [19, 67, 424, 425, 426, 427, 432, 436, 437, 438], "test": [231, 410, 426, 431, 437, 438], "test_accuraci": 426, "test_ground_truth": [431, 437], "test_ground_truth_input": 431, "test_input": [431, 437], "test_output": [431, 437], "test_siz": 438, "text": [11, 23, 59, 71, 113, 114, 410, 420, 424, 426, 427, 428, 431, 432, 433, 437, 438], "textgrad": [408, 411], "textual": [112, 193, 243, 287, 342], "textwrap": 426, "tgd": 112, "than": [175, 180, 200, 213, 233, 250, 263, 294, 305, 349, 360, 424, 425, 426, 428, 432, 434, 436, 438], "thei": [424, 425, 426, 432, 433, 434, 438], "them": [427, 428, 433, 434, 437], "therebi": 432, "therefor": [175, 180, 200, 213, 250, 263, 294, 305, 349, 360, 424, 427, 428, 431, 432, 433, 434, 436, 438], "thi": [16, 64, 113, 135, 170, 172, 173, 174, 175, 176, 180, 181, 182, 184, 186, 189, 192, 200, 202, 210, 213, 214, 217, 231, 232, 233, 235, 237, 240, 242, 250, 252, 260, 263, 264, 267, 279, 281, 284, 286, 294, 295, 302, 305, 306, 309, 334, 336, 339, 341, 349, 350, 357, 360, 361, 364, 408, 417, 419, 420, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438], "thing": [26, 74, 112, 424, 426, 436, 437, 438], "think": [425, 431], "third": 426, "those": [26, 74, 196, 246, 290, 345, 424, 426, 427, 436, 437, 438], "though": [427, 431, 432], "thought": 433, "threadpoolctl": 437, "three": [424, 425, 427, 428, 431, 433, 438], "through": [26, 74, 186, 237, 279, 281, 336, 424, 425, 426, 427, 432, 433, 435, 436, 437, 438], "throughout": 427, "thrown": 436, "thu": [424, 427, 432, 437], "tial": 432, "tiktoken": 437, "till": 431, "time": [181, 214, 264, 306, 361, 426, 427, 428, 433, 437], "titl": 427, "todai": 420, "togeth": [427, 433], "toi": [433, 437], "token": 113, "tol": 438, "too": [427, 431], "tool": [324, 331, 429], "top": 433, "topolog": 435, "torch": 435, "total": [425, 433], "toward": [426, 427, 432, 433], "tqdm": [426, 437], "tqdmwarn": 426, "trace": [38, 114, 419, 424, 425, 428, 430, 433, 434, 436, 437, 438], "trace_fun": 434, "trace_graph": 435, "trace_nod": [174, 192, 242, 286, 341], "traceabl": 434, "tracedenv": 427, "tracegraph": [93, 383], "track": 279, "trade": 425, "train": [426, 431, 433, 438], "train_classifi": 438, "train_sampl": 438, "train_set": 426, "train_siz": 438, "train_test_split": 438, "trainabl": [30, 45, 78, 109, 131, 140, 150, 168, 172, 184, 235, 279, 326, 333, 334, 377, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "traj": 427, "transcript": 425, "transform": [432, 438], "transit": [427, 433], "translat": 427, "transpar": 435, "transport": 427, "travers": [173, 182, 189, 217, 240, 267, 284, 309, 339, 364], "treat": 424, "tri": [427, 431], "trial": 432, "trigger": 436, "trivial": 438, "true": [55, 172, 174, 175, 177, 178, 180, 186, 192, 200, 205, 206, 213, 230, 237, 242, 250, 255, 256, 263, 281, 286, 294, 297, 298, 305, 334, 336, 341, 349, 352, 353, 360, 377, 392, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "true_fun": 437, "true_func": 120, "truncat": [324, 331, 427], "truth": [426, 431], "try": [424, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "tupl": [48, 50, 120, 133, 141, 162, 387, 390, 424, 431, 434], "turn": [425, 432, 435, 438], "tutori": [424, 427, 431, 432, 433, 435], "tweak": 426, "two": [172, 175, 180, 200, 213, 250, 263, 294, 305, 349, 360, 408, 424, 425, 431, 432, 433, 434, 435, 438], "type": [11, 19, 26, 59, 67, 74, 96, 97, 112, 113, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 192, 194, 195, 199, 200, 202, 204, 205, 206, 210, 211, 213, 214, 215, 217, 219, 229, 232, 234, 237, 238, 240, 241, 242, 244, 245, 249, 250, 252, 254, 255, 256, 260, 261, 263, 264, 265, 267, 269, 279, 281, 282, 284, 285, 286, 288, 289, 293, 294, 295, 297, 298, 302, 303, 305, 306, 307, 309, 311, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 339, 340, 341, 343, 344, 348, 349, 350, 352, 353, 357, 358, 360, 361, 362, 364, 366, 376, 377, 408, 424, 425, 426, 427, 436, 437, 438], "typic": [429, 432], "typo": 427, "u": [429, 431], "un": 431, "unabl": 430, "unchang": 427, "uncheck": 433, "unclear": 426, "undefin": 427, "under": [424, 426, 427, 431, 433], "underfit": 438, "underli": [377, 432], "understand": [16, 64, 431, 437], "unexpect": 432, "unexplor": 433, "unfortun": 433, "unhelp": 426, "uniform": 427, "uniformli": 427, "unify_and_match_act": 433, "unintend": [228, 278, 320, 375], "union": [204, 254, 279], "unit": [231, 431], "uniti": 433, "unknown": [424, 432], "unless": 431, "unnecessari": 433, "unpack": 434, "unwrap": 427, "up": [12, 229, 425, 426, 427, 431, 432, 433, 437], "updat": [27, 34, 36, 43, 75, 107, 112, 119, 172, 186, 237, 281, 336, 377, 424, 426, 427, 428, 429, 431, 432, 433, 435, 437], "update_dict": [30, 45, 78, 109], "upon": 427, "urllib3": 437, "us": [21, 26, 35, 41, 48, 67, 69, 74, 96, 105, 113, 130, 139, 149, 167, 172, 175, 176, 180, 182, 186, 195, 200, 202, 213, 215, 217, 228, 229, 233, 235, 237, 245, 250, 252, 263, 265, 267, 278, 281, 289, 294, 295, 305, 307, 309, 320, 321, 323, 324, 325, 327, 329, 330, 331, 332, 336, 344, 349, 350, 360, 362, 364, 375, 376, 387, 394, 408, 417, 419, 420, 424, 426, 428, 429, 430, 433, 435, 436, 437, 438], "usag": [408, 411, 432], "used_nod": [174, 192, 242, 286, 341], "user": [10, 58, 419, 424, 425, 426, 428, 429, 431, 432, 438], "user_fb_for_placing_shot": [424, 432], "user_feedback": [48, 387, 435, 438], "user_instal": 426, "user_nam": 429, "user_prompt": [9, 57, 103, 426], "user_queri": 429, "userwarn": 427, "usual": [426, 429], "util": [426, 427, 431, 432, 434, 438], "v": [132, 133, 135, 427, 432, 435, 438], "v1": 427, "v2": 427, "vagu": [427, 438], "val": 434, "valid": [232, 420, 424, 425, 426, 427, 428, 431, 432, 438], "valu": [19, 26, 60, 67, 74, 112, 113, 123, 126, 132, 133, 142, 145, 147, 148, 152, 172, 184, 195, 196, 210, 215, 216, 232, 235, 245, 246, 260, 265, 266, 279, 289, 290, 302, 307, 308, 334, 344, 345, 357, 362, 363, 385, 396, 399, 403, 408, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438], "value_scal": 425, "valueerror": [147, 152, 376, 436], "vanilla": 435, "vari": [427, 432], "variabl": [12, 13, 19, 26, 31, 60, 61, 67, 74, 81, 90, 93, 112, 113, 233, 424, 425, 426, 427, 429, 431, 432, 435, 436, 437, 438], "variable_1": [19, 67, 424, 426, 436, 437, 438], "variable_2": [19, 67, 424, 426, 436, 437, 438], "variable_desc": 96, "variable_nam": [26, 74, 424, 426, 436, 437, 438], "variou": [182, 217, 267, 309, 364, 422, 427, 432], "ve": [427, 432], "vector": 427, "verb": 426, "verbos": [9, 57, 103, 424, 425, 426, 427, 432, 433, 436, 437, 438], "veri": [113, 428, 431, 433], "verifier_optim": 431, "verifier_pass": 431, "version": [113, 172, 420, 424, 427, 430, 432, 438], "via": [428, 433, 438], "viabl": 424, "video": 433, "view": [128, 129, 136, 433], "virtual": 433, "virtualhomeenv": 433, "visibl": [196, 201, 246, 251, 279, 290, 345], "visual": [186, 237, 281, 321, 322, 324, 327, 328, 331, 336, 425, 431, 435, 438], "visualize_board": 424, "visualize_own_board": 424, "visualize_shot": 424, "vv": 438, "wa": [424, 426, 427, 428, 432, 437], "wai": [321, 425, 432, 434, 435, 436, 437, 438], "walk": [425, 426, 433], "walktoward": 433, "want": [113, 422, 430, 434, 438], "warn": [377, 427], "watch": 431, "watson": 426, "we": [96, 97, 113, 210, 260, 302, 357, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "well": [426, 427, 431], "were": [427, 432, 433], "what": [67, 408, 424, 426, 435, 436, 437, 438], "when": [67, 113, 181, 214, 235, 264, 306, 361, 420, 424, 425, 426, 427, 429, 431, 432, 433, 434, 436, 437, 438], "where": [172, 232, 385, 396, 399, 403, 424, 426, 427, 429, 431, 432, 433, 434, 437], "whether": [112, 172, 184, 235, 279, 334, 377, 420, 426, 427, 428, 431, 432, 433], "which": [26, 74, 164, 172, 176, 202, 229, 252, 295, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 350, 417, 419, 424, 426, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438], "while": [325, 332, 424, 425, 426, 427, 431, 432, 433, 434, 435, 437, 438], "whitespac": 432, "who": [196, 246, 290, 345, 426], "whose": [434, 438], "why": 431, "widget": [424, 426, 427, 431, 432], "width": [328, 424], "wikipedia": 429, "wine": 433, "within": [172, 174, 192, 228, 232, 242, 278, 286, 320, 341, 375, 389, 427, 431, 432, 434, 435], "without": [19, 67, 172, 424, 426, 427, 431, 432, 433, 436, 437, 438], "wolfram": 429, "wonder": 431, "wood": 425, "word": [113, 426], "work": [26, 74, 424, 426, 427, 431, 433, 434, 436, 437, 438], "workflow": [426, 428, 429, 431, 435], "world": [433, 434], "would": [410, 424, 425, 432, 434, 435, 438], "wouldn": 432, "wow": 431, "wrap": [170, 187, 238, 282, 337, 426, 428, 429, 431, 432, 434], "wrapped_dict": 160, "wrapped_list": 161, "wrapper": [419, 427, 432, 436], "write": [19, 67, 424, 426, 428, 429, 431, 432, 435, 436, 437, 438], "written": [426, 429, 438], "wrong": [426, 431], "wrote": 431, "x": [162, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 379, 424, 427, 431, 432, 434, 435, 437, 438], "x0": 410, "x1": 410, "x2": 410, "x3": 410, "x_clone": 434, "x_detach": 434, "x_plus_i": 434, "x_train": 438, "x_valid": 438, "xgboost": 437, "xlabel": [427, 437], "xxx": 422, "xy": 434, "y": [424, 427, 431, 434, 435, 437, 438], "y2": 434, "y_hat": 437, "y_train": 438, "y_valid": 438, "ye": [420, 426, 431], "yes_or_no_choic": 420, "yes_or_no_filt": 420, "yield": [433, 438], "ylabel": [427, 437], "you": [16, 19, 26, 60, 64, 67, 74, 79, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438], "your": [19, 67, 422, 424, 425, 426, 427, 431, 432, 433, 436, 437, 438], "z": [426, 427, 434], "z2": 434, "zero": [228, 278, 320, 375, 424, 427, 434, 438], "zero_feedback": [424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438], "zip": [434, 435, 437], "zou": 96}, "titles": ["&lt;no title&gt;", "opto", "opto.optimizers", "opto.optimizers.buffers", "opto.optimizers.buffers.FIFOBuffer", "opto.optimizers.buffers.FIFOBuffer.add", "opto.optimizers.opro", "opto.optimizers.opro.OPRO", "opto.optimizers.opro.OPRO.backward", "opto.optimizers.opro.OPRO.call_llm", "opto.optimizers.opro.OPRO.construct_prompt", "opto.optimizers.opro.OPRO.construct_update_dict", "opto.optimizers.opro.OPRO.default_objective", "opto.optimizers.opro.OPRO.default_prompt_symbols", "opto.optimizers.opro.OPRO.default_propagator", "opto.optimizers.opro.OPRO.example_problem_template", "opto.optimizers.opro.OPRO.example_prompt", "opto.optimizers.opro.OPRO.extract_llm_suggestion", "opto.optimizers.opro.OPRO.final_prompt", "opto.optimizers.opro.OPRO.output_format_prompt", "opto.optimizers.opro.OPRO.problem_instance", "opto.optimizers.opro.OPRO.propagator", "opto.optimizers.opro.OPRO.propose", "opto.optimizers.opro.OPRO.replace_symbols", "opto.optimizers.opro.OPRO.repr_node_constraint", "opto.optimizers.opro.OPRO.repr_node_value", "opto.optimizers.opro.OPRO.representation_prompt", "opto.optimizers.opro.OPRO.step", "opto.optimizers.opro.OPRO.summarize", "opto.optimizers.opro.OPRO.trace_graph", "opto.optimizers.opro.OPRO.update", "opto.optimizers.opro.OPRO.user_prompt_template", "opto.optimizers.opro.OPRO.zero_feedback", "opto.optimizers.optimizer", "opto.optimizers.optimizer.AbstractOptimizer", "opto.optimizers.optimizer.AbstractOptimizer.propagator", "opto.optimizers.optimizer.AbstractOptimizer.step", "opto.optimizers.optimizer.AbstractOptimizer.zero_feedback", "opto.optimizers.optimizer.Optimizer", "opto.optimizers.optimizer.Optimizer.backward", "opto.optimizers.optimizer.Optimizer.default_propagator", "opto.optimizers.optimizer.Optimizer.propagator", "opto.optimizers.optimizer.Optimizer.propose", "opto.optimizers.optimizer.Optimizer.step", "opto.optimizers.optimizer.Optimizer.trace_graph", "opto.optimizers.optimizer.Optimizer.update", "opto.optimizers.optimizer.Optimizer.zero_feedback", "opto.optimizers.optoprime", "opto.optimizers.optoprime.FunctionFeedback", "opto.optimizers.optoprime.FunctionFeedback.documentation", "opto.optimizers.optoprime.FunctionFeedback.graph", "opto.optimizers.optoprime.FunctionFeedback.others", "opto.optimizers.optoprime.FunctionFeedback.output", "opto.optimizers.optoprime.FunctionFeedback.roots", "opto.optimizers.optoprime.FunctionFeedback.user_feedback", "opto.optimizers.optoprime.OptoPrime", "opto.optimizers.optoprime.OptoPrime.backward", "opto.optimizers.optoprime.OptoPrime.call_llm", "opto.optimizers.optoprime.OptoPrime.construct_prompt", "opto.optimizers.optoprime.OptoPrime.construct_update_dict", "opto.optimizers.optoprime.OptoPrime.default_objective", "opto.optimizers.optoprime.OptoPrime.default_prompt_symbols", "opto.optimizers.optoprime.OptoPrime.default_propagator", "opto.optimizers.optoprime.OptoPrime.example_problem_template", "opto.optimizers.optoprime.OptoPrime.example_prompt", "opto.optimizers.optoprime.OptoPrime.extract_llm_suggestion", "opto.optimizers.optoprime.OptoPrime.final_prompt", "opto.optimizers.optoprime.OptoPrime.output_format_prompt", "opto.optimizers.optoprime.OptoPrime.problem_instance", "opto.optimizers.optoprime.OptoPrime.propagator", "opto.optimizers.optoprime.OptoPrime.propose", "opto.optimizers.optoprime.OptoPrime.replace_symbols", "opto.optimizers.optoprime.OptoPrime.repr_node_constraint", "opto.optimizers.optoprime.OptoPrime.repr_node_value", "opto.optimizers.optoprime.OptoPrime.representation_prompt", "opto.optimizers.optoprime.OptoPrime.step", "opto.optimizers.optoprime.OptoPrime.summarize", "opto.optimizers.optoprime.OptoPrime.trace_graph", "opto.optimizers.optoprime.OptoPrime.update", "opto.optimizers.optoprime.OptoPrime.user_prompt_template", "opto.optimizers.optoprime.OptoPrime.zero_feedback", "opto.optimizers.optoprime.ProblemInstance", "opto.optimizers.optoprime.ProblemInstance.code", "opto.optimizers.optoprime.ProblemInstance.constraints", "opto.optimizers.optoprime.ProblemInstance.documentation", "opto.optimizers.optoprime.ProblemInstance.feedback", "opto.optimizers.optoprime.ProblemInstance.inputs", "opto.optimizers.optoprime.ProblemInstance.instruction", "opto.optimizers.optoprime.ProblemInstance.others", "opto.optimizers.optoprime.ProblemInstance.outputs", "opto.optimizers.optoprime.ProblemInstance.problem_template", "opto.optimizers.optoprime.ProblemInstance.variables", "opto.optimizers.optoprime.get_fun_name", "opto.optimizers.optoprime.node_to_function_feedback", "opto.optimizers.optoprime.repr_function_call", "opto.optimizers.textgrad", "opto.optimizers.textgrad.GRADIENT_MULTIPART_TEMPLATE", "opto.optimizers.textgrad.GRADIENT_OF_RESULTS_INSTRUCTION", "opto.optimizers.textgrad.GradientInfo", "opto.optimizers.textgrad.GradientInfo.gradient", "opto.optimizers.textgrad.GradientInfo.gradient_context", "opto.optimizers.textgrad.TextGrad", "opto.optimizers.textgrad.TextGrad.backward", "opto.optimizers.textgrad.TextGrad.call_llm", "opto.optimizers.textgrad.TextGrad.default_propagator", "opto.optimizers.textgrad.TextGrad.propagator", "opto.optimizers.textgrad.TextGrad.propose", "opto.optimizers.textgrad.TextGrad.step", "opto.optimizers.textgrad.TextGrad.trace_graph", "opto.optimizers.textgrad.TextGrad.update", "opto.optimizers.textgrad.TextGrad.zero_feedback", "opto.optimizers.textgrad.construct_reduce_prompt", "opto.optimizers.textgrad.construct_tgd_prompt", "opto.optimizers.textgrad.get_short_value", "opto.optimizers.textgrad.rm_node_attrs", "opto.optimizers.utils", "opto.optimizers.utils.print_color", "opto.trace", "opto.trace.broadcast", "opto.trace.broadcast.apply_op", "opto.trace.broadcast.recursive_conversion", "opto.trace.bundle", "opto.trace.containers", "opto.trace.containers.Map", "opto.trace.containers.Map.clear", "opto.trace.containers.Map.copy", "opto.trace.containers.Map.fromkeys", "opto.trace.containers.Map.get", "opto.trace.containers.Map.items", "opto.trace.containers.Map.keys", "opto.trace.containers.Map.parameters", "opto.trace.containers.Map.parameters_dict", "opto.trace.containers.Map.pop", "opto.trace.containers.Map.popitem", "opto.trace.containers.Map.setdefault", "opto.trace.containers.Map.update", "opto.trace.containers.Map.values", "opto.trace.containers.NodeContainer", "opto.trace.containers.ParameterContainer", "opto.trace.containers.ParameterContainer.parameters", "opto.trace.containers.ParameterContainer.parameters_dict", "opto.trace.containers.Seq", "opto.trace.containers.Seq.append", "opto.trace.containers.Seq.clear", "opto.trace.containers.Seq.copy", "opto.trace.containers.Seq.count", "opto.trace.containers.Seq.extend", "opto.trace.containers.Seq.index", "opto.trace.containers.Seq.insert", "opto.trace.containers.Seq.parameters", "opto.trace.containers.Seq.parameters_dict", "opto.trace.containers.Seq.pop", "opto.trace.containers.Seq.remove", "opto.trace.containers.Seq.reverse", "opto.trace.containers.Seq.sort", "opto.trace.containers.trainable_method", "opto.trace.errors", "opto.trace.errors.ExecutionError", "opto.trace.errors.TraceMissingInputsError", "opto.trace.iterators", "opto.trace.iterators.DictIterable", "opto.trace.iterators.SeqIterable", "opto.trace.iterators.iterate", "opto.trace.modules", "opto.trace.modules.Module", "opto.trace.modules.Module.forward", "opto.trace.modules.Module.load", "opto.trace.modules.Module.parameters", "opto.trace.modules.Module.parameters_dict", "opto.trace.modules.Module.save", "opto.trace.modules.model", "opto.trace.nodes", "opto.trace.nodes.AbstractNode", "opto.trace.nodes.AbstractNode.children", "opto.trace.nodes.AbstractNode.data", "opto.trace.nodes.AbstractNode.gt", "opto.trace.nodes.AbstractNode.id", "opto.trace.nodes.AbstractNode.is_leaf", "opto.trace.nodes.AbstractNode.is_root", "opto.trace.nodes.AbstractNode.level", "opto.trace.nodes.AbstractNode.lt", "opto.trace.nodes.AbstractNode.name", "opto.trace.nodes.AbstractNode.parents", "opto.trace.nodes.AbstractNode.py_name", "opto.trace.nodes.ExceptionNode", "opto.trace.nodes.ExceptionNode.append", "opto.trace.nodes.ExceptionNode.backward", "opto.trace.nodes.ExceptionNode.call", "opto.trace.nodes.ExceptionNode.capitalize", "opto.trace.nodes.ExceptionNode.children", "opto.trace.nodes.ExceptionNode.clone", "opto.trace.nodes.ExceptionNode.create_feedback", "opto.trace.nodes.ExceptionNode.data", "opto.trace.nodes.ExceptionNode.description", "opto.trace.nodes.ExceptionNode.detach", "opto.trace.nodes.ExceptionNode.eq", "opto.trace.nodes.ExceptionNode.expandable_dependencies", "opto.trace.nodes.ExceptionNode.feedback", "opto.trace.nodes.ExceptionNode.format", "opto.trace.nodes.ExceptionNode.getattr", "opto.trace.nodes.ExceptionNode.gt", "opto.trace.nodes.ExceptionNode.hidden_dependencies", "opto.trace.nodes.ExceptionNode.id", "opto.trace.nodes.ExceptionNode.info", "opto.trace.nodes.ExceptionNode.inputs", "opto.trace.nodes.ExceptionNode.is_leaf", "opto.trace.nodes.ExceptionNode.is_root", "opto.trace.nodes.ExceptionNode.items", "opto.trace.nodes.ExceptionNode.join", "opto.trace.nodes.ExceptionNode.keys", "opto.trace.nodes.ExceptionNode.len", "opto.trace.nodes.ExceptionNode.level", "opto.trace.nodes.ExceptionNode.lower", "opto.trace.nodes.ExceptionNode.lt", "opto.trace.nodes.ExceptionNode.name", "opto.trace.nodes.ExceptionNode.neq", "opto.trace.nodes.ExceptionNode.parameter_dependencies", "opto.trace.nodes.ExceptionNode.parents", "opto.trace.nodes.ExceptionNode.pop", "opto.trace.nodes.ExceptionNode.py_name", "opto.trace.nodes.ExceptionNode.replace", "opto.trace.nodes.ExceptionNode.split", "opto.trace.nodes.ExceptionNode.strip", "opto.trace.nodes.ExceptionNode.swapcase", "opto.trace.nodes.ExceptionNode.title", "opto.trace.nodes.ExceptionNode.type", "opto.trace.nodes.ExceptionNode.upper", "opto.trace.nodes.ExceptionNode.values", "opto.trace.nodes.ExceptionNode.zero_feedback", "opto.trace.nodes.Graph", "opto.trace.nodes.Graph.TRACE", "opto.trace.nodes.Graph.clear", "opto.trace.nodes.Graph.get", "opto.trace.nodes.Graph.register", "opto.trace.nodes.Graph.roots", "opto.trace.nodes.MessageNode", "opto.trace.nodes.MessageNode.append", "opto.trace.nodes.MessageNode.backward", "opto.trace.nodes.MessageNode.call", "opto.trace.nodes.MessageNode.capitalize", "opto.trace.nodes.MessageNode.children", "opto.trace.nodes.MessageNode.clone", "opto.trace.nodes.MessageNode.data", "opto.trace.nodes.MessageNode.description", "opto.trace.nodes.MessageNode.detach", "opto.trace.nodes.MessageNode.eq", "opto.trace.nodes.MessageNode.expandable_dependencies", "opto.trace.nodes.MessageNode.feedback", "opto.trace.nodes.MessageNode.format", "opto.trace.nodes.MessageNode.getattr", "opto.trace.nodes.MessageNode.gt", "opto.trace.nodes.MessageNode.hidden_dependencies", "opto.trace.nodes.MessageNode.id", "opto.trace.nodes.MessageNode.info", "opto.trace.nodes.MessageNode.inputs", "opto.trace.nodes.MessageNode.is_leaf", "opto.trace.nodes.MessageNode.is_root", "opto.trace.nodes.MessageNode.items", "opto.trace.nodes.MessageNode.join", "opto.trace.nodes.MessageNode.keys", "opto.trace.nodes.MessageNode.len", "opto.trace.nodes.MessageNode.level", "opto.trace.nodes.MessageNode.lower", "opto.trace.nodes.MessageNode.lt", "opto.trace.nodes.MessageNode.name", "opto.trace.nodes.MessageNode.neq", "opto.trace.nodes.MessageNode.parameter_dependencies", "opto.trace.nodes.MessageNode.parents", "opto.trace.nodes.MessageNode.pop", "opto.trace.nodes.MessageNode.py_name", "opto.trace.nodes.MessageNode.replace", "opto.trace.nodes.MessageNode.split", "opto.trace.nodes.MessageNode.strip", "opto.trace.nodes.MessageNode.swapcase", "opto.trace.nodes.MessageNode.title", "opto.trace.nodes.MessageNode.type", "opto.trace.nodes.MessageNode.upper", "opto.trace.nodes.MessageNode.values", "opto.trace.nodes.MessageNode.zero_feedback", "opto.trace.nodes.Node", "opto.trace.nodes.Node.append", "opto.trace.nodes.Node.backward", "opto.trace.nodes.Node.call", "opto.trace.nodes.Node.capitalize", "opto.trace.nodes.Node.children", "opto.trace.nodes.Node.clone", "opto.trace.nodes.Node.data", "opto.trace.nodes.Node.description", "opto.trace.nodes.Node.detach", "opto.trace.nodes.Node.eq", "opto.trace.nodes.Node.expandable_dependencies", "opto.trace.nodes.Node.feedback", "opto.trace.nodes.Node.format", "opto.trace.nodes.Node.getattr", "opto.trace.nodes.Node.gt", "opto.trace.nodes.Node.id", "opto.trace.nodes.Node.info", "opto.trace.nodes.Node.is_leaf", "opto.trace.nodes.Node.is_root", "opto.trace.nodes.Node.items", "opto.trace.nodes.Node.join", "opto.trace.nodes.Node.keys", "opto.trace.nodes.Node.len", "opto.trace.nodes.Node.level", "opto.trace.nodes.Node.lower", "opto.trace.nodes.Node.lt", "opto.trace.nodes.Node.name", "opto.trace.nodes.Node.neq", "opto.trace.nodes.Node.parameter_dependencies", "opto.trace.nodes.Node.parents", "opto.trace.nodes.Node.pop", "opto.trace.nodes.Node.py_name", "opto.trace.nodes.Node.replace", "opto.trace.nodes.Node.split", "opto.trace.nodes.Node.strip", "opto.trace.nodes.Node.swapcase", "opto.trace.nodes.Node.title", "opto.trace.nodes.Node.type", "opto.trace.nodes.Node.upper", "opto.trace.nodes.Node.values", "opto.trace.nodes.Node.zero_feedback", "opto.trace.nodes.NodeVizStyleGuide", "opto.trace.nodes.NodeVizStyleGuide.get_attrs", "opto.trace.nodes.NodeVizStyleGuide.get_color", "opto.trace.nodes.NodeVizStyleGuide.get_label", "opto.trace.nodes.NodeVizStyleGuide.get_node_shape", "opto.trace.nodes.NodeVizStyleGuide.get_style", "opto.trace.nodes.NodeVizStyleGuideColorful", "opto.trace.nodes.NodeVizStyleGuideColorful.get_attrs", "opto.trace.nodes.NodeVizStyleGuideColorful.get_border_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_color", "opto.trace.nodes.NodeVizStyleGuideColorful.get_label", "opto.trace.nodes.NodeVizStyleGuideColorful.get_node_shape", "opto.trace.nodes.NodeVizStyleGuideColorful.get_style", "opto.trace.nodes.ParameterNode", "opto.trace.nodes.ParameterNode.append", "opto.trace.nodes.ParameterNode.backward", "opto.trace.nodes.ParameterNode.call", "opto.trace.nodes.ParameterNode.capitalize", "opto.trace.nodes.ParameterNode.children", "opto.trace.nodes.ParameterNode.clone", "opto.trace.nodes.ParameterNode.data", "opto.trace.nodes.ParameterNode.description", "opto.trace.nodes.ParameterNode.detach", "opto.trace.nodes.ParameterNode.eq", "opto.trace.nodes.ParameterNode.expandable_dependencies", "opto.trace.nodes.ParameterNode.feedback", "opto.trace.nodes.ParameterNode.format", "opto.trace.nodes.ParameterNode.getattr", "opto.trace.nodes.ParameterNode.gt", "opto.trace.nodes.ParameterNode.id", "opto.trace.nodes.ParameterNode.info", "opto.trace.nodes.ParameterNode.is_leaf", "opto.trace.nodes.ParameterNode.is_root", "opto.trace.nodes.ParameterNode.items", "opto.trace.nodes.ParameterNode.join", "opto.trace.nodes.ParameterNode.keys", "opto.trace.nodes.ParameterNode.len", "opto.trace.nodes.ParameterNode.level", "opto.trace.nodes.ParameterNode.lower", "opto.trace.nodes.ParameterNode.lt", "opto.trace.nodes.ParameterNode.name", "opto.trace.nodes.ParameterNode.neq", "opto.trace.nodes.ParameterNode.parameter_dependencies", "opto.trace.nodes.ParameterNode.parents", "opto.trace.nodes.ParameterNode.pop", "opto.trace.nodes.ParameterNode.py_name", "opto.trace.nodes.ParameterNode.replace", "opto.trace.nodes.ParameterNode.split", "opto.trace.nodes.ParameterNode.strip", "opto.trace.nodes.ParameterNode.swapcase", "opto.trace.nodes.ParameterNode.title", "opto.trace.nodes.ParameterNode.type", "opto.trace.nodes.ParameterNode.upper", "opto.trace.nodes.ParameterNode.values", "opto.trace.nodes.ParameterNode.zero_feedback", "opto.trace.nodes.get_op_name", "opto.trace.nodes.node", "opto.trace.operators", "opto.trace.operators.identity", "opto.trace.propagators", "opto.trace.propagators.graph_propagator", "opto.trace.propagators.graph_propagator.GraphPropagator", "opto.trace.propagators.graph_propagator.GraphPropagator.aggregate", "opto.trace.propagators.graph_propagator.GraphPropagator.init_feedback", "opto.trace.propagators.graph_propagator.GraphPropagator.propagate", "opto.trace.propagators.graph_propagator.GraphPropagator.register", "opto.trace.propagators.graph_propagator.TraceGraph", "opto.trace.propagators.graph_propagator.TraceGraph.empty", "opto.trace.propagators.graph_propagator.TraceGraph.expand", "opto.trace.propagators.graph_propagator.TraceGraph.graph", "opto.trace.propagators.graph_propagator.TraceGraph.user_feedback", "opto.trace.propagators.graph_propagator.TraceGraph.visualize", "opto.trace.propagators.propagators", "opto.trace.propagators.propagators.AbstractFeedback", "opto.trace.propagators.propagators.AbstractPropagator", "opto.trace.propagators.propagators.AbstractPropagator.propagate", "opto.trace.propagators.propagators.Propagator", "opto.trace.propagators.propagators.Propagator.init_feedback", "opto.trace.propagators.propagators.Propagator.propagate", "opto.trace.propagators.propagators.Propagator.register", "opto.trace.propagators.propagators.SumPropagator", "opto.trace.propagators.propagators.SumPropagator.init_feedback", "opto.trace.propagators.propagators.SumPropagator.propagate", "opto.trace.propagators.propagators.SumPropagator.register", "opto.trace.stop_tracing", "opto.trace.utils", "opto.trace.utils.contain", "opto.trace.utils.escape_json_nested_quotes", "opto.trace.utils.for_all_methods", "opto.trace.utils.parse_eqs_to_dict", "opto.trace.utils.remove_non_ascii", "opto.trace.utils.render_opt_step", "opto.trace.utils.sum_feedback", "opto.trace.utils.test_json_quote_escaper", "opto.utils", "opto.utils.llm", "opto.utils.llm.AbstractModel", "opto.utils.llm.AbstractModel.model", "opto.utils.llm.AutoGenLLM", "opto.utils.llm.AutoGenLLM.create", "opto.utils.llm.AutoGenLLM.model", "opto.utils.llm.auto_construct_oai_config_list_from_env", "opto.version", "Single Agent: Battleship", "Multi-Agent: Negotiation Arena", "BigBench-Hard", "Meta-World", "FAQ", "\ud83c\udfaf Trace", "\ud83c\udf10  Installation", "\u26a1\ufe0f First: 5-Minute Basics", "\ud83d\ude80 Next: Adaptive Agent", "\ud83e\udd2f Finally: Emergent Behaviors", "Basics", "Building Custom Optimizer", "Error Handling", "Batch Optimization", "Optimization"], "titleterms": {"": [431, 433], "1": 435, "2": 435, "5": 431, "A": 432, "The": [431, 432], "abstractfeedback": 394, "abstractmodel": [417, 418], "abstractnod": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "abstractoptim": [34, 35, 36, 37], "abstractpropag": [395, 396], "action": 432, "ad": 438, "adapt": 432, "add": 5, "ag2": 428, "agent": [424, 425, 432, 433], "aggreg": 383, "all": [424, 426], "an": 432, "append": [142, 185, 236, 280, 335], "apply_op": 119, "architectur": 433, "arena": 425, "auto_construct_oai_config_list_from_env": 422, "autogen": 428, "autogenllm": [419, 420, 421], "back": 435, "backpropag": 438, "backward": [8, 39, 56, 102, 186, 237, 281, 336], "base": 435, "basic": [431, 434, 435], "batch": 437, "battleship": [424, 432], "battleshipboard": 424, "behavior": 433, "bigbench": 426, "broadcast": [118, 119, 120, 434], "buffer": [3, 4, 5], "build": 435, "bundl": [121, 425, 434], "call": [187, 238, 282, 337], "call_llm": [9, 57, 103], "capit": [188, 239, 283, 338], "chat": 425, "children": [173, 189, 240, 284, 339], "class": [424, 426], "clear": [124, 143, 231], "clone": [190, 241, 285, 340], "code": 82, "coder": 431, "command": 430, "commut": 437, "compon": 425, "constraint": [83, 438], "construct_prompt": [10, 58], "construct_reduce_prompt": 111, "construct_tgd_prompt": 112, "construct_update_dict": [11, 59], "contain": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 407], "copi": [125, 144], "count": 145, "creat": [420, 424], "create_feedback": 191, "custom": [434, 435], "data": [174, 192, 242, 286, 341, 434], "default_object": [12, 60], "default_prompt_symbol": [13, 61], "default_propag": [14, 40, 62, 104], "defin": [424, 425, 426, 432], "descent": 435, "descript": [193, 243, 287, 342], "detach": [194, 244, 288, 343], "develop": 430, "dictiter": 160, "did": 432, "differ": 428, "document": [49, 84], "emerg": 433, "empti": 388, "end_gam": 425, "environ": [424, 427], "eq": [195, 245, 289, 344], "error": [156, 157, 158, 436], "escape_json_nested_quot": 408, "evalu": [424, 426], "exampl": 438, "example_problem_templ": [15, 63], "example_prompt": [16, 64], "exceptionnod": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "execut": 427, "executionerror": 157, "expand": 389, "expandable_depend": [196, 246, 290, 345], "extend": 146, "extract_llm_suggest": [17, 65], "faq": 428, "feedback": [85, 197, 247, 291, 346, 431, 437], "fifobuff": [4, 5], "final": 433, "final_prompt": [18, 66], "first": 431, "for_all_method": 409, "format": [198, 248, 292, 347], "forward": 165, "framework": 431, "fromkei": 126, "full": 438, "function": [424, 425, 426, 427, 431, 438], "functionfeedback": [48, 49, 50, 51, 52, 53, 54], "game": [425, 432], "get": [127, 232], "get_attr": [322, 328], "get_border_color": 329, "get_color": [323, 330], "get_fun_nam": 92, "get_label": [324, 331], "get_node_shap": [325, 332], "get_op_nam": 376, "get_short_valu": 113, "get_styl": [326, 333], "getattr": [199, 249, 293, 348], "gradient": [99, 435], "gradient_context": 100, "gradient_multipart_templ": 96, "gradient_of_results_instruct": 97, "gradientinfo": [98, 99, 100], "graph": [50, 229, 230, 231, 232, 233, 234, 390, 432, 434], "graph_propag": [381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "graphpropag": [382, 383, 384, 385, 386], "gt": [175, 200, 250, 294, 349], "handl": 436, "hard": 426, "helper": [424, 425, 426], "hidden_depend": [201, 251], "hyper": 438, "i": 431, "id": [176, 202, 252, 295, 350], "ident": 379, "implement": 435, "index": 147, "info": [203, 253, 296, 351], "init_feedback": [384, 398, 402], "initi": 424, "input": [86, 204, 254], "insert": 148, "instal": [424, 427, 430], "instruct": 87, "introduct": [424, 425, 426, 427], "is_leaf": [177, 205, 255, 297, 352], "is_root": [178, 206, 256, 298, 353], "item": [128, 207, 257, 299, 354], "iter": [159, 160, 161, 162], "join": [208, 258, 300, 355], "kei": [129, 209, 259, 301, 356], "learn": 432, "len": [210, 260, 302, 357], "level": [179, 211, 261, 303, 358], "librari": 428, "like": 428, "llama": 428, "llm": [416, 417, 418, 419, 420, 421, 422], "load": [166, 431], "loop": 438, "lower": [212, 262, 304, 359], "lt": [180, 213, 263, 305, 360], "map": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "messagenod": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 434], "meta": 427, "minut": 431, "ml": 438, "model": [170, 418, 421, 438], "modul": [163, 164, 165, 166, 167, 168, 169, 170], "multi": [425, 433], "multipl": 424, "name": [181, 214, 264, 306, 361], "negoti": 425, "neq": [215, 265, 307, 362], "next": [431, 432, 433], "node": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 434], "node_to_function_feedback": 93, "nodecontain": 137, "nodevizstyleguid": [321, 322, 323, 324, 325, 326], "nodevizstyleguidecolor": [327, 328, 329, 330, 331, 332, 333], "non": 437, "normal": 431, "object": 435, "openai": 428, "oper": [378, 379, 434], "opro": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "optim": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 425, 426, 427, 431, 432, 433, 435, 437, 438], "opto": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "optoprim": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "other": [51, 88], "output": [52, 89], "output_format_prompt": [19, 67], "paramet": [130, 139, 149, 167, 438], "parameter_depend": [216, 266, 308, 363], "parametercontain": [138, 139, 140], "parameternod": [334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375], "parameters_dict": [131, 140, 150, 168], "parent": [182, 217, 267, 309, 364], "parse_eqs_to_dict": 410, "polici": 424, "pop": [132, 151, 218, 268, 310, 365], "popitem": 133, "print_color": 116, "pro": 433, "problem_inst": [20, 68], "problem_templ": 90, "probleminst": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "process": [427, 432], "program": 431, "prompt": 425, "propag": [21, 35, 41, 69, 105, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 435], "propos": [22, 42, 70, 106], "put": [424, 426], "py_nam": [183, 219, 269, 311, 366], "python": [431, 434], "pytorch": 435, "record": 433, "recursive_convers": 120, "regist": [233, 386, 400, 404], "reinforc": 432, "remov": 152, "remove_non_ascii": 411, "render_opt_step": 412, "replac": [220, 270, 312, 367], "replace_symbol": [23, 71], "repr_function_cal": 94, "repr_node_constraint": [24, 72], "repr_node_valu": [25, 73], "representation_prompt": [26, 74], "result": 433, "revers": 153, "rm_node_attr": 114, "rollout": [424, 427], "root": [53, 234], "runnabl": 431, "save": [169, 431], "seq": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "seqiter": 161, "set": 435, "setdefault": 134, "setup": [424, 425, 426, 427], "singl": 424, "social": 433, "sort": 154, "split": [221, 271, 313, 368], "stack": 428, "start": 431, "step": [27, 36, 43, 75, 107], "stop_trac": 405, "string": 438, "strip": [222, 272, 314, 369], "structur": 434, "sum_feedback": 413, "summar": [28, 76], "sumpropag": [401, 402, 403, 404], "swapcas": [223, 273, 315, 370], "swarm": 428, "synchron": 433, "test_json_quote_escap": 414, "textgrad": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 428], "thi": 431, "titl": [224, 274, 316, 371], "togeth": [424, 426], "trace": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 426, 427, 429, 431, 432, 435], "trace_graph": [29, 44, 77, 108], "tracegraph": [387, 388, 389, 390, 391, 392], "tracemissinginputserror": 158, "trainabl": 424, "trainable_method": 155, "type": [225, 275, 317, 372], "up": 435, "updat": [30, 45, 78, 109, 135], "upper": [226, 276, 318, 373], "us": [425, 427, 431, 432, 434], "user_feedback": [54, 391], "user_prompt_templ": [31, 79], "util": [115, 116, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "valu": [136, 227, 277, 319, 374], "variabl": 91, "verifi": 431, "version": [423, 435], "virtualhom": 433, "visual": [392, 432, 434], "what": [431, 432, 433], "world": 427, "wrap": [424, 425], "write": 434, "zero_feedback": [32, 37, 46, 80, 110, 228, 278, 320, 375]}})